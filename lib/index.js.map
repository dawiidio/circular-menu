{"version":3,"sources":["webpack://oMenu/webpack/universalModuleDefinition","webpack://oMenu/webpack/bootstrap","webpack://oMenu/./config/defaults.js","webpack://oMenu/./helpers/utils.js","webpack://oMenu/./interfaces/IEvent.js","webpack://oMenu/../node_modules/color-convert/conversions.js","webpack://oMenu/../node_modules/color-name/index.js","webpack://oMenu/./helpers/oMenuEvents.js","webpack://oMenu/./interfaces/ISlice.js","webpack://oMenu/../node_modules/object-to-css/index.js","webpack://oMenu/./elements/Slice.js","webpack://oMenu/./helpers/OMenuEventEmitter.js","webpack://oMenu/./elements/OMenuElement.js","webpack://oMenu/./helpers/positioningFunctions.js","webpack://oMenu/../node_modules/color-convert/route.js","webpack://oMenu/../node_modules/color-convert/index.js","webpack://oMenu/../node_modules/is-arrayish/index.js","webpack://oMenu/../node_modules/simple-swizzle/index.js","webpack://oMenu/../node_modules/color-string/index.js","webpack://oMenu/../node_modules/color/index.js","webpack://oMenu/./elements/NthLevelSlice.js","webpack://oMenu/../node_modules/hyphenate-style-name/index.js","webpack://oMenu/../node_modules/add-px-to-style/index.js","webpack://oMenu/./elements/FirstLevelSlice.js","webpack://oMenu/./interfaces/IOMenu.js","webpack://oMenu/../node_modules/svg.js/dist/svg.js","webpack://oMenu/./elements/OMenu.js","webpack://oMenu/./oMenu.js"],"names":["root","factory","exports","module","define","amd","window","installedModules","__webpack_require__","moduleId","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","POSITION_MODES","fixed","relative","MENU_DEFAULTS","padding","positioningMode","elClass","circleDegOrigin","innerCircleWidth","innerCircleContent","firstLevelSliceWidth","nthLevelSliceWidth","menuShowTime","menuHideTime","closeMenuOn","styles","innerCircle","strokeColor","strokeWidth","fill","hidden","zIndex","visibility","visible","defaults","SLICE_DEFAULTS","contentSize","contentMoveX","contentMoveY","parentFillMode","iconDistanceFromInnerCircle","content","sliceClass","sliceShowTime","sliceHideTime","slices","cursor","contentContainer","color","fontSize","hover","SLICE_EVENTS","OPTIONS_DEFAULTS","menu","slice","nthSlice","mouseEnter","mouseLeave","click","EXTERNAL_API_EVENTS","NATIVE_SLICE_EVENTS","mouseover","mouseout","sliceClick","sliceEnter","sliceLeave","openMenu","closeMenu","hideAnimationEnd","showAnimationEnd","INTERNAL_EXTERNAL_EVENTS_MAPPING","_defineProperty","_INTERNAL_EXTERNAL_EV","percentsToDeg","setStyles","node","keys","forEach","style","randomInRange","min","max","Math","floor","random","degToRad","deg","PI","radToDeg","rad","percents","generatePart","sliceToDeg","part","toString","length","generateColor","join","getCoordinatesForRads","origin","rads","x","cos","y","sin","createElementNS","elementName","attrs","arguments","undefined","el","document","setAttributeNS","dumpExtend","a","b","temp","concat","Set","val","push","_typeof","Array","isArray","hasNestedSlices","slicesArr","reduce","recursivelyForEachSlices","arr","cb","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","iterator","next","done","err","return","IEvent","_classCallCheck","this","originalEvent","type","data","target","cssKeywords","reverseKeywords","convert","rgb","channels","labels","hsl","hsv","hwb","cmyk","xyz","lab","lch","hex","keyword","ansi16","ansi256","hcg","apple","gray","model","Error","h","g","delta","k","reversed","currentClosestKeyword","currentClosestDistance","Infinity","distance","pow","z","t1","t2","t3","smin","lmin","v","hi","f","q","sl","vmin","wh","bl","ratio","y2","x2","z2","atan2","sqrt","hr","args","round","ansi","mult","rem","string","toUpperCase","substring","match","colorString","split","map","char","integer","parseInt","grayscale","hue","chroma","mg","pure","w","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","OMenuSliceEvent","_ref","_this","_possibleConstructorReturn","__proto__","getPrototypeOf","values","_defaults","includes","options","OMenuExternalEvent","event","propsToChange","_this2","assign","_extends","_event$originalEvent","isSlice","ISlice","addPx","hyphenate","obj","len","result","Slice","svg","parent","group","number","clickValue","coords","arcStart","arcEnd","pathArray","rotateStepDeg","isSlicesOpen","radius","degForStep","parentDeg","startArcRad","radForStep","endArcRad","_utils","radiusWithPadding","_coords$arcStart","_slicedToArray","startX","startY","_coords$arcEnd","endX","endY","draw","innerCircleRadius","parentRad","parentFill","addClass","path","drawContent","rotate","scale","bindCallbacks","_coords$content","contentX","contentY","width","height","transform","abs","contentElement","calculatedStyles","pointerEvents","innerHTML","_objectToCss2","default","appendChild","_this3","eventName","on","ev","preventDefault","stopPropagation","triggerEvent","_oMenuEvents","_this4","off","remove","_this5","time","Promise","resolve","animate","after","hide","_this6","OMenuEventEmitter","subscriptions","events","callback","idx","indexOf","splice","eventType","OMenuElement","positioningFunctions","targetElement","menuInstance","position","_targetElement$getBou","getBoundingClientRect","bcrX","bcrY","targetElementWidth","targetElementHeight","targetElementX","scrollX","targetElementY","scrollY","positionX","pageX","positionY","pageY","size","top","left","_positioningFunctions","_ref2","innerWidth","innerHeight","conversions","deriveBFS","fromModel","graph","models","buildGraph","queue","current","pop","adjacents","adjacent","unshift","link","from","to","wrapConversion","toModel","fn","cur","conversion","route","routes","wrappedFn","wrapRounded","raw","wrapRaw","Function","getOwnPropertyDescriptor","constructor","isArrayish","swizzle","results","arg","wrap","colorNames","reverseNames","cs","clamp","num","hexDouble","str","toLowerCase","hexAlpha","i2","parseFloat","alpha","isNaN","rgba","percent","hsla","hwba","_slice","skippedModels","hashedModelKeys","sort","limiters","Color","valpha","newArr","zeroArray","hashedKeys","JSON","stringify","limit","freeze","getset","channel","modifier","maxfn","toJSON","places","self","percentString","array","unitArray","unitObject","Number","toFixed","roundTo","roundToPlace","saturationl","lightness","saturationv","wblack","rgbNumber","luminosity","lum","chan","contrast","color2","lum1","lum2","level","contrastRatio","dark","light","negate","lighten","darken","saturate","desaturate","whiten","blacken","fade","opaquer","degrees","mix","mixinColor","weight","color1","w1","w2","newAlpha","NthLevelSlice","bgColorCalculatedFromParent","_color2","fnName","opacity","uppercasePattern","msPattern","cache","replace","IS_UNITLESS","animationIterationCount","boxFlex","boxFlexGroup","boxOrdinalGroup","columnCount","flex","flexGrow","flexPositive","flexShrink","flexNegative","flexOrder","gridRow","gridColumn","fontWeight","lineClamp","lineHeight","order","orphans","tabSize","widows","zoom","fillOpacity","stopOpacity","strokeDashoffset","strokeOpacity","FirstLevelSlice","IOMenu","__WEBPACK_AMD_DEFINE_RESULT__","SVG","element","supported","Doc","parser","prepare","xmlns","xlink","svgjs","createSVGRect","did","eid","capitalize","setAttribute","extend","methods","inherit","invent","config","initializer","construct","Container","adopt","instance","nodeName","parentNode","SVGElement","Nested","Gradient","Element","namespace","defs","setData","parse","getAttribute","body","getElementsByTagName","documentElement","nested","poly","polyline","native","addEventListener","regex","numberAndUnit","reference","transforms","whitespace","isHex","isRgb","isCss","isBlank","isNumber","isPercent","isImage","delimiter","hyphen","pathLetters","isPathLetter","numbersWithDots","dots","utils","block","il","filter","radians","filterSVGElements","nodes","fill-opacity","stroke-opacity","stroke-width","stroke-linejoin","stroke-linecap","stroke","cx","cy","rx","ry","offset","stop-opacity","stop-color","font-size","font-family","text-anchor","test","exec","toHex","compToHex","toRgb","brightness","morph","destination","at","pos","isColor","fallback","valueOf","lastValue","lastDestination","settle","seen","trim","reverse","clone","array_clone","PointArray","toLine","x1","y1","points","move","box","bbox","getBBox","pathHandlers","M","p0","L","H","V","C","S","Q","T","Z","A","mlhvqtcsa","j","jl","PathArray","arrayToString","equalCommands","sourceArray","destinationArray","paramCnt","pathRegReplace","prev","curr","Point","index","unit","isFinite","plus","minus","times","divide","_stroke","_event","dom","attr","center","proportionalSize","writeDataToDom","assignNewId","cloneNode","add","removeElement","addTo","put","putIn","id","inside","show","classes","hasClass","removeClass","toggleClass","matches","doc","parents","selector","matchesSelector","msMatchesSelector","mozMatchesSelector","webkitMatchesSelector","oMatchesSelector","well","createElement","Parent","firstChild","childNodes","each","lines","removeAttribute","is","easing","-","<>",">","<","MorphObj","Situation","init","reversing","duration","delay","start","Date","finish","ease","loop","loops","animations","once","FX","_target","situations","active","situation","paused","lastPos","absPos","_speed","timeToAbsPos","timestamp","absPosToTime","startAnimFrame","stopAnimFrame","animationFrame","requestAnimationFrame","step","cancelAnimationFrame","startCurrent","initAnimations","shift","dequeue","stop","source","initialTransformation","matrixify","clearQueue","clearCurrent","jumpToEnd","atEnd","reset","atStart","isAbsPos","durDivSpd","speed","pause","last","play","progress","easeIt","wrapper","e","detail","_callStart","during","eased","afterAll","duringAll","method","ignoreTime","absPosInt","lastLoop","Boolean","fire","fx","eachAt","apply","Matrix","multiply","undo","extract","matrix","isEased","setTimeout","real","G","Text","plot","leading","viewbox","ViewBox","update","Stop","Box","fullBox","merge","xMin","xMax","yMin","yMax","pts","BBox","contains","Exception","topParent","Shape","clientLeft","clientTop","clientWidth","clientHeight","tbox","console","warn","rbox","RBox","addOffset","pageXOffset","pageYOffset","screenCTM","inverse","base","arrayToMatrix","abcdef","px","deltaTransformPoint","py","skewX","transformedX","transformedY","skewY","scaleX","scaleY","rotation","parseMatrix","translate","around","flip","skew","createSVGMatrix","float32String","ctm","getCTM","rect","getScreenCTM","point","createSVGPoint","matrixTransform","attributes","nodeValue","image","Image","pattern","rebuild","ensureCentre","Rotate","Scale","Skew","Translate","untransform","kv","toParent","pCtm","toDoc","Transformation","inversed","params","_undo","cssText","camelCase","children","insertBefore","has","first","deep","removeChild","clear","hasChildNodes","lastChild","_defs","ungroup","depth","Defs","flatten","view","we","he","wm","hm","reg","offsetWidth","offsetHeight","listeners","handlerMap","listenerId","listener","binding","_svgjsListenerId","removeEventListener","Event","dispatchEvent","CustomEvent","cancelable","gbox","trans","getElementById","version","spof","nextSibling","siblings","previous","forward","backward","front","back","before","Mask","targets","unmask","mask","maskWith","masker","ClipPath","unclip","clip","clipWith","clipper","gradient","fy","Pattern","patternUnits","Bare","words","text","createTextNode","symbol","Use","file","use","Rect","Circle","circle","Ellipse","ellipse","Line","line","Polyline","Polygon","polygon","_array","morphArray","Path","load","url","img","_loaded","_error","src","loaded","error","_rebuild","_build","oy","nodeType","newLined","textContent","build","tspan","newLine","textPath","blankLineOffset","dy","plain","Tspan","dx","getComputedTextLength","TextPath","track","linkTo","Marker","ref","marker","sugar","prefix","charAt","comp","extension","dmove","getTotalLength","pointAt","getPointAtLength","font","members","elements","set","remember","memory","forget","_memory","idFromReference","select","query","querySelectorAll","CustomEventPoly","bubbles","createEvent","initCustomEvent","lastTime","vendors","currTime","getTime","timeToCall","clearTimeout","Menu","_svg2","_this$options","innerCircleDiameter","createInnerCircle","destroy","sliceTime","promisesArr","all","then","childrenPromisesArr","hideChildrens","userOptions","isOpen","pendingAnimation","defaultInstanceOptions","api","_OMenuEventEmitter","_class","_inherits","_createClass","_OMenuEventEmitter2","close","sendEvent","reject","open","dynamicOptions","instanceOptions","defaultOptions","mappedSlices","newMenuInstance","_OMenu2","createSlices","sliceOptions","isFirstLvl","_FirstLevelSlice2","_NthLevelSlice2","pushSlice","createInstance","trigger"],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"oMenu\"] = factory();\n\telse\n\t\troot[\"oMenu\"] = factory();\n})(window, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 25);\n","export const POSITION_MODES = {\n    fixed: 'relativeToScreen',\n    relative: 'relativeToParent',\n};\n\nexport const MENU_DEFAULTS = {\n    padding : 10,\n    positioningMode: POSITION_MODES.relative,\n    elClass : 'circle-menu',\n    circleDegOrigin: -90,\n    innerCircleWidth: 45,\n    innerCircleContent: ``,\n    firstLevelSliceWidth: 70,\n    nthLevelSliceWidth: 50,\n    menuShowTime: 100,\n    menuHideTime: 100,\n    closeMenuOn: 'click',\n    styles : {\n        innerCircle: {\n            strokeColor: '',\n            strokeWidth: '',\n            fill: '#fff',\n        },\n        hidden : {\n            zIndex: -1,\n            visibility: 'hidden'\n        },\n        visible: {\n            zIndex: 9999,\n            visibility: 'visible'\n        },\n        defaults: {}\n    }\n};\n\nexport const SLICE_DEFAULTS = {\n    contentSize : 38,\n    contentMoveX: 0,\n    contentMoveY: 0,\n    parentFillMode : 0,\n    iconDistanceFromInnerCircle: 0,\n    content: null,\n    sliceClass : 'circle-slice',\n    sliceShowTime: 100,\n    sliceHideTime: 100,\n    slices: [],\n    value: null,\n    styles: {\n        defaults: {\n            cursor: 'pointer',\n            fill: '#f1f1f1'\n        },\n        contentContainer: {\n            color: 'red',\n            fontSize: 38,\n            cursor: 'pointer'\n        },\n        hover: {\n\n        }\n    }\n};\n\nexport const OPTIONS_DEFAULTS = {\n    menu                : MENU_DEFAULTS,\n    slice               : SLICE_DEFAULTS,\n    nthSlice            : SLICE_DEFAULTS,\n    slices              : [],\n};\n\nexport const SLICE_EVENTS = {\n    mouseEnter: 'mouseEnter',\n    mouseLeave: 'mouseLeave',\n    click: 'click',\n};\n\nexport const NATIVE_SLICE_EVENTS = {\n    mouseover: SLICE_EVENTS.mouseEnter,\n    mouseout: SLICE_EVENTS.mouseLeave,\n    click: SLICE_EVENTS.click,\n};\n\nexport const EXTERNAL_API_EVENTS = {\n    sliceClick: 'sliceClick',\n    sliceEnter: 'sliceEnter',\n    sliceLeave: 'sliceLeave',\n    openMenu: 'openMenu',\n    closeMenu: 'closeMenu',\n    hideAnimationEnd: 'hideAnimationEnd',\n    showAnimationEnd: 'showAnimationEnd',\n};\n\nexport const INTERNAL_EXTERNAL_EVENTS_MAPPING = {\n    [SLICE_EVENTS.mouseEnter]: EXTERNAL_API_EVENTS.sliceEnter,\n    [SLICE_EVENTS.mouseLeave]: EXTERNAL_API_EVENTS.sliceLeave,\n    [SLICE_EVENTS.click]: EXTERNAL_API_EVENTS.sliceClick,\n};\n","/**\n *\n * @param {Node} node\n * @param {Object} styles\n */\n\n\nexport const setStyles     = (node, styles) => {\n    const keys = Object.keys(styles);\n\n    keys.forEach(key => node.style[key] = styles[key]);\n\n    return node;\n};\n\n\n/**\n *\n * @param {number} min\n * @param {number} max\n */\nexport const randomInRange = (min, max) => Math.floor(Math.random() * (max - min + 1)) + min;\n\n/**\n * convert degrees to radians\n *\n * @param deg {number}\n */\nexport const degToRad      = deg => deg * (Math.PI/180);\n\n/**\n * convert degrees to radians\n *\n * @param deg {number}\n */\nexport const radToDeg      = rad => (rad *180) / Math.PI;\n\n\n/**\n * convert percents to degrees\n *\n * @param percents {number}\n */\nexport const percentsToDeg = percents => (percents/100)*360;\n\n/**\n * Calculate arc angle of circle for every slice based on their amount\n *\n * @param slices {number}\n */\nexport const sliceToDeg    = slices => percentsToDeg(\n    ((360/slices) / 360) *100\n);\n\n/**\n * generate part for one color in hex notation like 3f, 48 etc.\n *\n * @returns {string}\n */\nexport const generatePart = () => {\n    let part = Math.floor(Math.random()*255).toString(16);\n    return part.length === 1 ? `0${part}` : part;\n};\n\n/**\n * Compose color from parts\n *\n * @returns {string}\n */\nexport const generateColor = () => ['#', generatePart(), generatePart(), generatePart()].join('');\n\n/**\n * calculate coords for slice angle\n *\n * @param origin {number}\n * @param r {number}\n * @param rads {number}\n * @returns {number[]}\n */\nexport const getCoordinatesForRads = (origin, r, rads) => {\n    const x = origin + r * Math.cos(rads);\n    const y = origin + r * Math.sin(rads);\n    return [x,y];\n};\n\n/**\n * Syntax sugar for document.createElementNS\n *\n * @param elementName {string}\n * @param attrs {object}\n * @returns {Element}\n */\nexport const createElementNS = (elementName, attrs = {}) => {\n    const el    = document.createElementNS(\"http://www.w3.org/2000/svg\", elementName);\n    const keys  = Object.keys(attrs);\n\n    keys.forEach( key => el.setAttributeNS(null, key, attrs[key]) );\n\n    return el;\n};\n\n/**\n * Small extend function for classes options\n *\n * @param a {object}\n * @param b {object}\n * @param c {object}\n * @returns {object}\n */\nexport const dumpExtend = (a, b = {}, c = {}) => {\n    let temp = Object.keys(b).concat(Object.keys(c));\n    let keys = [];\n\n    (new Set(temp)).forEach(val => keys.push(val))\n\n    keys.forEach(key => {\n        if(!c.hasOwnProperty(key))\n            return a[key] = b[key];\n        else {\n            if(typeof b[key] === 'object' && !!b[key] && !Array.isArray(b[key]))\n                a[key] = dumpExtend({}, b[key], c[key]);\n            else\n                a[key] = c[key];\n        }\n    });\n\n    return a;\n};\n\n/**\n *\n * @param {array} slicesArr\n * @returns {bool}\n */\nexport const hasNestedSlices = slicesArr => slicesArr.reduce((a, b) => a || !!(b.slices && b.slices.length), false);\n\n/**\n *\n * @param {array} arr\n * @param {string} key\n */\nexport const recursivelyForEachSlices = (arr, cb) => {\n\tlet val = null;\n\n\tfor(let slice of arr){\n\t\tcb(slice);\n\n\t\tif(slice.slices && slice.slices.length)\n\t\t    recursivelyForEachSlices(slice.slices, cb);\n\t}\n\n\treturn val;\n};\n","export class IEvent {\n    constructor(){\n        this.originalEvent = null;\n        this.type = null;\n        this.data = null;\n        this.target = null;\n    }\n}\n","/* MIT license */\nvar cssKeywords = require('color-name');\n\n// NOTE: conversions should only return primitive values (i.e. arrays, or\n//       values that give correct `typeof` results).\n//       do not use box values types (i.e. Number(), String(), etc.)\n\nvar reverseKeywords = {};\nfor (var key in cssKeywords) {\n\tif (cssKeywords.hasOwnProperty(key)) {\n\t\treverseKeywords[cssKeywords[key]] = key;\n\t}\n}\n\nvar convert = module.exports = {\n\trgb: {channels: 3, labels: 'rgb'},\n\thsl: {channels: 3, labels: 'hsl'},\n\thsv: {channels: 3, labels: 'hsv'},\n\thwb: {channels: 3, labels: 'hwb'},\n\tcmyk: {channels: 4, labels: 'cmyk'},\n\txyz: {channels: 3, labels: 'xyz'},\n\tlab: {channels: 3, labels: 'lab'},\n\tlch: {channels: 3, labels: 'lch'},\n\thex: {channels: 1, labels: ['hex']},\n\tkeyword: {channels: 1, labels: ['keyword']},\n\tansi16: {channels: 1, labels: ['ansi16']},\n\tansi256: {channels: 1, labels: ['ansi256']},\n\thcg: {channels: 3, labels: ['h', 'c', 'g']},\n\tapple: {channels: 3, labels: ['r16', 'g16', 'b16']},\n\tgray: {channels: 1, labels: ['gray']}\n};\n\n// hide .channels and .labels properties\nfor (var model in convert) {\n\tif (convert.hasOwnProperty(model)) {\n\t\tif (!('channels' in convert[model])) {\n\t\t\tthrow new Error('missing channels property: ' + model);\n\t\t}\n\n\t\tif (!('labels' in convert[model])) {\n\t\t\tthrow new Error('missing channel labels property: ' + model);\n\t\t}\n\n\t\tif (convert[model].labels.length !== convert[model].channels) {\n\t\t\tthrow new Error('channel and label counts mismatch: ' + model);\n\t\t}\n\n\t\tvar channels = convert[model].channels;\n\t\tvar labels = convert[model].labels;\n\t\tdelete convert[model].channels;\n\t\tdelete convert[model].labels;\n\t\tObject.defineProperty(convert[model], 'channels', {value: channels});\n\t\tObject.defineProperty(convert[model], 'labels', {value: labels});\n\t}\n}\n\nconvert.rgb.hsl = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar l;\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tl = (min + max) / 2;\n\n\tif (max === min) {\n\t\ts = 0;\n\t} else if (l <= 0.5) {\n\t\ts = delta / (max + min);\n\t} else {\n\t\ts = delta / (2 - max - min);\n\t}\n\n\treturn [h, s * 100, l * 100];\n};\n\nconvert.rgb.hsv = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar min = Math.min(r, g, b);\n\tvar max = Math.max(r, g, b);\n\tvar delta = max - min;\n\tvar h;\n\tvar s;\n\tvar v;\n\n\tif (max === 0) {\n\t\ts = 0;\n\t} else {\n\t\ts = (delta / max * 1000) / 10;\n\t}\n\n\tif (max === min) {\n\t\th = 0;\n\t} else if (r === max) {\n\t\th = (g - b) / delta;\n\t} else if (g === max) {\n\t\th = 2 + (b - r) / delta;\n\t} else if (b === max) {\n\t\th = 4 + (r - g) / delta;\n\t}\n\n\th = Math.min(h * 60, 360);\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tv = ((max / 255) * 1000) / 10;\n\n\treturn [h, s, v];\n};\n\nconvert.rgb.hwb = function (rgb) {\n\tvar r = rgb[0];\n\tvar g = rgb[1];\n\tvar b = rgb[2];\n\tvar h = convert.rgb.hsl(rgb)[0];\n\tvar w = 1 / 255 * Math.min(r, Math.min(g, b));\n\n\tb = 1 - 1 / 255 * Math.max(r, Math.max(g, b));\n\n\treturn [h, w * 100, b * 100];\n};\n\nconvert.rgb.cmyk = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar c;\n\tvar m;\n\tvar y;\n\tvar k;\n\n\tk = Math.min(1 - r, 1 - g, 1 - b);\n\tc = (1 - r - k) / (1 - k) || 0;\n\tm = (1 - g - k) / (1 - k) || 0;\n\ty = (1 - b - k) / (1 - k) || 0;\n\n\treturn [c * 100, m * 100, y * 100, k * 100];\n};\n\n/**\n * See https://en.m.wikipedia.org/wiki/Euclidean_distance#Squared_Euclidean_distance\n * */\nfunction comparativeDistance(x, y) {\n\treturn (\n\t\tMath.pow(x[0] - y[0], 2) +\n\t\tMath.pow(x[1] - y[1], 2) +\n\t\tMath.pow(x[2] - y[2], 2)\n\t);\n}\n\nconvert.rgb.keyword = function (rgb) {\n\tvar reversed = reverseKeywords[rgb];\n\tif (reversed) {\n\t\treturn reversed;\n\t}\n\n\tvar currentClosestDistance = Infinity;\n\tvar currentClosestKeyword;\n\n\tfor (var keyword in cssKeywords) {\n\t\tif (cssKeywords.hasOwnProperty(keyword)) {\n\t\t\tvar value = cssKeywords[keyword];\n\n\t\t\t// Compute comparative distance\n\t\t\tvar distance = comparativeDistance(rgb, value);\n\n\t\t\t// Check if its less, if so set as closest\n\t\t\tif (distance < currentClosestDistance) {\n\t\t\t\tcurrentClosestDistance = distance;\n\t\t\t\tcurrentClosestKeyword = keyword;\n\t\t\t}\n\t\t}\n\t}\n\n\treturn currentClosestKeyword;\n};\n\nconvert.keyword.rgb = function (keyword) {\n\treturn cssKeywords[keyword];\n};\n\nconvert.rgb.xyz = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\n\t// assume sRGB\n\tr = r > 0.04045 ? Math.pow(((r + 0.055) / 1.055), 2.4) : (r / 12.92);\n\tg = g > 0.04045 ? Math.pow(((g + 0.055) / 1.055), 2.4) : (g / 12.92);\n\tb = b > 0.04045 ? Math.pow(((b + 0.055) / 1.055), 2.4) : (b / 12.92);\n\n\tvar x = (r * 0.4124) + (g * 0.3576) + (b * 0.1805);\n\tvar y = (r * 0.2126) + (g * 0.7152) + (b * 0.0722);\n\tvar z = (r * 0.0193) + (g * 0.1192) + (b * 0.9505);\n\n\treturn [x * 100, y * 100, z * 100];\n};\n\nconvert.rgb.lab = function (rgb) {\n\tvar xyz = convert.rgb.xyz(rgb);\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.hsl.rgb = function (hsl) {\n\tvar h = hsl[0] / 360;\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar t1;\n\tvar t2;\n\tvar t3;\n\tvar rgb;\n\tvar val;\n\n\tif (s === 0) {\n\t\tval = l * 255;\n\t\treturn [val, val, val];\n\t}\n\n\tif (l < 0.5) {\n\t\tt2 = l * (1 + s);\n\t} else {\n\t\tt2 = l + s - l * s;\n\t}\n\n\tt1 = 2 * l - t2;\n\n\trgb = [0, 0, 0];\n\tfor (var i = 0; i < 3; i++) {\n\t\tt3 = h + 1 / 3 * -(i - 1);\n\t\tif (t3 < 0) {\n\t\t\tt3++;\n\t\t}\n\t\tif (t3 > 1) {\n\t\t\tt3--;\n\t\t}\n\n\t\tif (6 * t3 < 1) {\n\t\t\tval = t1 + (t2 - t1) * 6 * t3;\n\t\t} else if (2 * t3 < 1) {\n\t\t\tval = t2;\n\t\t} else if (3 * t3 < 2) {\n\t\t\tval = t1 + (t2 - t1) * (2 / 3 - t3) * 6;\n\t\t} else {\n\t\t\tval = t1;\n\t\t}\n\n\t\trgb[i] = val * 255;\n\t}\n\n\treturn rgb;\n};\n\nconvert.hsl.hsv = function (hsl) {\n\tvar h = hsl[0];\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar smin = s;\n\tvar lmin = Math.max(l, 0.01);\n\tvar sv;\n\tvar v;\n\n\tl *= 2;\n\ts *= (l <= 1) ? l : 2 - l;\n\tsmin *= lmin <= 1 ? lmin : 2 - lmin;\n\tv = (l + s) / 2;\n\tsv = l === 0 ? (2 * smin) / (lmin + smin) : (2 * s) / (l + s);\n\n\treturn [h, sv * 100, v * 100];\n};\n\nconvert.hsv.rgb = function (hsv) {\n\tvar h = hsv[0] / 60;\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar hi = Math.floor(h) % 6;\n\n\tvar f = h - Math.floor(h);\n\tvar p = 255 * v * (1 - s);\n\tvar q = 255 * v * (1 - (s * f));\n\tvar t = 255 * v * (1 - (s * (1 - f)));\n\tv *= 255;\n\n\tswitch (hi) {\n\t\tcase 0:\n\t\t\treturn [v, t, p];\n\t\tcase 1:\n\t\t\treturn [q, v, p];\n\t\tcase 2:\n\t\t\treturn [p, v, t];\n\t\tcase 3:\n\t\t\treturn [p, q, v];\n\t\tcase 4:\n\t\t\treturn [t, p, v];\n\t\tcase 5:\n\t\t\treturn [v, p, q];\n\t}\n};\n\nconvert.hsv.hsl = function (hsv) {\n\tvar h = hsv[0];\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\tvar vmin = Math.max(v, 0.01);\n\tvar lmin;\n\tvar sl;\n\tvar l;\n\n\tl = (2 - s) * v;\n\tlmin = (2 - s) * vmin;\n\tsl = s * vmin;\n\tsl /= (lmin <= 1) ? lmin : 2 - lmin;\n\tsl = sl || 0;\n\tl /= 2;\n\n\treturn [h, sl * 100, l * 100];\n};\n\n// http://dev.w3.org/csswg/css-color/#hwb-to-rgb\nconvert.hwb.rgb = function (hwb) {\n\tvar h = hwb[0] / 360;\n\tvar wh = hwb[1] / 100;\n\tvar bl = hwb[2] / 100;\n\tvar ratio = wh + bl;\n\tvar i;\n\tvar v;\n\tvar f;\n\tvar n;\n\n\t// wh + bl cant be > 1\n\tif (ratio > 1) {\n\t\twh /= ratio;\n\t\tbl /= ratio;\n\t}\n\n\ti = Math.floor(6 * h);\n\tv = 1 - bl;\n\tf = 6 * h - i;\n\n\tif ((i & 0x01) !== 0) {\n\t\tf = 1 - f;\n\t}\n\n\tn = wh + f * (v - wh); // linear interpolation\n\n\tvar r;\n\tvar g;\n\tvar b;\n\tswitch (i) {\n\t\tdefault:\n\t\tcase 6:\n\t\tcase 0: r = v; g = n; b = wh; break;\n\t\tcase 1: r = n; g = v; b = wh; break;\n\t\tcase 2: r = wh; g = v; b = n; break;\n\t\tcase 3: r = wh; g = n; b = v; break;\n\t\tcase 4: r = n; g = wh; b = v; break;\n\t\tcase 5: r = v; g = wh; b = n; break;\n\t}\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.cmyk.rgb = function (cmyk) {\n\tvar c = cmyk[0] / 100;\n\tvar m = cmyk[1] / 100;\n\tvar y = cmyk[2] / 100;\n\tvar k = cmyk[3] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = 1 - Math.min(1, c * (1 - k) + k);\n\tg = 1 - Math.min(1, m * (1 - k) + k);\n\tb = 1 - Math.min(1, y * (1 - k) + k);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.rgb = function (xyz) {\n\tvar x = xyz[0] / 100;\n\tvar y = xyz[1] / 100;\n\tvar z = xyz[2] / 100;\n\tvar r;\n\tvar g;\n\tvar b;\n\n\tr = (x * 3.2406) + (y * -1.5372) + (z * -0.4986);\n\tg = (x * -0.9689) + (y * 1.8758) + (z * 0.0415);\n\tb = (x * 0.0557) + (y * -0.2040) + (z * 1.0570);\n\n\t// assume sRGB\n\tr = r > 0.0031308\n\t\t? ((1.055 * Math.pow(r, 1.0 / 2.4)) - 0.055)\n\t\t: r * 12.92;\n\n\tg = g > 0.0031308\n\t\t? ((1.055 * Math.pow(g, 1.0 / 2.4)) - 0.055)\n\t\t: g * 12.92;\n\n\tb = b > 0.0031308\n\t\t? ((1.055 * Math.pow(b, 1.0 / 2.4)) - 0.055)\n\t\t: b * 12.92;\n\n\tr = Math.min(Math.max(0, r), 1);\n\tg = Math.min(Math.max(0, g), 1);\n\tb = Math.min(Math.max(0, b), 1);\n\n\treturn [r * 255, g * 255, b * 255];\n};\n\nconvert.xyz.lab = function (xyz) {\n\tvar x = xyz[0];\n\tvar y = xyz[1];\n\tvar z = xyz[2];\n\tvar l;\n\tvar a;\n\tvar b;\n\n\tx /= 95.047;\n\ty /= 100;\n\tz /= 108.883;\n\n\tx = x > 0.008856 ? Math.pow(x, 1 / 3) : (7.787 * x) + (16 / 116);\n\ty = y > 0.008856 ? Math.pow(y, 1 / 3) : (7.787 * y) + (16 / 116);\n\tz = z > 0.008856 ? Math.pow(z, 1 / 3) : (7.787 * z) + (16 / 116);\n\n\tl = (116 * y) - 16;\n\ta = 500 * (x - y);\n\tb = 200 * (y - z);\n\n\treturn [l, a, b];\n};\n\nconvert.lab.xyz = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar x;\n\tvar y;\n\tvar z;\n\n\ty = (l + 16) / 116;\n\tx = a / 500 + y;\n\tz = y - b / 200;\n\n\tvar y2 = Math.pow(y, 3);\n\tvar x2 = Math.pow(x, 3);\n\tvar z2 = Math.pow(z, 3);\n\ty = y2 > 0.008856 ? y2 : (y - 16 / 116) / 7.787;\n\tx = x2 > 0.008856 ? x2 : (x - 16 / 116) / 7.787;\n\tz = z2 > 0.008856 ? z2 : (z - 16 / 116) / 7.787;\n\n\tx *= 95.047;\n\ty *= 100;\n\tz *= 108.883;\n\n\treturn [x, y, z];\n};\n\nconvert.lab.lch = function (lab) {\n\tvar l = lab[0];\n\tvar a = lab[1];\n\tvar b = lab[2];\n\tvar hr;\n\tvar h;\n\tvar c;\n\n\thr = Math.atan2(b, a);\n\th = hr * 360 / 2 / Math.PI;\n\n\tif (h < 0) {\n\t\th += 360;\n\t}\n\n\tc = Math.sqrt(a * a + b * b);\n\n\treturn [l, c, h];\n};\n\nconvert.lch.lab = function (lch) {\n\tvar l = lch[0];\n\tvar c = lch[1];\n\tvar h = lch[2];\n\tvar a;\n\tvar b;\n\tvar hr;\n\n\thr = h / 360 * 2 * Math.PI;\n\ta = c * Math.cos(hr);\n\tb = c * Math.sin(hr);\n\n\treturn [l, a, b];\n};\n\nconvert.rgb.ansi16 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\tvar value = 1 in arguments ? arguments[1] : convert.rgb.hsv(args)[2]; // hsv -> ansi16 optimization\n\n\tvalue = Math.round(value / 50);\n\n\tif (value === 0) {\n\t\treturn 30;\n\t}\n\n\tvar ansi = 30\n\t\t+ ((Math.round(b / 255) << 2)\n\t\t| (Math.round(g / 255) << 1)\n\t\t| Math.round(r / 255));\n\n\tif (value === 2) {\n\t\tansi += 60;\n\t}\n\n\treturn ansi;\n};\n\nconvert.hsv.ansi16 = function (args) {\n\t// optimization here; we already know the value and don't need to get\n\t// it converted for us.\n\treturn convert.rgb.ansi16(convert.hsv.rgb(args), args[2]);\n};\n\nconvert.rgb.ansi256 = function (args) {\n\tvar r = args[0];\n\tvar g = args[1];\n\tvar b = args[2];\n\n\t// we use the extended greyscale palette here, with the exception of\n\t// black and white. normal palette only has 4 greyscale shades.\n\tif (r === g && g === b) {\n\t\tif (r < 8) {\n\t\t\treturn 16;\n\t\t}\n\n\t\tif (r > 248) {\n\t\t\treturn 231;\n\t\t}\n\n\t\treturn Math.round(((r - 8) / 247) * 24) + 232;\n\t}\n\n\tvar ansi = 16\n\t\t+ (36 * Math.round(r / 255 * 5))\n\t\t+ (6 * Math.round(g / 255 * 5))\n\t\t+ Math.round(b / 255 * 5);\n\n\treturn ansi;\n};\n\nconvert.ansi16.rgb = function (args) {\n\tvar color = args % 10;\n\n\t// handle greyscale\n\tif (color === 0 || color === 7) {\n\t\tif (args > 50) {\n\t\t\tcolor += 3.5;\n\t\t}\n\n\t\tcolor = color / 10.5 * 255;\n\n\t\treturn [color, color, color];\n\t}\n\n\tvar mult = (~~(args > 50) + 1) * 0.5;\n\tvar r = ((color & 1) * mult) * 255;\n\tvar g = (((color >> 1) & 1) * mult) * 255;\n\tvar b = (((color >> 2) & 1) * mult) * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.ansi256.rgb = function (args) {\n\t// handle greyscale\n\tif (args >= 232) {\n\t\tvar c = (args - 232) * 10 + 8;\n\t\treturn [c, c, c];\n\t}\n\n\targs -= 16;\n\n\tvar rem;\n\tvar r = Math.floor(args / 36) / 5 * 255;\n\tvar g = Math.floor((rem = args % 36) / 6) / 5 * 255;\n\tvar b = (rem % 6) / 5 * 255;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hex = function (args) {\n\tvar integer = ((Math.round(args[0]) & 0xFF) << 16)\n\t\t+ ((Math.round(args[1]) & 0xFF) << 8)\n\t\t+ (Math.round(args[2]) & 0xFF);\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.hex.rgb = function (args) {\n\tvar match = args.toString(16).match(/[a-f0-9]{6}|[a-f0-9]{3}/i);\n\tif (!match) {\n\t\treturn [0, 0, 0];\n\t}\n\n\tvar colorString = match[0];\n\n\tif (match[0].length === 3) {\n\t\tcolorString = colorString.split('').map(function (char) {\n\t\t\treturn char + char;\n\t\t}).join('');\n\t}\n\n\tvar integer = parseInt(colorString, 16);\n\tvar r = (integer >> 16) & 0xFF;\n\tvar g = (integer >> 8) & 0xFF;\n\tvar b = integer & 0xFF;\n\n\treturn [r, g, b];\n};\n\nconvert.rgb.hcg = function (rgb) {\n\tvar r = rgb[0] / 255;\n\tvar g = rgb[1] / 255;\n\tvar b = rgb[2] / 255;\n\tvar max = Math.max(Math.max(r, g), b);\n\tvar min = Math.min(Math.min(r, g), b);\n\tvar chroma = (max - min);\n\tvar grayscale;\n\tvar hue;\n\n\tif (chroma < 1) {\n\t\tgrayscale = min / (1 - chroma);\n\t} else {\n\t\tgrayscale = 0;\n\t}\n\n\tif (chroma <= 0) {\n\t\thue = 0;\n\t} else\n\tif (max === r) {\n\t\thue = ((g - b) / chroma) % 6;\n\t} else\n\tif (max === g) {\n\t\thue = 2 + (b - r) / chroma;\n\t} else {\n\t\thue = 4 + (r - g) / chroma + 4;\n\t}\n\n\thue /= 6;\n\thue %= 1;\n\n\treturn [hue * 360, chroma * 100, grayscale * 100];\n};\n\nconvert.hsl.hcg = function (hsl) {\n\tvar s = hsl[1] / 100;\n\tvar l = hsl[2] / 100;\n\tvar c = 1;\n\tvar f = 0;\n\n\tif (l < 0.5) {\n\t\tc = 2.0 * s * l;\n\t} else {\n\t\tc = 2.0 * s * (1.0 - l);\n\t}\n\n\tif (c < 1.0) {\n\t\tf = (l - 0.5 * c) / (1.0 - c);\n\t}\n\n\treturn [hsl[0], c * 100, f * 100];\n};\n\nconvert.hsv.hcg = function (hsv) {\n\tvar s = hsv[1] / 100;\n\tvar v = hsv[2] / 100;\n\n\tvar c = s * v;\n\tvar f = 0;\n\n\tif (c < 1.0) {\n\t\tf = (v - c) / (1 - c);\n\t}\n\n\treturn [hsv[0], c * 100, f * 100];\n};\n\nconvert.hcg.rgb = function (hcg) {\n\tvar h = hcg[0] / 360;\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tif (c === 0.0) {\n\t\treturn [g * 255, g * 255, g * 255];\n\t}\n\n\tvar pure = [0, 0, 0];\n\tvar hi = (h % 1) * 6;\n\tvar v = hi % 1;\n\tvar w = 1 - v;\n\tvar mg = 0;\n\n\tswitch (Math.floor(hi)) {\n\t\tcase 0:\n\t\t\tpure[0] = 1; pure[1] = v; pure[2] = 0; break;\n\t\tcase 1:\n\t\t\tpure[0] = w; pure[1] = 1; pure[2] = 0; break;\n\t\tcase 2:\n\t\t\tpure[0] = 0; pure[1] = 1; pure[2] = v; break;\n\t\tcase 3:\n\t\t\tpure[0] = 0; pure[1] = w; pure[2] = 1; break;\n\t\tcase 4:\n\t\t\tpure[0] = v; pure[1] = 0; pure[2] = 1; break;\n\t\tdefault:\n\t\t\tpure[0] = 1; pure[1] = 0; pure[2] = w;\n\t}\n\n\tmg = (1.0 - c) * g;\n\n\treturn [\n\t\t(c * pure[0] + mg) * 255,\n\t\t(c * pure[1] + mg) * 255,\n\t\t(c * pure[2] + mg) * 255\n\t];\n};\n\nconvert.hcg.hsv = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar v = c + g * (1.0 - c);\n\tvar f = 0;\n\n\tif (v > 0.0) {\n\t\tf = c / v;\n\t}\n\n\treturn [hcg[0], f * 100, v * 100];\n};\n\nconvert.hcg.hsl = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\n\tvar l = g * (1.0 - c) + 0.5 * c;\n\tvar s = 0;\n\n\tif (l > 0.0 && l < 0.5) {\n\t\ts = c / (2 * l);\n\t} else\n\tif (l >= 0.5 && l < 1.0) {\n\t\ts = c / (2 * (1 - l));\n\t}\n\n\treturn [hcg[0], s * 100, l * 100];\n};\n\nconvert.hcg.hwb = function (hcg) {\n\tvar c = hcg[1] / 100;\n\tvar g = hcg[2] / 100;\n\tvar v = c + g * (1.0 - c);\n\treturn [hcg[0], (v - c) * 100, (1 - v) * 100];\n};\n\nconvert.hwb.hcg = function (hwb) {\n\tvar w = hwb[1] / 100;\n\tvar b = hwb[2] / 100;\n\tvar v = 1 - b;\n\tvar c = v - w;\n\tvar g = 0;\n\n\tif (c < 1) {\n\t\tg = (v - c) / (1 - c);\n\t}\n\n\treturn [hwb[0], c * 100, g * 100];\n};\n\nconvert.apple.rgb = function (apple) {\n\treturn [(apple[0] / 65535) * 255, (apple[1] / 65535) * 255, (apple[2] / 65535) * 255];\n};\n\nconvert.rgb.apple = function (rgb) {\n\treturn [(rgb[0] / 255) * 65535, (rgb[1] / 255) * 65535, (rgb[2] / 255) * 65535];\n};\n\nconvert.gray.rgb = function (args) {\n\treturn [args[0] / 100 * 255, args[0] / 100 * 255, args[0] / 100 * 255];\n};\n\nconvert.gray.hsl = convert.gray.hsv = function (args) {\n\treturn [0, 0, args[0]];\n};\n\nconvert.gray.hwb = function (gray) {\n\treturn [0, 100, gray[0]];\n};\n\nconvert.gray.cmyk = function (gray) {\n\treturn [0, 0, 0, gray[0]];\n};\n\nconvert.gray.lab = function (gray) {\n\treturn [gray[0], 0, 0];\n};\n\nconvert.gray.hex = function (gray) {\n\tvar val = Math.round(gray[0] / 100 * 255) & 0xFF;\n\tvar integer = (val << 16) + (val << 8) + val;\n\n\tvar string = integer.toString(16).toUpperCase();\n\treturn '000000'.substring(string.length) + string;\n};\n\nconvert.rgb.gray = function (rgb) {\n\tvar val = (rgb[0] + rgb[1] + rgb[2]) / 3;\n\treturn [val / 255 * 100];\n};\n","'use strict'\r\n\r\nmodule.exports = {\r\n\t\"aliceblue\": [240, 248, 255],\r\n\t\"antiquewhite\": [250, 235, 215],\r\n\t\"aqua\": [0, 255, 255],\r\n\t\"aquamarine\": [127, 255, 212],\r\n\t\"azure\": [240, 255, 255],\r\n\t\"beige\": [245, 245, 220],\r\n\t\"bisque\": [255, 228, 196],\r\n\t\"black\": [0, 0, 0],\r\n\t\"blanchedalmond\": [255, 235, 205],\r\n\t\"blue\": [0, 0, 255],\r\n\t\"blueviolet\": [138, 43, 226],\r\n\t\"brown\": [165, 42, 42],\r\n\t\"burlywood\": [222, 184, 135],\r\n\t\"cadetblue\": [95, 158, 160],\r\n\t\"chartreuse\": [127, 255, 0],\r\n\t\"chocolate\": [210, 105, 30],\r\n\t\"coral\": [255, 127, 80],\r\n\t\"cornflowerblue\": [100, 149, 237],\r\n\t\"cornsilk\": [255, 248, 220],\r\n\t\"crimson\": [220, 20, 60],\r\n\t\"cyan\": [0, 255, 255],\r\n\t\"darkblue\": [0, 0, 139],\r\n\t\"darkcyan\": [0, 139, 139],\r\n\t\"darkgoldenrod\": [184, 134, 11],\r\n\t\"darkgray\": [169, 169, 169],\r\n\t\"darkgreen\": [0, 100, 0],\r\n\t\"darkgrey\": [169, 169, 169],\r\n\t\"darkkhaki\": [189, 183, 107],\r\n\t\"darkmagenta\": [139, 0, 139],\r\n\t\"darkolivegreen\": [85, 107, 47],\r\n\t\"darkorange\": [255, 140, 0],\r\n\t\"darkorchid\": [153, 50, 204],\r\n\t\"darkred\": [139, 0, 0],\r\n\t\"darksalmon\": [233, 150, 122],\r\n\t\"darkseagreen\": [143, 188, 143],\r\n\t\"darkslateblue\": [72, 61, 139],\r\n\t\"darkslategray\": [47, 79, 79],\r\n\t\"darkslategrey\": [47, 79, 79],\r\n\t\"darkturquoise\": [0, 206, 209],\r\n\t\"darkviolet\": [148, 0, 211],\r\n\t\"deeppink\": [255, 20, 147],\r\n\t\"deepskyblue\": [0, 191, 255],\r\n\t\"dimgray\": [105, 105, 105],\r\n\t\"dimgrey\": [105, 105, 105],\r\n\t\"dodgerblue\": [30, 144, 255],\r\n\t\"firebrick\": [178, 34, 34],\r\n\t\"floralwhite\": [255, 250, 240],\r\n\t\"forestgreen\": [34, 139, 34],\r\n\t\"fuchsia\": [255, 0, 255],\r\n\t\"gainsboro\": [220, 220, 220],\r\n\t\"ghostwhite\": [248, 248, 255],\r\n\t\"gold\": [255, 215, 0],\r\n\t\"goldenrod\": [218, 165, 32],\r\n\t\"gray\": [128, 128, 128],\r\n\t\"green\": [0, 128, 0],\r\n\t\"greenyellow\": [173, 255, 47],\r\n\t\"grey\": [128, 128, 128],\r\n\t\"honeydew\": [240, 255, 240],\r\n\t\"hotpink\": [255, 105, 180],\r\n\t\"indianred\": [205, 92, 92],\r\n\t\"indigo\": [75, 0, 130],\r\n\t\"ivory\": [255, 255, 240],\r\n\t\"khaki\": [240, 230, 140],\r\n\t\"lavender\": [230, 230, 250],\r\n\t\"lavenderblush\": [255, 240, 245],\r\n\t\"lawngreen\": [124, 252, 0],\r\n\t\"lemonchiffon\": [255, 250, 205],\r\n\t\"lightblue\": [173, 216, 230],\r\n\t\"lightcoral\": [240, 128, 128],\r\n\t\"lightcyan\": [224, 255, 255],\r\n\t\"lightgoldenrodyellow\": [250, 250, 210],\r\n\t\"lightgray\": [211, 211, 211],\r\n\t\"lightgreen\": [144, 238, 144],\r\n\t\"lightgrey\": [211, 211, 211],\r\n\t\"lightpink\": [255, 182, 193],\r\n\t\"lightsalmon\": [255, 160, 122],\r\n\t\"lightseagreen\": [32, 178, 170],\r\n\t\"lightskyblue\": [135, 206, 250],\r\n\t\"lightslategray\": [119, 136, 153],\r\n\t\"lightslategrey\": [119, 136, 153],\r\n\t\"lightsteelblue\": [176, 196, 222],\r\n\t\"lightyellow\": [255, 255, 224],\r\n\t\"lime\": [0, 255, 0],\r\n\t\"limegreen\": [50, 205, 50],\r\n\t\"linen\": [250, 240, 230],\r\n\t\"magenta\": [255, 0, 255],\r\n\t\"maroon\": [128, 0, 0],\r\n\t\"mediumaquamarine\": [102, 205, 170],\r\n\t\"mediumblue\": [0, 0, 205],\r\n\t\"mediumorchid\": [186, 85, 211],\r\n\t\"mediumpurple\": [147, 112, 219],\r\n\t\"mediumseagreen\": [60, 179, 113],\r\n\t\"mediumslateblue\": [123, 104, 238],\r\n\t\"mediumspringgreen\": [0, 250, 154],\r\n\t\"mediumturquoise\": [72, 209, 204],\r\n\t\"mediumvioletred\": [199, 21, 133],\r\n\t\"midnightblue\": [25, 25, 112],\r\n\t\"mintcream\": [245, 255, 250],\r\n\t\"mistyrose\": [255, 228, 225],\r\n\t\"moccasin\": [255, 228, 181],\r\n\t\"navajowhite\": [255, 222, 173],\r\n\t\"navy\": [0, 0, 128],\r\n\t\"oldlace\": [253, 245, 230],\r\n\t\"olive\": [128, 128, 0],\r\n\t\"olivedrab\": [107, 142, 35],\r\n\t\"orange\": [255, 165, 0],\r\n\t\"orangered\": [255, 69, 0],\r\n\t\"orchid\": [218, 112, 214],\r\n\t\"palegoldenrod\": [238, 232, 170],\r\n\t\"palegreen\": [152, 251, 152],\r\n\t\"paleturquoise\": [175, 238, 238],\r\n\t\"palevioletred\": [219, 112, 147],\r\n\t\"papayawhip\": [255, 239, 213],\r\n\t\"peachpuff\": [255, 218, 185],\r\n\t\"peru\": [205, 133, 63],\r\n\t\"pink\": [255, 192, 203],\r\n\t\"plum\": [221, 160, 221],\r\n\t\"powderblue\": [176, 224, 230],\r\n\t\"purple\": [128, 0, 128],\r\n\t\"rebeccapurple\": [102, 51, 153],\r\n\t\"red\": [255, 0, 0],\r\n\t\"rosybrown\": [188, 143, 143],\r\n\t\"royalblue\": [65, 105, 225],\r\n\t\"saddlebrown\": [139, 69, 19],\r\n\t\"salmon\": [250, 128, 114],\r\n\t\"sandybrown\": [244, 164, 96],\r\n\t\"seagreen\": [46, 139, 87],\r\n\t\"seashell\": [255, 245, 238],\r\n\t\"sienna\": [160, 82, 45],\r\n\t\"silver\": [192, 192, 192],\r\n\t\"skyblue\": [135, 206, 235],\r\n\t\"slateblue\": [106, 90, 205],\r\n\t\"slategray\": [112, 128, 144],\r\n\t\"slategrey\": [112, 128, 144],\r\n\t\"snow\": [255, 250, 250],\r\n\t\"springgreen\": [0, 255, 127],\r\n\t\"steelblue\": [70, 130, 180],\r\n\t\"tan\": [210, 180, 140],\r\n\t\"teal\": [0, 128, 128],\r\n\t\"thistle\": [216, 191, 216],\r\n\t\"tomato\": [255, 99, 71],\r\n\t\"turquoise\": [64, 224, 208],\r\n\t\"violet\": [238, 130, 238],\r\n\t\"wheat\": [245, 222, 179],\r\n\t\"white\": [255, 255, 255],\r\n\t\"whitesmoke\": [245, 245, 245],\r\n\t\"yellow\": [255, 255, 0],\r\n\t\"yellowgreen\": [154, 205, 50]\r\n};\r\n","import { SLICE_EVENTS, INTERNAL_EXTERNAL_EVENTS_MAPPING } from '../config/defaults';\nimport { ISlice } from \"../interfaces/ISlice\";\nimport { IEvent } from '../interfaces/IEvent';\n\nexport class OMenuSliceEvent extends IEvent {\n    constructor({ type, originalEvent, target }){\n        super();\n\n        if (!(target instanceof ISlice))\n            throw new Error('Target must be an instance of Slice or NthLevelSlice');\n\n        if (!Object.values(SLICE_EVENTS).includes(type))\n            throw new Error('Event type must be one of defined in SLICE_EVENTS const');\n\n        this.originalEvent = originalEvent;\n        this.type = type;\n        this.data = target.options.data;\n        this.target = target;\n    }\n}\n\nexport class OMenuExternalEvent extends IEvent {\n    constructor(event, propsToChange) {\n        super();\n\n        if(event instanceof IEvent && propsToChange) {\n            Object.assign(this, {\n                ...event,\n                ...propsToChange,\n                originalEvent: event\n            });\n\n            return this;\n        }\n\n        const {type, originalEvent = null, target} = event;\n\n        this.type = type;\n        this.originalEvent = originalEvent;\n        this.hasNestedSlices = false;\n        this.isSlice = false;\n\n        if (target) {\n            this.data = target.options.data;\n            this.target = target;\n            this.type = INTERNAL_EXTERNAL_EVENTS_MAPPING[type] || type;\n\n            if (target instanceof ISlice) {\n                this.isSlice = true;\n                this.hasNestedSlices = target.slices && target.slices.length;\n            }\n        }\n    }\n}\n","import { OMenuElement } from \"../elements/OMenuElement\";\n\nexport class ISlice extends OMenuElement {}\n","var addPx = require('add-px-to-style')\nvar hyphenate = require('hyphenate-style-name')\n\nmodule.exports = function createMarkup(obj) {\n  var keys = Object.keys(obj)\n  if (!keys.length) return ''\n  var i, len = keys.length\n  var result = ''\n\n  for (i = 0; i < len; i++) {\n    var key = keys[i]\n    var val = obj[key]\n    result += hyphenate(key) + ':' + addPx(key, val) + ';'\n  }\n\n  return result\n}","import {\n    radToDeg,\n    getCoordinatesForRads,\n    createElementNS\n} from '../helpers/utils';\nimport objectToCSS from 'object-to-css';\nimport { SLICE_EVENTS, NATIVE_SLICE_EVENTS } from '../config/defaults';\nimport { ISlice } from \"../interfaces/ISlice\";\nimport { OMenuSliceEvent } from \"../helpers/oMenuEvents\";\n\nclass Slice extends ISlice {\n    /**\n     *\n     * @param svg {Object} SVG.js element\n     * @param options {Object} Options for Slice\n     */\n    constructor(svg, options){\n        super();\n        this.options        = options;\n        this.parent         = svg;\n        this.data           = {};\n        this.group          = null;\n        this.number         = null;\n        this.clickValue     = null;\n        this.coords         = {\n            arcStart: [],\n            arcEnd  : [],\n            content : []\n        };\n        this.pathArray      = [];\n        this.rotateStepDeg  = 0;\n        this.slices         = [];\n        this.isSlicesOpen   = false;\n    }\n\n    /**\n     * Plot slice\n     */\n    draw(data){\n        this.data           = data;\n        this.number         = this.data.number;\n        const radius        = this.data.radius;\n\n        this.rotateStepDeg  = -((this.number * this.data.degForStep))+this.data.circleDegOrigin+(this.data.parentDeg||0);\n\n        this.startArcRad    = this.data.radForStep * this.data.number;\n        this.endArcRad      = this.data.radForStep + this.startArcRad;\n\n        this.coords.arcStart= getCoordinatesForRads(\n            this.data.radiusWithPadding,\n            radius,\n            this.startArcRad\n        );\n\n        this.coords.arcEnd  = getCoordinatesForRads(\n            this.data.radiusWithPadding,\n            radius,\n            this.endArcRad\n        );\n\n        const [startX, startY] = this.coords.arcStart;\n        const [endX, endY]     = this.coords.arcEnd;\n\n        this.pathArray = [\n            `M ${startX} ${startY}`, // Move\n            `A ${radius} ${radius} 0 0 1 ${endX} ${endY}`, // Arc\n            `L ${this.data.radiusWithPadding} ${this.data.radiusWithPadding}` // Line\n        ];\n\n        if(this.slices.length){\n            let radForStep = this.data.radForStep / this.slices.length;\n\n            this.slices.forEach((slice, i) => {\n                slice.draw({\n                    ...this.data,\n                    number           : i,\n                    radForStep       : radForStep,\n                    degForStep       : radToDeg(radForStep),\n                    innerCircleRadius: radius,\n                    radius           : this.data.radius + this.data.nthLevelSliceWidth,\n                    parentRad        : this.startArcRad,\n                    parentDeg        : radToDeg(this.startArcRad),\n                    parentFill       : this.options.styles.defaults.fill\n                });\n            })\n        }\n\n        this.group      = this.parent.group();\n\n        this.group\n            .addClass(this.options.sliceClass)\n            .path(this.pathArray.join(' '))\n            .style(this.options.styles.defaults);\n\n        this.drawContent();\n\n        this.group\n            .rotate(\n                this.rotateStepDeg,\n                this.data.radiusWithPadding,\n                this.data.radiusWithPadding\n            )\n            .scale(0.01, this.data.radiusWithPadding, this.data.radiusWithPadding);\n\n        this.bindCallbacks();\n\n        return this;\n    }\n\n    /**\n     * Render content (eg. icon in Slice)\n     */\n    drawContent(){\n         this.coords.content = getCoordinatesForRads(\n             this.data.radiusWithPadding,\n             this.data.innerCircleRadius + ((this.data.radius-this.data.innerCircleRadius)/3) + this.options.iconDistanceFromInnerCircle,\n             this.endArcRad-(this.data.radForStep/2)\n        );\n\n        const [contentX, contentY] = this.coords.content;\n\n        const attrs = {\n            x           : contentX-(this.options.contentSize/2.15)+this.options.contentMoveX,\n            y           : contentY-(this.options.contentSize/1.6)+this.options.contentMoveY,\n            width       : this.options.contentSize,\n            height      : this.options.contentSize,\n            transform   : `rotate(${Math.abs(this.data.circleDegOrigin)} ${contentX} ${contentY})`\n        };\n\n        const contentElement   = createElementNS('foreignObject', attrs);\n        const calculatedStyles = {\n            ...this.options.styles.contentContainer,\n            ...{\n                width : this.options.contentSize,\n                height: this.options.contentSize,\n                pointerEvents: 'none', // hack https://stackoverflow.com/a/18837002\n            }\n        };\n\n        contentElement.innerHTML = `\n            <div xmlns=\"http://www.w3.org/1999/xhtml\" \n                style=\"${objectToCSS(calculatedStyles)}\"\n            >\n                ${this.options.content}\n            </div>\n        `;\n\n        this.group.node.appendChild(contentElement);\n    }\n\n    /**\n     * Adds callbacks for events and map them to internal events\n     */\n    bindCallbacks(){\n        Object\n            .keys(NATIVE_SLICE_EVENTS)\n            .forEach(eventName => {\n                this.group.on(eventName, ev => {\n                    if (eventName === 'click') {\n                        ev.preventDefault();\n                        ev.stopPropagation();\n                    }\n\n                    this.triggerEvent(new OMenuSliceEvent({\n                        type: NATIVE_SLICE_EVENTS[ev.type],\n                        target: this,\n                        originalEvent: ev\n                    }));\n                })\n            });\n    }\n\n    /**\n     * Destroying class instance\n     */\n    destroy(){\n        Object\n            .keys(NATIVE_SLICE_EVENTS)\n            .forEach(eventName => this.group.off(eventName));\n\n        this.off();\n        this.group.remove();\n        this.group = null;\n    }\n\n    // todo extract these two to ... decorator pattern?\n    show(time = this.options.sliceShowTime){\n        return new Promise((resolve) => {\n            this.group.animate(time).scale(1, this.data.radiusWithPadding, this.data.radiusWithPadding).after(() => {\n                this.group\n                    .animate(time)\n                    .rotate(this.data.circleDegOrigin, this.data.radiusWithPadding, this.data.radiusWithPadding)\n                    .after(resolve);\n            })\n        });\n    }\n\n    hideChildrens(time = this.options.sliceHideTime){\n        if(this.slices.length)\n            return this.slices.map(slice => slice.hide());\n\n        return [Promise.resolve()];\n    }\n\n    hide(time = this.options.sliceHideTime){\n        return new Promise((resolve) => {\n            this.group\n                .animate(time).rotate(this.rotateStepDeg, this.data.radiusWithPadding, this.data.radiusWithPadding)\n                .after(() =>{\n                    this.group\n                        .animate(time)\n                        .scale(0.01, this.data.radiusWithPadding, this.data.radiusWithPadding)\n                        .after(resolve);\n                })\n        });\n    }\n}\n\nexport default Slice;\n","import { IEvent } from \"../interfaces/IEvent\";\n\nexport class OMenuEventEmitter {\n    constructor(){\n        this.subscriptions = {};\n    }\n\n    /**\n     *\n     * @param events {array<string>|string}\n     * @param callback {function}\n     */\n    on(events = [], callback) {\n        if(!Array.isArray(events))\n            events = [events];\n\n        if (typeof callback !== 'function')\n            throw new Error('oMenu callback must be a function');\n\n        events.forEach(event => {\n            if (!this.subscriptions[event])\n                this.subscriptions[event] = [];\n\n            this.subscriptions[event].push(callback);\n        });\n    }\n\n    /**\n     *\n     * @param event {string}\n     * @param callback {function}\n     * @returns {boolean}\n     */\n    off(event, callback) {\n        if(!event && !callback) {\n            this.subscriptions = {};\n            return true;\n        }\n\n        const idx = this.subscriptions[event].indexOf(callback);\n\n        if(idx === -1)\n            return false;\n\n        this.subscriptions[event].splice(idx, 1);\n\n        return true\n    }\n\n    /**\n     *\n     * @param event {IEvent}\n     */\n    triggerEvent(event) {\n        if (!(event instanceof IEvent))\n            throw new Error('Event must be an instance of IEvent class');\n\n        const eventType = event.type;\n\n        if(this.subscriptions[eventType])\n            this.subscriptions[eventType].forEach(callback => callback(event));\n    }\n}\n","import { OMenuEventEmitter } from \"../helpers/OMenuEventEmitter\";\n\nexport class OMenuElement extends OMenuEventEmitter {\n    constructor(){\n        super();\n        this.slices = [];\n    }\n\n    /**\n     *\n     * @param slice {Slice}\n     * @returns {OMenuElement}\n     */\n    pushSlice(slice){\n        if( !(slice instanceof OMenuElement) )\n            throw new Error('Slice must be an instance of PartInterface class!');\n\n        this.slices.push(slice);\n\n        return this;\n    }\n\n    destroy(){}\n\n    draw(){}\n\n    hide(){}\n\n    show(){}\n\n}\n","import { POSITION_MODES } from '../config/defaults';\n\nconst SCROLL_BAR_SIZE = 15;\n\nexport const positioningFunctions = {\n    [POSITION_MODES.relative] : ({ targetElement, menuInstance, ev }) => {\n        targetElement.style.position = 'relative';\n\n        // start positioning menu block\n        const {\n            x: bcrX,\n            y: bcrY,\n            width: targetElementWidth,\n            height: targetElementHeight,\n        } = targetElement.getBoundingClientRect();\n\n        // because values from getBoundingClientRect are relative to viewport position, they are dependent on scroll\n        const targetElementX = bcrX + window.scrollX;\n        const targetElementY = bcrY + window.scrollY;\n\n        let positionX = (ev.pageX)-menuInstance.radiusWithPadding-targetElementX;\n        let positionY = (ev.pageY)-menuInstance.radiusWithPadding-targetElementY;\n\n        if (positionX < targetElementX)\n            positionX = 0;\n        else if ((positionX + menuInstance.size) > (targetElementWidth))\n            positionX = (targetElementWidth) - menuInstance.size - SCROLL_BAR_SIZE;\n\n        if (positionY < targetElementY)\n            positionY = 0;\n        else if ((positionY + menuInstance.size) > (targetElementHeight))\n            positionY = (targetElementHeight) - menuInstance.size;\n\n        menuInstance.svg.style({\n            transform: `translate3d(${positionX}px, ${positionY}px, 0)`,\n            position: 'absolute',\n            top: 0,\n            left: 0,\n        });\n    },\n\n    [POSITION_MODES.fixed] : ({ targetElement, menuInstance, ev }) => {\n        let positionX = ev.x-menuInstance.radiusWithPadding;\n        let positionY = ev.y-menuInstance.radiusWithPadding;\n\n        const size = menuInstance.size;\n\n        if(positionX < 0)\n            positionX = 0;\n        else if(positionX + size > window.innerWidth)\n            positionX = window.innerWidth - size - SCROLL_BAR_SIZE;\n\n        if(positionY < 0)\n            positionY = 0;\n        else if(positionY + size > window.innerHeight)\n            positionY = window.innerHeight - size;\n\n        menuInstance.svg.style({\n            position: 'fixed',\n            transform: `translate3d(${positionX}px, ${positionY}px, 0)`\n        });\n    }\n}\n","var conversions = require('./conversions');\n\n/*\n\tthis function routes a model to all other models.\n\n\tall functions that are routed have a property `.conversion` attached\n\tto the returned synthetic function. This property is an array\n\tof strings, each with the steps in between the 'from' and 'to'\n\tcolor models (inclusive).\n\n\tconversions that are not possible simply are not included.\n*/\n\nfunction buildGraph() {\n\tvar graph = {};\n\t// https://jsperf.com/object-keys-vs-for-in-with-closure/3\n\tvar models = Object.keys(conversions);\n\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tgraph[models[i]] = {\n\t\t\t// http://jsperf.com/1-vs-infinity\n\t\t\t// micro-opt, but this is simple.\n\t\t\tdistance: -1,\n\t\t\tparent: null\n\t\t};\n\t}\n\n\treturn graph;\n}\n\n// https://en.wikipedia.org/wiki/Breadth-first_search\nfunction deriveBFS(fromModel) {\n\tvar graph = buildGraph();\n\tvar queue = [fromModel]; // unshift -> queue -> pop\n\n\tgraph[fromModel].distance = 0;\n\n\twhile (queue.length) {\n\t\tvar current = queue.pop();\n\t\tvar adjacents = Object.keys(conversions[current]);\n\n\t\tfor (var len = adjacents.length, i = 0; i < len; i++) {\n\t\t\tvar adjacent = adjacents[i];\n\t\t\tvar node = graph[adjacent];\n\n\t\t\tif (node.distance === -1) {\n\t\t\t\tnode.distance = graph[current].distance + 1;\n\t\t\t\tnode.parent = current;\n\t\t\t\tqueue.unshift(adjacent);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn graph;\n}\n\nfunction link(from, to) {\n\treturn function (args) {\n\t\treturn to(from(args));\n\t};\n}\n\nfunction wrapConversion(toModel, graph) {\n\tvar path = [graph[toModel].parent, toModel];\n\tvar fn = conversions[graph[toModel].parent][toModel];\n\n\tvar cur = graph[toModel].parent;\n\twhile (graph[cur].parent) {\n\t\tpath.unshift(graph[cur].parent);\n\t\tfn = link(conversions[graph[cur].parent][cur], fn);\n\t\tcur = graph[cur].parent;\n\t}\n\n\tfn.conversion = path;\n\treturn fn;\n}\n\nmodule.exports = function (fromModel) {\n\tvar graph = deriveBFS(fromModel);\n\tvar conversion = {};\n\n\tvar models = Object.keys(graph);\n\tfor (var len = models.length, i = 0; i < len; i++) {\n\t\tvar toModel = models[i];\n\t\tvar node = graph[toModel];\n\n\t\tif (node.parent === null) {\n\t\t\t// no possible conversion, or this node is the source model.\n\t\t\tcontinue;\n\t\t}\n\n\t\tconversion[toModel] = wrapConversion(toModel, graph);\n\t}\n\n\treturn conversion;\n};\n\n","var conversions = require('./conversions');\nvar route = require('./route');\n\nvar convert = {};\n\nvar models = Object.keys(conversions);\n\nfunction wrapRaw(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\treturn fn(args);\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nfunction wrapRounded(fn) {\n\tvar wrappedFn = function (args) {\n\t\tif (args === undefined || args === null) {\n\t\t\treturn args;\n\t\t}\n\n\t\tif (arguments.length > 1) {\n\t\t\targs = Array.prototype.slice.call(arguments);\n\t\t}\n\n\t\tvar result = fn(args);\n\n\t\t// we're assuming the result is an array here.\n\t\t// see notice in conversions.js; don't use box types\n\t\t// in conversion functions.\n\t\tif (typeof result === 'object') {\n\t\t\tfor (var len = result.length, i = 0; i < len; i++) {\n\t\t\t\tresult[i] = Math.round(result[i]);\n\t\t\t}\n\t\t}\n\n\t\treturn result;\n\t};\n\n\t// preserve .conversion property if there is one\n\tif ('conversion' in fn) {\n\t\twrappedFn.conversion = fn.conversion;\n\t}\n\n\treturn wrappedFn;\n}\n\nmodels.forEach(function (fromModel) {\n\tconvert[fromModel] = {};\n\n\tObject.defineProperty(convert[fromModel], 'channels', {value: conversions[fromModel].channels});\n\tObject.defineProperty(convert[fromModel], 'labels', {value: conversions[fromModel].labels});\n\n\tvar routes = route(fromModel);\n\tvar routeModels = Object.keys(routes);\n\n\trouteModels.forEach(function (toModel) {\n\t\tvar fn = routes[toModel];\n\n\t\tconvert[fromModel][toModel] = wrapRounded(fn);\n\t\tconvert[fromModel][toModel].raw = wrapRaw(fn);\n\t});\n});\n\nmodule.exports = convert;\n","'use strict';\n\nmodule.exports = function isArrayish(obj) {\n\tif (!obj || typeof obj === 'string') {\n\t\treturn false;\n\t}\n\n\treturn obj instanceof Array || Array.isArray(obj) ||\n\t\t(obj.length >= 0 && (obj.splice instanceof Function ||\n\t\t\t(Object.getOwnPropertyDescriptor(obj, (obj.length - 1)) && obj.constructor.name !== 'String')));\n};\n","'use strict';\n\nvar isArrayish = require('is-arrayish');\n\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\n\nvar swizzle = module.exports = function swizzle(args) {\n\tvar results = [];\n\n\tfor (var i = 0, len = args.length; i < len; i++) {\n\t\tvar arg = args[i];\n\n\t\tif (isArrayish(arg)) {\n\t\t\t// http://jsperf.com/javascript-array-concat-vs-push/98\n\t\t\tresults = concat.call(results, slice.call(arg));\n\t\t} else {\n\t\t\tresults.push(arg);\n\t\t}\n\t}\n\n\treturn results;\n};\n\nswizzle.wrap = function (fn) {\n\treturn function () {\n\t\treturn fn(swizzle(arguments));\n\t};\n};\n","/* MIT license */\nvar colorNames = require('color-name');\nvar swizzle = require('simple-swizzle');\n\nvar reverseNames = {};\n\n// create a list of reverse color names\nfor (var name in colorNames) {\n\tif (colorNames.hasOwnProperty(name)) {\n\t\treverseNames[colorNames[name]] = name;\n\t}\n}\n\nvar cs = module.exports = {\n\tto: {}\n};\n\ncs.get = function (string) {\n\tvar prefix = string.substring(0, 3).toLowerCase();\n\tvar val;\n\tvar model;\n\tswitch (prefix) {\n\t\tcase 'hsl':\n\t\t\tval = cs.get.hsl(string);\n\t\t\tmodel = 'hsl';\n\t\t\tbreak;\n\t\tcase 'hwb':\n\t\t\tval = cs.get.hwb(string);\n\t\t\tmodel = 'hwb';\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tval = cs.get.rgb(string);\n\t\t\tmodel = 'rgb';\n\t\t\tbreak;\n\t}\n\n\tif (!val) {\n\t\treturn null;\n\t}\n\n\treturn {model: model, value: val};\n};\n\ncs.get.rgb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar abbr = /^#([a-f0-9]{3,4})$/i;\n\tvar hex = /^#([a-f0-9]{6})([a-f0-9]{2})?$/i;\n\tvar rgba = /^rgba?\\(\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*,\\s*([+-]?\\d+)\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar per = /^rgba?\\(\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*,\\s*([+-]?[\\d\\.]+)\\%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar keyword = /(\\D+)/;\n\n\tvar rgb = [0, 0, 0, 1];\n\tvar match;\n\tvar i;\n\tvar hexAlpha;\n\n\tif (match = string.match(hex)) {\n\t\thexAlpha = match[2];\n\t\tmatch = match[1];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\t// https://jsperf.com/slice-vs-substr-vs-substring-methods-long-string/19\n\t\t\tvar i2 = i * 2;\n\t\t\trgb[i] = parseInt(match.slice(i2, i2 + 2), 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = Math.round((parseInt(hexAlpha, 16) / 255) * 100) / 100;\n\t\t}\n\t} else if (match = string.match(abbr)) {\n\t\tmatch = match[1];\n\t\thexAlpha = match[3];\n\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i] + match[i], 16);\n\t\t}\n\n\t\tif (hexAlpha) {\n\t\t\trgb[3] = Math.round((parseInt(hexAlpha + hexAlpha, 16) / 255) * 100) / 100;\n\t\t}\n\t} else if (match = string.match(rgba)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = parseInt(match[i + 1], 0);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(per)) {\n\t\tfor (i = 0; i < 3; i++) {\n\t\t\trgb[i] = Math.round(parseFloat(match[i + 1]) * 2.55);\n\t\t}\n\n\t\tif (match[4]) {\n\t\t\trgb[3] = parseFloat(match[4]);\n\t\t}\n\t} else if (match = string.match(keyword)) {\n\t\tif (match[1] === 'transparent') {\n\t\t\treturn [0, 0, 0, 0];\n\t\t}\n\n\t\trgb = colorNames[match[1]];\n\n\t\tif (!rgb) {\n\t\t\treturn null;\n\t\t}\n\n\t\trgb[3] = 1;\n\n\t\treturn rgb;\n\t} else {\n\t\treturn null;\n\t}\n\n\tfor (i = 0; i < 3; i++) {\n\t\trgb[i] = clamp(rgb[i], 0, 255);\n\t}\n\trgb[3] = clamp(rgb[3], 0, 1);\n\n\treturn rgb;\n};\n\ncs.get.hsl = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hsl = /^hsla?\\(\\s*([+-]?\\d*[\\.]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hsl);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar s = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar l = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\n\t\treturn [h, s, l, a];\n\t}\n\n\treturn null;\n};\n\ncs.get.hwb = function (string) {\n\tif (!string) {\n\t\treturn null;\n\t}\n\n\tvar hwb = /^hwb\\(\\s*([+-]?\\d*[\\.]?\\d+)(?:deg)?\\s*,\\s*([+-]?[\\d\\.]+)%\\s*,\\s*([+-]?[\\d\\.]+)%\\s*(?:,\\s*([+-]?[\\d\\.]+)\\s*)?\\)$/;\n\tvar match = string.match(hwb);\n\n\tif (match) {\n\t\tvar alpha = parseFloat(match[4]);\n\t\tvar h = ((parseFloat(match[1]) % 360) + 360) % 360;\n\t\tvar w = clamp(parseFloat(match[2]), 0, 100);\n\t\tvar b = clamp(parseFloat(match[3]), 0, 100);\n\t\tvar a = clamp(isNaN(alpha) ? 1 : alpha, 0, 1);\n\t\treturn [h, w, b, a];\n\t}\n\n\treturn null;\n};\n\ncs.to.hex = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn (\n\t\t'#' +\n\t\thexDouble(rgba[0]) +\n\t\thexDouble(rgba[1]) +\n\t\thexDouble(rgba[2]) +\n\t\t(rgba[3] < 1\n\t\t\t? (hexDouble(Math.round(rgba[3] * 255)))\n\t\t\t: '')\n\t);\n};\n\ncs.to.rgb = function () {\n\tvar rgba = swizzle(arguments);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ')'\n\t\t: 'rgba(' + Math.round(rgba[0]) + ', ' + Math.round(rgba[1]) + ', ' + Math.round(rgba[2]) + ', ' + rgba[3] + ')';\n};\n\ncs.to.rgb.percent = function () {\n\tvar rgba = swizzle(arguments);\n\n\tvar r = Math.round(rgba[0] / 255 * 100);\n\tvar g = Math.round(rgba[1] / 255 * 100);\n\tvar b = Math.round(rgba[2] / 255 * 100);\n\n\treturn rgba.length < 4 || rgba[3] === 1\n\t\t? 'rgb(' + r + '%, ' + g + '%, ' + b + '%)'\n\t\t: 'rgba(' + r + '%, ' + g + '%, ' + b + '%, ' + rgba[3] + ')';\n};\n\ncs.to.hsl = function () {\n\tvar hsla = swizzle(arguments);\n\treturn hsla.length < 4 || hsla[3] === 1\n\t\t? 'hsl(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%)'\n\t\t: 'hsla(' + hsla[0] + ', ' + hsla[1] + '%, ' + hsla[2] + '%, ' + hsla[3] + ')';\n};\n\n// hwb is a bit different than rgb(a) & hsl(a) since there is no alpha specific syntax\n// (hwb have alpha optional & 1 is default value)\ncs.to.hwb = function () {\n\tvar hwba = swizzle(arguments);\n\n\tvar a = '';\n\tif (hwba.length >= 4 && hwba[3] !== 1) {\n\t\ta = ', ' + hwba[3];\n\t}\n\n\treturn 'hwb(' + hwba[0] + ', ' + hwba[1] + '%, ' + hwba[2] + '%' + a + ')';\n};\n\ncs.to.keyword = function (rgb) {\n\treturn reverseNames[rgb.slice(0, 3)];\n};\n\n// helpers\nfunction clamp(num, min, max) {\n\treturn Math.min(Math.max(min, num), max);\n}\n\nfunction hexDouble(num) {\n\tvar str = num.toString(16).toUpperCase();\n\treturn (str.length < 2) ? '0' + str : str;\n}\n","'use strict';\n\nvar colorString = require('color-string');\nvar convert = require('color-convert');\n\nvar _slice = [].slice;\n\nvar skippedModels = [\n\t// to be honest, I don't really feel like keyword belongs in color convert, but eh.\n\t'keyword',\n\n\t// gray conflicts with some method names, and has its own method defined.\n\t'gray',\n\n\t// shouldn't really be in color-convert either...\n\t'hex'\n];\n\nvar hashedModelKeys = {};\nObject.keys(convert).forEach(function (model) {\n\thashedModelKeys[_slice.call(convert[model].labels).sort().join('')] = model;\n});\n\nvar limiters = {};\n\nfunction Color(obj, model) {\n\tif (!(this instanceof Color)) {\n\t\treturn new Color(obj, model);\n\t}\n\n\tif (model && model in skippedModels) {\n\t\tmodel = null;\n\t}\n\n\tif (model && !(model in convert)) {\n\t\tthrow new Error('Unknown model: ' + model);\n\t}\n\n\tvar i;\n\tvar channels;\n\n\tif (!obj) {\n\t\tthis.model = 'rgb';\n\t\tthis.color = [0, 0, 0];\n\t\tthis.valpha = 1;\n\t} else if (obj instanceof Color) {\n\t\tthis.model = obj.model;\n\t\tthis.color = obj.color.slice();\n\t\tthis.valpha = obj.valpha;\n\t} else if (typeof obj === 'string') {\n\t\tvar result = colorString.get(obj);\n\t\tif (result === null) {\n\t\t\tthrow new Error('Unable to parse color from string: ' + obj);\n\t\t}\n\n\t\tthis.model = result.model;\n\t\tchannels = convert[this.model].channels;\n\t\tthis.color = result.value.slice(0, channels);\n\t\tthis.valpha = typeof result.value[channels] === 'number' ? result.value[channels] : 1;\n\t} else if (obj.length) {\n\t\tthis.model = model || 'rgb';\n\t\tchannels = convert[this.model].channels;\n\t\tvar newArr = _slice.call(obj, 0, channels);\n\t\tthis.color = zeroArray(newArr, channels);\n\t\tthis.valpha = typeof obj[channels] === 'number' ? obj[channels] : 1;\n\t} else if (typeof obj === 'number') {\n\t\t// this is always RGB - can be converted later on.\n\t\tobj &= 0xFFFFFF;\n\t\tthis.model = 'rgb';\n\t\tthis.color = [\n\t\t\t(obj >> 16) & 0xFF,\n\t\t\t(obj >> 8) & 0xFF,\n\t\t\tobj & 0xFF\n\t\t];\n\t\tthis.valpha = 1;\n\t} else {\n\t\tthis.valpha = 1;\n\n\t\tvar keys = Object.keys(obj);\n\t\tif ('alpha' in obj) {\n\t\t\tkeys.splice(keys.indexOf('alpha'), 1);\n\t\t\tthis.valpha = typeof obj.alpha === 'number' ? obj.alpha : 0;\n\t\t}\n\n\t\tvar hashedKeys = keys.sort().join('');\n\t\tif (!(hashedKeys in hashedModelKeys)) {\n\t\t\tthrow new Error('Unable to parse color from object: ' + JSON.stringify(obj));\n\t\t}\n\n\t\tthis.model = hashedModelKeys[hashedKeys];\n\n\t\tvar labels = convert[this.model].labels;\n\t\tvar color = [];\n\t\tfor (i = 0; i < labels.length; i++) {\n\t\t\tcolor.push(obj[labels[i]]);\n\t\t}\n\n\t\tthis.color = zeroArray(color);\n\t}\n\n\t// perform limitations (clamping, etc.)\n\tif (limiters[this.model]) {\n\t\tchannels = convert[this.model].channels;\n\t\tfor (i = 0; i < channels; i++) {\n\t\t\tvar limit = limiters[this.model][i];\n\t\t\tif (limit) {\n\t\t\t\tthis.color[i] = limit(this.color[i]);\n\t\t\t}\n\t\t}\n\t}\n\n\tthis.valpha = Math.max(0, Math.min(1, this.valpha));\n\n\tif (Object.freeze) {\n\t\tObject.freeze(this);\n\t}\n}\n\nColor.prototype = {\n\ttoString: function () {\n\t\treturn this.string();\n\t},\n\n\ttoJSON: function () {\n\t\treturn this[this.model]();\n\t},\n\n\tstring: function (places) {\n\t\tvar self = this.model in colorString.to ? this : this.rgb();\n\t\tself = self.round(typeof places === 'number' ? places : 1);\n\t\tvar args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to[self.model](args);\n\t},\n\n\tpercentString: function (places) {\n\t\tvar self = this.rgb().round(typeof places === 'number' ? places : 1);\n\t\tvar args = self.valpha === 1 ? self.color : self.color.concat(this.valpha);\n\t\treturn colorString.to.rgb.percent(args);\n\t},\n\n\tarray: function () {\n\t\treturn this.valpha === 1 ? this.color.slice() : this.color.concat(this.valpha);\n\t},\n\n\tobject: function () {\n\t\tvar result = {};\n\t\tvar channels = convert[this.model].channels;\n\t\tvar labels = convert[this.model].labels;\n\n\t\tfor (var i = 0; i < channels; i++) {\n\t\t\tresult[labels[i]] = this.color[i];\n\t\t}\n\n\t\tif (this.valpha !== 1) {\n\t\t\tresult.alpha = this.valpha;\n\t\t}\n\n\t\treturn result;\n\t},\n\n\tunitArray: function () {\n\t\tvar rgb = this.rgb().color;\n\t\trgb[0] /= 255;\n\t\trgb[1] /= 255;\n\t\trgb[2] /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.push(this.valpha);\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tunitObject: function () {\n\t\tvar rgb = this.rgb().object();\n\t\trgb.r /= 255;\n\t\trgb.g /= 255;\n\t\trgb.b /= 255;\n\n\t\tif (this.valpha !== 1) {\n\t\t\trgb.alpha = this.valpha;\n\t\t}\n\n\t\treturn rgb;\n\t},\n\n\tround: function (places) {\n\t\tplaces = Math.max(places || 0, 0);\n\t\treturn new Color(this.color.map(roundToPlace(places)).concat(this.valpha), this.model);\n\t},\n\n\talpha: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(this.color.concat(Math.max(0, Math.min(1, val))), this.model);\n\t\t}\n\n\t\treturn this.valpha;\n\t},\n\n\t// rgb\n\tred: getset('rgb', 0, maxfn(255)),\n\tgreen: getset('rgb', 1, maxfn(255)),\n\tblue: getset('rgb', 2, maxfn(255)),\n\n\thue: getset(['hsl', 'hsv', 'hsl', 'hwb', 'hcg'], 0, function (val) { return ((val % 360) + 360) % 360; }), // eslint-disable-line brace-style\n\n\tsaturationl: getset('hsl', 1, maxfn(100)),\n\tlightness: getset('hsl', 2, maxfn(100)),\n\n\tsaturationv: getset('hsv', 1, maxfn(100)),\n\tvalue: getset('hsv', 2, maxfn(100)),\n\n\tchroma: getset('hcg', 1, maxfn(100)),\n\tgray: getset('hcg', 2, maxfn(100)),\n\n\twhite: getset('hwb', 1, maxfn(100)),\n\twblack: getset('hwb', 2, maxfn(100)),\n\n\tcyan: getset('cmyk', 0, maxfn(100)),\n\tmagenta: getset('cmyk', 1, maxfn(100)),\n\tyellow: getset('cmyk', 2, maxfn(100)),\n\tblack: getset('cmyk', 3, maxfn(100)),\n\n\tx: getset('xyz', 0, maxfn(100)),\n\ty: getset('xyz', 1, maxfn(100)),\n\tz: getset('xyz', 2, maxfn(100)),\n\n\tl: getset('lab', 0, maxfn(100)),\n\ta: getset('lab', 1),\n\tb: getset('lab', 2),\n\n\tkeyword: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(val);\n\t\t}\n\n\t\treturn convert[this.model].keyword(this.color);\n\t},\n\n\thex: function (val) {\n\t\tif (arguments.length) {\n\t\t\treturn new Color(val);\n\t\t}\n\n\t\treturn colorString.to.hex(this.rgb().round().color);\n\t},\n\n\trgbNumber: function () {\n\t\tvar rgb = this.rgb().color;\n\t\treturn ((rgb[0] & 0xFF) << 16) | ((rgb[1] & 0xFF) << 8) | (rgb[2] & 0xFF);\n\t},\n\n\tluminosity: function () {\n\t\t// http://www.w3.org/TR/WCAG20/#relativeluminancedef\n\t\tvar rgb = this.rgb().color;\n\n\t\tvar lum = [];\n\t\tfor (var i = 0; i < rgb.length; i++) {\n\t\t\tvar chan = rgb[i] / 255;\n\t\t\tlum[i] = (chan <= 0.03928) ? chan / 12.92 : Math.pow(((chan + 0.055) / 1.055), 2.4);\n\t\t}\n\n\t\treturn 0.2126 * lum[0] + 0.7152 * lum[1] + 0.0722 * lum[2];\n\t},\n\n\tcontrast: function (color2) {\n\t\t// http://www.w3.org/TR/WCAG20/#contrast-ratiodef\n\t\tvar lum1 = this.luminosity();\n\t\tvar lum2 = color2.luminosity();\n\n\t\tif (lum1 > lum2) {\n\t\t\treturn (lum1 + 0.05) / (lum2 + 0.05);\n\t\t}\n\n\t\treturn (lum2 + 0.05) / (lum1 + 0.05);\n\t},\n\n\tlevel: function (color2) {\n\t\tvar contrastRatio = this.contrast(color2);\n\t\tif (contrastRatio >= 7.1) {\n\t\t\treturn 'AAA';\n\t\t}\n\n\t\treturn (contrastRatio >= 4.5) ? 'AA' : '';\n\t},\n\n\tdark: function () {\n\t\t// YIQ equation from http://24ways.org/2010/calculating-color-contrast\n\t\tvar rgb = this.rgb().color;\n\t\tvar yiq = (rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1000;\n\t\treturn yiq < 128;\n\t},\n\n\tlight: function () {\n\t\treturn !this.dark();\n\t},\n\n\tnegate: function () {\n\t\tvar rgb = this.rgb();\n\t\tfor (var i = 0; i < 3; i++) {\n\t\t\trgb.color[i] = 255 - rgb.color[i];\n\t\t}\n\t\treturn rgb;\n\t},\n\n\tlighten: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[2] += hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdarken: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[2] -= hsl.color[2] * ratio;\n\t\treturn hsl;\n\t},\n\n\tsaturate: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[1] += hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\tdesaturate: function (ratio) {\n\t\tvar hsl = this.hsl();\n\t\thsl.color[1] -= hsl.color[1] * ratio;\n\t\treturn hsl;\n\t},\n\n\twhiten: function (ratio) {\n\t\tvar hwb = this.hwb();\n\t\thwb.color[1] += hwb.color[1] * ratio;\n\t\treturn hwb;\n\t},\n\n\tblacken: function (ratio) {\n\t\tvar hwb = this.hwb();\n\t\thwb.color[2] += hwb.color[2] * ratio;\n\t\treturn hwb;\n\t},\n\n\tgrayscale: function () {\n\t\t// http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale\n\t\tvar rgb = this.rgb().color;\n\t\tvar val = rgb[0] * 0.3 + rgb[1] * 0.59 + rgb[2] * 0.11;\n\t\treturn Color.rgb(val, val, val);\n\t},\n\n\tfade: function (ratio) {\n\t\treturn this.alpha(this.valpha - (this.valpha * ratio));\n\t},\n\n\topaquer: function (ratio) {\n\t\treturn this.alpha(this.valpha + (this.valpha * ratio));\n\t},\n\n\trotate: function (degrees) {\n\t\tvar hsl = this.hsl();\n\t\tvar hue = hsl.color[0];\n\t\thue = (hue + degrees) % 360;\n\t\thue = hue < 0 ? 360 + hue : hue;\n\t\thsl.color[0] = hue;\n\t\treturn hsl;\n\t},\n\n\tmix: function (mixinColor, weight) {\n\t\t// ported from sass implementation in C\n\t\t// https://github.com/sass/libsass/blob/0e6b4a2850092356aa3ece07c6b249f0221caced/functions.cpp#L209\n\t\tvar color1 = mixinColor.rgb();\n\t\tvar color2 = this.rgb();\n\t\tvar p = weight === undefined ? 0.5 : weight;\n\n\t\tvar w = 2 * p - 1;\n\t\tvar a = color1.alpha() - color2.alpha();\n\n\t\tvar w1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2.0;\n\t\tvar w2 = 1 - w1;\n\n\t\treturn Color.rgb(\n\t\t\t\tw1 * color1.red() + w2 * color2.red(),\n\t\t\t\tw1 * color1.green() + w2 * color2.green(),\n\t\t\t\tw1 * color1.blue() + w2 * color2.blue(),\n\t\t\t\tcolor1.alpha() * p + color2.alpha() * (1 - p));\n\t}\n};\n\n// model conversion methods and static constructors\nObject.keys(convert).forEach(function (model) {\n\tif (skippedModels.indexOf(model) !== -1) {\n\t\treturn;\n\t}\n\n\tvar channels = convert[model].channels;\n\n\t// conversion methods\n\tColor.prototype[model] = function () {\n\t\tif (this.model === model) {\n\t\t\treturn new Color(this);\n\t\t}\n\n\t\tif (arguments.length) {\n\t\t\treturn new Color(arguments, model);\n\t\t}\n\n\t\tvar newAlpha = typeof arguments[channels] === 'number' ? channels : this.valpha;\n\t\treturn new Color(assertArray(convert[this.model][model].raw(this.color)).concat(newAlpha), model);\n\t};\n\n\t// 'static' construction methods\n\tColor[model] = function (color) {\n\t\tif (typeof color === 'number') {\n\t\t\tcolor = zeroArray(_slice.call(arguments), channels);\n\t\t}\n\t\treturn new Color(color, model);\n\t};\n});\n\nfunction roundTo(num, places) {\n\treturn Number(num.toFixed(places));\n}\n\nfunction roundToPlace(places) {\n\treturn function (num) {\n\t\treturn roundTo(num, places);\n\t};\n}\n\nfunction getset(model, channel, modifier) {\n\tmodel = Array.isArray(model) ? model : [model];\n\n\tmodel.forEach(function (m) {\n\t\t(limiters[m] || (limiters[m] = []))[channel] = modifier;\n\t});\n\n\tmodel = model[0];\n\n\treturn function (val) {\n\t\tvar result;\n\n\t\tif (arguments.length) {\n\t\t\tif (modifier) {\n\t\t\t\tval = modifier(val);\n\t\t\t}\n\n\t\t\tresult = this[model]();\n\t\t\tresult.color[channel] = val;\n\t\t\treturn result;\n\t\t}\n\n\t\tresult = this[model]().color[channel];\n\t\tif (modifier) {\n\t\t\tresult = modifier(result);\n\t\t}\n\n\t\treturn result;\n\t};\n}\n\nfunction maxfn(max) {\n\treturn function (v) {\n\t\treturn Math.max(0, Math.min(max, v));\n\t};\n}\n\nfunction assertArray(val) {\n\treturn Array.isArray(val) ? val : [val];\n}\n\nfunction zeroArray(arr, length) {\n\tfor (var i = 0; i < length; i++) {\n\t\tif (typeof arr[i] !== 'number') {\n\t\t\tarr[i] = 0;\n\t\t}\n\t}\n\n\treturn arr;\n}\n\nmodule.exports = Color;\n","import Slice from './Slice.js';\nimport objectToCSS from 'object-to-css';\nimport Color from 'color';\nimport {\n    degToRad,\n    radToDeg,\n    sliceToDeg,\n    getCoordinatesForRads,\n    createElementNS\n} from '../helpers/utils';\n\n\nclass NthLevelSlice extends Slice {\n    /**\n     * Plot slice\n     */\n    draw(data){\n        let bgColorCalculatedFromParent = null;\n\n        this.data           = data;\n        this.number         = this.data.number;\n        this.parentFill     = this.data.parentFill\n            ? new Color(this.data.parentFill)\n            : null;\n\n        if(this.options.parentFillMode !== 0){\n            let fnName = this.options.parentFillMode < 0\n                ? 'darken'\n                : 'lighten';\n\n            bgColorCalculatedFromParent = this.parentFill[fnName](\n                Math.abs(this.options.parentFillMode)\n            ).hex();\n        }\n\n        const radius        = this.data.radius;\n\n        this.rotateStepDeg  = 0;\n\n        this.startArcRad    = (\n            (this.data.radForStep * this.data.number)\n            + degToRad(this.data.circleDegOrigin)\n            + degToRad(this.data.parentDeg)\n        );\n        this.endArcRad      = this.data.radForStep + this.startArcRad;\n\n        this.coords.arcStart= getCoordinatesForRads(\n            this.data.radiusWithPadding,\n            radius,\n            this.startArcRad\n        );\n\n        this.coords.arcEnd  = getCoordinatesForRads(\n            this.data.radiusWithPadding,\n            radius,\n            this.endArcRad\n        );\n\n        const [startX, startY] = this.coords.arcStart;\n        const [endX, endY]     = this.coords.arcEnd;\n\n        this.pathArray = [\n            `M ${startX} ${startY}`, // Move\n            `A ${radius} ${radius} 0 0 1 ${endX} ${endY}`, // Arc\n            `L ${this.data.radiusWithPadding} ${this.data.radiusWithPadding}` // Line\n        ];\n\n        this.group      = this.parent.group();\n\n        const styles = {...this.options.styles.defaults};\n\n        if(bgColorCalculatedFromParent)\n            styles.fill = bgColorCalculatedFromParent;\n\n        this.group\n            .addClass(this.options.sliceClass)\n            .path(this.pathArray.join(' '))\n            .style(styles);\n\n        this.drawContent();\n\n        this.group\n            .scale(0.2, this.data.radiusWithPadding, this.data.radiusWithPadding)\n            .opacity(0);\n\n        this.bindCallbacks();\n\n        return this;\n    }\n\n\n    drawContent(){\n        this.coords.content = getCoordinatesForRads(\n            this.data.radiusWithPadding,\n            this.data.innerCircleRadius + ((this.data.radius-this.data.innerCircleRadius)/3) + this.options.iconDistanceFromInnerCircle,\n            this.endArcRad-(this.data.radForStep/2)\n       );\n\n       const [contentX, contentY] = this.coords.content;\n\n       const attrs = {\n           x           : contentX-(this.options.contentSize/2.15)+this.options.contentMoveX,\n           y           : contentY-(this.options.contentSize/1.6)+this.options.contentMoveY,\n           width       : this.options.contentSize,\n           height      : this.options.contentSize\n       };\n\n       const contentElement = createElementNS('foreignObject', attrs);\n       const calculatedStyles = {\n            ...this.options.styles.contentContainer,\n            ...{\n                width : this.options.contentSize,\n                height: this.options.contentSize,\n                pointerEvents: 'none', // hack https://stackoverflow.com/a/18837002\n            }\n        };\n\n    //    contentElement.innerHTML = `<div xmlns=\"http://www.w3.org/1999/xhtml\" style=\"width: ${this.options.contentSize}px; height: ${this.options.contentSize}px; color:${this.options.contentColor}; font-size:${this.options.contentFontSize}px; cursor: pointer;\">${this.options.contentHTML}</div>`;\n        contentElement.innerHTML = `\n            <div xmlns=\"http://www.w3.org/1999/xhtml\" \n                style=\"${objectToCSS(calculatedStyles)}\"\n            >\n                ${this.options.content}\n            </div>\n        `;\n       this.group.node.appendChild(contentElement);\n   }\n\n    // todo extract these two to ... decorator pattern?\n    show(time = this.options.sliceShowTime){\n        return new Promise((resolve) => {\n\n            this.group\n                .opacity(1)\n                .animate(time)\n                .scale(1, this.data.radiusWithPadding, this.data.radiusWithPadding)\n                .after(resolve)\n        });\n    }\n\n    hide(time = this.options.sliceHideTime){\n        return new Promise((resolve) => {\n            this.group\n                .animate(time)\n                .scale(0.01, this.data.radiusWithPadding, this.data.radiusWithPadding)\n                .after(() => {\n                    this.group.opacity(0)\n                    resolve()\n                });\n        });\n    }\n}\n\nexport default NthLevelSlice;\n","'use strict';\n\nvar uppercasePattern = /[A-Z]/g;\nvar msPattern = /^ms-/;\nvar cache = {};\n\nfunction hyphenateStyleName(string) {\n    return string in cache\n    ? cache[string]\n    : cache[string] = string\n      .replace(uppercasePattern, '-$&')\n      .toLowerCase()\n      .replace(msPattern, '-ms-');\n}\n\nmodule.exports = hyphenateStyleName;\n","/* The following list is defined in React's core */\nvar IS_UNITLESS = {\n  animationIterationCount: true,\n  boxFlex: true,\n  boxFlexGroup: true,\n  boxOrdinalGroup: true,\n  columnCount: true,\n  flex: true,\n  flexGrow: true,\n  flexPositive: true,\n  flexShrink: true,\n  flexNegative: true,\n  flexOrder: true,\n  gridRow: true,\n  gridColumn: true,\n  fontWeight: true,\n  lineClamp: true,\n  lineHeight: true,\n  opacity: true,\n  order: true,\n  orphans: true,\n  tabSize: true,\n  widows: true,\n  zIndex: true,\n  zoom: true,\n\n  // SVG-related properties\n  fillOpacity: true,\n  stopOpacity: true,\n  strokeDashoffset: true,\n  strokeOpacity: true,\n  strokeWidth: true\n};\n\nmodule.exports = function(name, value) {\n  if(typeof value === 'number' && !IS_UNITLESS[ name ]) {\n    return value + 'px';\n  } else {\n    return value;\n  }\n};","import Slice from './Slice';\n\nexport default class FirstLevelSlice extends Slice {};","import { OMenuElement } from \"../elements/OMenuElement\";\n\nexport class IOMenu extends OMenuElement {}\n","/*!\n* svg.js - A lightweight library for manipulating and animating SVG.\n* @version 2.6.5\n* https://svgdotjs.github.io/\n*\n* @copyright Wout Fierens <wout@mick-wout.com>\n* @license MIT\n*\n* BUILT: Sat Jun 09 2018 13:46:41 GMT+0200 (CEST)\n*/;\n(function(root, factory) {\n  /* istanbul ignore next */\n  if (typeof define === 'function' && define.amd) {\n    define(function(){\n      return factory(root, root.document)\n    })\n  } else if (typeof exports === 'object') {\n    module.exports = root.document ? factory(root, root.document) : function(w){ return factory(w, w.document) }\n  } else {\n    root.SVG = factory(root, root.document)\n  }\n}(typeof window !== \"undefined\" ? window : this, function(window, document) {\n\n// The main wrapping element\nvar SVG = window.SVG = function(element) {\n  if (SVG.supported) {\n    element = new SVG.Doc(element)\n\n    if(!SVG.parser.draw)\n      SVG.prepare()\n\n    return element\n  }\n}\n\n// Default namespaces\nSVG.ns    = 'http://www.w3.org/2000/svg'\nSVG.xmlns = 'http://www.w3.org/2000/xmlns/'\nSVG.xlink = 'http://www.w3.org/1999/xlink'\nSVG.svgjs = 'http://svgjs.com/svgjs'\n\n// Svg support test\nSVG.supported = (function() {\n  return !! document.createElementNS &&\n         !! document.createElementNS(SVG.ns,'svg').createSVGRect\n})()\n\n// Don't bother to continue if SVG is not supported\nif (!SVG.supported) return false\n\n// Element id sequence\nSVG.did  = 1000\n\n// Get next named element id\nSVG.eid = function(name) {\n  return 'Svgjs' + capitalize(name) + (SVG.did++)\n}\n\n// Method for element creation\nSVG.create = function(name) {\n  // create element\n  var element = document.createElementNS(this.ns, name)\n\n  // apply unique id\n  element.setAttribute('id', this.eid(name))\n\n  return element\n}\n\n// Method for extending objects\nSVG.extend = function() {\n  var modules, methods, key, i\n\n  // Get list of modules\n  modules = [].slice.call(arguments)\n\n  // Get object with extensions\n  methods = modules.pop()\n\n  for (i = modules.length - 1; i >= 0; i--)\n    if (modules[i])\n      for (key in methods)\n        modules[i].prototype[key] = methods[key]\n\n  // Make sure SVG.Set inherits any newly added methods\n  if (SVG.Set && SVG.Set.inherit)\n    SVG.Set.inherit()\n}\n\n// Invent new element\nSVG.invent = function(config) {\n  // Create element initializer\n  var initializer = typeof config.create == 'function' ?\n    config.create :\n    function() {\n      this.constructor.call(this, SVG.create(config.create))\n    }\n\n  // Inherit prototype\n  if (config.inherit)\n    initializer.prototype = new config.inherit\n\n  // Extend with methods\n  if (config.extend)\n    SVG.extend(initializer, config.extend)\n\n  // Attach construct method to parent\n  if (config.construct)\n    SVG.extend(config.parent || SVG.Container, config.construct)\n\n  return initializer\n}\n\n// Adopt existing svg elements\nSVG.adopt = function(node) {\n  // check for presence of node\n  if (!node) return null\n\n  // make sure a node isn't already adopted\n  if (node.instance) return node.instance\n\n  // initialize variables\n  var element\n\n  // adopt with element-specific settings\n  if (node.nodeName == 'svg')\n    element = node.parentNode instanceof window.SVGElement ? new SVG.Nested : new SVG.Doc\n  else if (node.nodeName == 'linearGradient')\n    element = new SVG.Gradient('linear')\n  else if (node.nodeName == 'radialGradient')\n    element = new SVG.Gradient('radial')\n  else if (SVG[capitalize(node.nodeName)])\n    element = new SVG[capitalize(node.nodeName)]\n  else\n    element = new SVG.Element(node)\n\n  // ensure references\n  element.type  = node.nodeName\n  element.node  = node\n  node.instance = element\n\n  // SVG.Class specific preparations\n  if (element instanceof SVG.Doc)\n    element.namespace().defs()\n\n  // pull svgjs data from the dom (getAttributeNS doesn't work in html5)\n  element.setData(JSON.parse(node.getAttribute('svgjs:data')) || {})\n\n  return element\n}\n\n// Initialize parsing element\nSVG.prepare = function() {\n  // Select document body and create invisible svg element\n  var body = document.getElementsByTagName('body')[0]\n    , draw = (body ? new SVG.Doc(body) : SVG.adopt(document.documentElement).nested()).size(2, 0)\n\n  // Create parser object\n  SVG.parser = {\n    body: body || document.documentElement\n  , draw: draw.style('opacity:0;position:absolute;left:-100%;top:-100%;overflow:hidden').node\n  , poly: draw.polyline().node\n  , path: draw.path().node\n  , native: SVG.create('svg')\n  }\n}\n\nSVG.parser = {\n  native: SVG.create('svg')\n}\n\ndocument.addEventListener('DOMContentLoaded', function() {\n  if(!SVG.parser.draw)\n    SVG.prepare()\n}, false)\n\n// Storage for regular expressions\nSVG.regex = {\n  // Parse unit value\n  numberAndUnit:    /^([+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?)([a-z%]*)$/i\n\n  // Parse hex value\n, hex:              /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i\n\n  // Parse rgb value\n, rgb:              /rgb\\((\\d+),(\\d+),(\\d+)\\)/\n\n  // Parse reference id\n, reference:        /#([a-z0-9\\-_]+)/i\n\n  // splits a transformation chain\n, transforms:       /\\)\\s*,?\\s*/\n\n  // Whitespace\n, whitespace:       /\\s/g\n\n  // Test hex value\n, isHex:            /^#[a-f0-9]{3,6}$/i\n\n  // Test rgb value\n, isRgb:            /^rgb\\(/\n\n  // Test css declaration\n, isCss:            /[^:]+:[^;]+;?/\n\n  // Test for blank string\n, isBlank:          /^(\\s+)?$/\n\n  // Test for numeric string\n, isNumber:         /^[+-]?(\\d+(\\.\\d*)?|\\.\\d+)(e[+-]?\\d+)?$/i\n\n  // Test for percent value\n, isPercent:        /^-?[\\d\\.]+%$/\n\n  // Test for image url\n, isImage:          /\\.(jpg|jpeg|png|gif|svg)(\\?[^=]+.*)?/i\n\n  // split at whitespace and comma\n, delimiter:        /[\\s,]+/\n\n  // The following regex are used to parse the d attribute of a path\n\n  // Matches all hyphens which are not after an exponent\n, hyphen:           /([^e])\\-/gi\n\n  // Replaces and tests for all path letters\n, pathLetters:      /[MLHVCSQTAZ]/gi\n\n  // yes we need this one, too\n, isPathLetter:     /[MLHVCSQTAZ]/i\n\n  // matches 0.154.23.45\n, numbersWithDots:  /((\\d?\\.\\d+(?:e[+-]?\\d+)?)((?:\\.\\d+(?:e[+-]?\\d+)?)+))+/gi\n\n  // matches .\n, dots:             /\\./g\n}\n\nSVG.utils = {\n  // Map function\n  map: function(array, block) {\n    var i\n      , il = array.length\n      , result = []\n\n    for (i = 0; i < il; i++)\n      result.push(block(array[i]))\n\n    return result\n  }\n\n  // Filter function\n, filter: function(array, block) {\n    var i\n      , il = array.length\n      , result = []\n\n    for (i = 0; i < il; i++)\n      if (block(array[i]))\n        result.push(array[i])\n\n    return result\n  }\n\n  // Degrees to radians\n, radians: function(d) {\n    return d % 360 * Math.PI / 180\n  }\n\n  // Radians to degrees\n, degrees: function(r) {\n    return r * 180 / Math.PI % 360\n  }\n\n, filterSVGElements: function(nodes) {\n    return this.filter( nodes, function(el) { return el instanceof window.SVGElement })\n  }\n\n}\n\nSVG.defaults = {\n  // Default attribute values\n  attrs: {\n    // fill and stroke\n    'fill-opacity':     1\n  , 'stroke-opacity':   1\n  , 'stroke-width':     0\n  , 'stroke-linejoin':  'miter'\n  , 'stroke-linecap':   'butt'\n  , fill:               '#000000'\n  , stroke:             '#000000'\n  , opacity:            1\n    // position\n  , x:                  0\n  , y:                  0\n  , cx:                 0\n  , cy:                 0\n    // size\n  , width:              0\n  , height:             0\n    // radius\n  , r:                  0\n  , rx:                 0\n  , ry:                 0\n    // gradient\n  , offset:             0\n  , 'stop-opacity':     1\n  , 'stop-color':       '#000000'\n    // text\n  , 'font-size':        16\n  , 'font-family':      'Helvetica, Arial, sans-serif'\n  , 'text-anchor':      'start'\n  }\n\n}\n// Module for color convertions\nSVG.Color = function(color) {\n  var match\n\n  // initialize defaults\n  this.r = 0\n  this.g = 0\n  this.b = 0\n\n  if(!color) return\n\n  // parse color\n  if (typeof color === 'string') {\n    if (SVG.regex.isRgb.test(color)) {\n      // get rgb values\n      match = SVG.regex.rgb.exec(color.replace(SVG.regex.whitespace,''))\n\n      // parse numeric values\n      this.r = parseInt(match[1])\n      this.g = parseInt(match[2])\n      this.b = parseInt(match[3])\n\n    } else if (SVG.regex.isHex.test(color)) {\n      // get hex values\n      match = SVG.regex.hex.exec(fullHex(color))\n\n      // parse numeric values\n      this.r = parseInt(match[1], 16)\n      this.g = parseInt(match[2], 16)\n      this.b = parseInt(match[3], 16)\n\n    }\n\n  } else if (typeof color === 'object') {\n    this.r = color.r\n    this.g = color.g\n    this.b = color.b\n\n  }\n\n}\n\nSVG.extend(SVG.Color, {\n  // Default to hex conversion\n  toString: function() {\n    return this.toHex()\n  }\n  // Build hex value\n, toHex: function() {\n    return '#'\n      + compToHex(this.r)\n      + compToHex(this.g)\n      + compToHex(this.b)\n  }\n  // Build rgb value\n, toRgb: function() {\n    return 'rgb(' + [this.r, this.g, this.b].join() + ')'\n  }\n  // Calculate true brightness\n, brightness: function() {\n    return (this.r / 255 * 0.30)\n         + (this.g / 255 * 0.59)\n         + (this.b / 255 * 0.11)\n  }\n  // Make color morphable\n, morph: function(color) {\n    this.destination = new SVG.Color(color)\n\n    return this\n  }\n  // Get morphed color at given position\n, at: function(pos) {\n    // make sure a destination is defined\n    if (!this.destination) return this\n\n    // normalise pos\n    pos = pos < 0 ? 0 : pos > 1 ? 1 : pos\n\n    // generate morphed color\n    return new SVG.Color({\n      r: ~~(this.r + (this.destination.r - this.r) * pos)\n    , g: ~~(this.g + (this.destination.g - this.g) * pos)\n    , b: ~~(this.b + (this.destination.b - this.b) * pos)\n    })\n  }\n\n})\n\n// Testers\n\n// Test if given value is a color string\nSVG.Color.test = function(color) {\n  color += ''\n  return SVG.regex.isHex.test(color)\n      || SVG.regex.isRgb.test(color)\n}\n\n// Test if given value is a rgb object\nSVG.Color.isRgb = function(color) {\n  return color && typeof color.r == 'number'\n               && typeof color.g == 'number'\n               && typeof color.b == 'number'\n}\n\n// Test if given value is a color\nSVG.Color.isColor = function(color) {\n  return SVG.Color.isRgb(color) || SVG.Color.test(color)\n}\n// Module for array conversion\nSVG.Array = function(array, fallback) {\n  array = (array || []).valueOf()\n\n  // if array is empty and fallback is provided, use fallback\n  if (array.length == 0 && fallback)\n    array = fallback.valueOf()\n\n  // parse array\n  this.value = this.parse(array)\n}\n\nSVG.extend(SVG.Array, {\n  // Make array morphable\n  morph: function(array) {\n    this.destination = this.parse(array)\n\n    // normalize length of arrays\n    if (this.value.length != this.destination.length) {\n      var lastValue       = this.value[this.value.length - 1]\n        , lastDestination = this.destination[this.destination.length - 1]\n\n      while(this.value.length > this.destination.length)\n        this.destination.push(lastDestination)\n      while(this.value.length < this.destination.length)\n        this.value.push(lastValue)\n    }\n\n    return this\n  }\n  // Clean up any duplicate points\n, settle: function() {\n    // find all unique values\n    for (var i = 0, il = this.value.length, seen = []; i < il; i++)\n      if (seen.indexOf(this.value[i]) == -1)\n        seen.push(this.value[i])\n\n    // set new value\n    return this.value = seen\n  }\n  // Get morphed array at given position\n, at: function(pos) {\n    // make sure a destination is defined\n    if (!this.destination) return this\n\n    // generate morphed array\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\n      array.push(this.value[i] + (this.destination[i] - this.value[i]) * pos)\n\n    return new SVG.Array(array)\n  }\n  // Convert array to string\n, toString: function() {\n    return this.value.join(' ')\n  }\n  // Real value\n, valueOf: function() {\n    return this.value\n  }\n  // Parse whitespace separated string\n, parse: function(array) {\n    array = array.valueOf()\n\n    // if already is an array, no need to parse it\n    if (Array.isArray(array)) return array\n\n    return this.split(array)\n  }\n  // Strip unnecessary whitespace\n, split: function(string) {\n    return string.trim().split(SVG.regex.delimiter).map(parseFloat)\n  }\n  // Reverse array\n, reverse: function() {\n    this.value.reverse()\n\n    return this\n  }\n, clone: function() {\n    var clone = new this.constructor()\n    clone.value = array_clone(this.value)\n    return clone\n  }\n})\n// Poly points array\nSVG.PointArray = function(array, fallback) {\n  SVG.Array.call(this, array, fallback || [[0,0]])\n}\n\n// Inherit from SVG.Array\nSVG.PointArray.prototype = new SVG.Array\nSVG.PointArray.prototype.constructor = SVG.PointArray\n\nSVG.extend(SVG.PointArray, {\n  // Convert array to string\n  toString: function() {\n    // convert to a poly point string\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\n      array.push(this.value[i].join(','))\n\n    return array.join(' ')\n  }\n  // Convert array to line object\n, toLine: function() {\n    return {\n      x1: this.value[0][0]\n    , y1: this.value[0][1]\n    , x2: this.value[1][0]\n    , y2: this.value[1][1]\n    }\n  }\n  // Get morphed array at given position\n, at: function(pos) {\n    // make sure a destination is defined\n    if (!this.destination) return this\n\n    // generate morphed point string\n    for (var i = 0, il = this.value.length, array = []; i < il; i++)\n      array.push([\n        this.value[i][0] + (this.destination[i][0] - this.value[i][0]) * pos\n      , this.value[i][1] + (this.destination[i][1] - this.value[i][1]) * pos\n      ])\n\n    return new SVG.PointArray(array)\n  }\n  // Parse point string and flat array\n, parse: function(array) {\n    var points = []\n\n    array = array.valueOf()\n\n    // if it is an array\n    if (Array.isArray(array)) {\n      // and it is not flat, there is no need to parse it\n      if(Array.isArray(array[0])) {\n        // make sure to use a clone\n        return array.map(function (el) { return el.slice() })\n      } else if (array[0].x != null){\n        // allow point objects to be passed\n        return array.map(function (el) { return [el.x, el.y] })\n      }\n    } else { // Else, it is considered as a string\n      // parse points\n      array = array.trim().split(SVG.regex.delimiter).map(parseFloat)\n    }\n\n    // validate points - https://svgwg.org/svg2-draft/shapes.html#DataTypePoints\n    // Odd number of coordinates is an error. In such cases, drop the last odd coordinate.\n    if (array.length % 2 !== 0) array.pop()\n\n    // wrap points in two-tuples and parse points as floats\n    for(var i = 0, len = array.length; i < len; i = i + 2)\n      points.push([ array[i], array[i+1] ])\n\n    return points\n  }\n  // Move point string\n, move: function(x, y) {\n    var box = this.bbox()\n\n    // get relative offset\n    x -= box.x\n    y -= box.y\n\n    // move every point\n    if (!isNaN(x) && !isNaN(y))\n      for (var i = this.value.length - 1; i >= 0; i--)\n        this.value[i] = [this.value[i][0] + x, this.value[i][1] + y]\n\n    return this\n  }\n  // Resize poly string\n, size: function(width, height) {\n    var i, box = this.bbox()\n\n    // recalculate position of all points according to new size\n    for (i = this.value.length - 1; i >= 0; i--) {\n      if(box.width) this.value[i][0] = ((this.value[i][0] - box.x) * width)  / box.width  + box.x\n      if(box.height) this.value[i][1] = ((this.value[i][1] - box.y) * height) / box.height + box.y\n    }\n\n    return this\n  }\n  // Get bounding box of points\n, bbox: function() {\n    SVG.parser.poly.setAttribute('points', this.toString())\n\n    return SVG.parser.poly.getBBox()\n  }\n})\n\nvar pathHandlers = {\n  M: function(c, p, p0) {\n    p.x = p0.x = c[0]\n    p.y = p0.y = c[1]\n\n    return ['M', p.x, p.y]\n  },\n  L: function(c, p) {\n    p.x = c[0]\n    p.y = c[1]\n    return ['L', c[0], c[1]]\n  },\n  H: function(c, p) {\n    p.x = c[0]\n    return ['H', c[0]]\n  },\n  V: function(c, p) {\n    p.y = c[0]\n    return ['V', c[0]]\n  },\n  C: function(c, p) {\n    p.x = c[4]\n    p.y = c[5]\n    return ['C', c[0], c[1], c[2], c[3], c[4], c[5]]\n  },\n  S: function(c, p) {\n    p.x = c[2]\n    p.y = c[3]\n    return ['S', c[0], c[1], c[2], c[3]]\n  },\n  Q: function(c, p) {\n    p.x = c[2]\n    p.y = c[3]\n    return ['Q', c[0], c[1], c[2], c[3]]\n  },\n  T: function(c, p) {\n    p.x = c[0]\n    p.y = c[1]\n    return ['T', c[0], c[1]]\n  },\n  Z: function(c, p, p0) {\n    p.x = p0.x\n    p.y = p0.y\n    return ['Z']\n  },\n  A: function(c, p) {\n    p.x = c[5]\n    p.y = c[6]\n    return ['A', c[0], c[1], c[2], c[3], c[4], c[5], c[6]]\n  }\n}\n\nvar mlhvqtcsa = 'mlhvqtcsaz'.split('')\n\nfor(var i = 0, il = mlhvqtcsa.length; i < il; ++i){\n  pathHandlers[mlhvqtcsa[i]] = (function(i){\n    return function(c, p, p0) {\n      if(i == 'H') c[0] = c[0] + p.x\n      else if(i == 'V') c[0] = c[0] + p.y\n      else if(i == 'A'){\n        c[5] = c[5] + p.x,\n        c[6] = c[6] + p.y\n      }\n      else\n        for(var j = 0, jl = c.length; j < jl; ++j) {\n          c[j] = c[j] + (j%2 ? p.y : p.x)\n        }\n\n      return pathHandlers[i](c, p, p0)\n    }\n  })(mlhvqtcsa[i].toUpperCase())\n}\n\n// Path points array\nSVG.PathArray = function(array, fallback) {\n  SVG.Array.call(this, array, fallback || [['M', 0, 0]])\n}\n\n// Inherit from SVG.Array\nSVG.PathArray.prototype = new SVG.Array\nSVG.PathArray.prototype.constructor = SVG.PathArray\n\nSVG.extend(SVG.PathArray, {\n  // Convert array to string\n  toString: function() {\n    return arrayToString(this.value)\n  }\n  // Move path string\n, move: function(x, y) {\n    // get bounding box of current situation\n    var box = this.bbox()\n\n    // get relative offset\n    x -= box.x\n    y -= box.y\n\n    if (!isNaN(x) && !isNaN(y)) {\n      // move every point\n      for (var l, i = this.value.length - 1; i >= 0; i--) {\n        l = this.value[i][0]\n\n        if (l == 'M' || l == 'L' || l == 'T')  {\n          this.value[i][1] += x\n          this.value[i][2] += y\n\n        } else if (l == 'H')  {\n          this.value[i][1] += x\n\n        } else if (l == 'V')  {\n          this.value[i][1] += y\n\n        } else if (l == 'C' || l == 'S' || l == 'Q')  {\n          this.value[i][1] += x\n          this.value[i][2] += y\n          this.value[i][3] += x\n          this.value[i][4] += y\n\n          if (l == 'C')  {\n            this.value[i][5] += x\n            this.value[i][6] += y\n          }\n\n        } else if (l == 'A')  {\n          this.value[i][6] += x\n          this.value[i][7] += y\n        }\n\n      }\n    }\n\n    return this\n  }\n  // Resize path string\n, size: function(width, height) {\n    // get bounding box of current situation\n    var i, l, box = this.bbox()\n\n    // recalculate position of all points according to new size\n    for (i = this.value.length - 1; i >= 0; i--) {\n      l = this.value[i][0]\n\n      if (l == 'M' || l == 'L' || l == 'T')  {\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\n        this.value[i][2] = ((this.value[i][2] - box.y) * height) / box.height + box.y\n\n      } else if (l == 'H')  {\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\n\n      } else if (l == 'V')  {\n        this.value[i][1] = ((this.value[i][1] - box.y) * height) / box.height + box.y\n\n      } else if (l == 'C' || l == 'S' || l == 'Q')  {\n        this.value[i][1] = ((this.value[i][1] - box.x) * width)  / box.width  + box.x\n        this.value[i][2] = ((this.value[i][2] - box.y) * height) / box.height + box.y\n        this.value[i][3] = ((this.value[i][3] - box.x) * width)  / box.width  + box.x\n        this.value[i][4] = ((this.value[i][4] - box.y) * height) / box.height + box.y\n\n        if (l == 'C')  {\n          this.value[i][5] = ((this.value[i][5] - box.x) * width)  / box.width  + box.x\n          this.value[i][6] = ((this.value[i][6] - box.y) * height) / box.height + box.y\n        }\n\n      } else if (l == 'A')  {\n        // resize radii\n        this.value[i][1] = (this.value[i][1] * width)  / box.width\n        this.value[i][2] = (this.value[i][2] * height) / box.height\n\n        // move position values\n        this.value[i][6] = ((this.value[i][6] - box.x) * width)  / box.width  + box.x\n        this.value[i][7] = ((this.value[i][7] - box.y) * height) / box.height + box.y\n      }\n\n    }\n\n    return this\n  }\n  // Test if the passed path array use the same path data commands as this path array\n, equalCommands: function(pathArray) {\n    var i, il, equalCommands\n\n    pathArray = new SVG.PathArray(pathArray)\n\n    equalCommands = this.value.length === pathArray.value.length\n    for(i = 0, il = this.value.length; equalCommands && i < il; i++) {\n      equalCommands = this.value[i][0] === pathArray.value[i][0]\n    }\n\n    return equalCommands\n  }\n  // Make path array morphable\n, morph: function(pathArray) {\n    pathArray = new SVG.PathArray(pathArray)\n\n    if(this.equalCommands(pathArray)) {\n      this.destination = pathArray\n    } else {\n      this.destination = null\n    }\n\n    return this\n  }\n  // Get morphed path array at given position\n, at: function(pos) {\n    // make sure a destination is defined\n    if (!this.destination) return this\n\n    var sourceArray = this.value\n      , destinationArray = this.destination.value\n      , array = [], pathArray = new SVG.PathArray()\n      , i, il, j, jl\n\n    // Animate has specified in the SVG spec\n    // See: https://www.w3.org/TR/SVG11/paths.html#PathElement\n    for (i = 0, il = sourceArray.length; i < il; i++) {\n      array[i] = [sourceArray[i][0]]\n      for(j = 1, jl = sourceArray[i].length; j < jl; j++) {\n        array[i][j] = sourceArray[i][j] + (destinationArray[i][j] - sourceArray[i][j]) * pos\n      }\n      // For the two flags of the elliptical arc command, the SVG spec say:\n      // Flags and booleans are interpolated as fractions between zero and one, with any non-zero value considered to be a value of one/true\n      // Elliptical arc command as an array followed by corresponding indexes:\n      // ['A', rx, ry, x-axis-rotation, large-arc-flag, sweep-flag, x, y]\n      //   0    1   2        3                 4             5      6  7\n      if(array[i][0] === 'A') {\n        array[i][4] = +(array[i][4] != 0)\n        array[i][5] = +(array[i][5] != 0)\n      }\n    }\n\n    // Directly modify the value of a path array, this is done this way for performance\n    pathArray.value = array\n    return pathArray\n  }\n  // Absolutize and parse path to array\n, parse: function(array) {\n    // if it's already a patharray, no need to parse it\n    if (array instanceof SVG.PathArray) return array.valueOf()\n\n    // prepare for parsing\n    var i, x0, y0, s, seg, arr\n      , x = 0\n      , y = 0\n      , paramCnt = { 'M':2, 'L':2, 'H':1, 'V':1, 'C':6, 'S':4, 'Q':4, 'T':2, 'A':7, 'Z':0 }\n\n    if(typeof array == 'string'){\n\n      array = array\n        .replace(SVG.regex.numbersWithDots, pathRegReplace) // convert 45.123.123 to 45.123 .123\n        .replace(SVG.regex.pathLetters, ' $& ') // put some room between letters and numbers\n        .replace(SVG.regex.hyphen, '$1 -')      // add space before hyphen\n        .trim()                                 // trim\n        .split(SVG.regex.delimiter)   // split into array\n\n    }else{\n      array = array.reduce(function(prev, curr){\n        return [].concat.call(prev, curr)\n      }, [])\n    }\n\n    // array now is an array containing all parts of a path e.g. ['M', '0', '0', 'L', '30', '30' ...]\n    var arr = []\n      , p = new SVG.Point()\n      , p0 = new SVG.Point()\n      , index = 0\n      , len = array.length\n\n    do{\n      // Test if we have a path letter\n      if(SVG.regex.isPathLetter.test(array[index])){\n        s = array[index]\n        ++index\n      // If last letter was a move command and we got no new, it defaults to [L]ine\n      }else if(s == 'M'){\n        s = 'L'\n      }else if(s == 'm'){\n        s = 'l'\n      }\n\n      arr.push(pathHandlers[s].call(null,\n          array.slice(index, (index = index + paramCnt[s.toUpperCase()])).map(parseFloat),\n          p, p0\n        )\n      )\n\n    }while(len > index)\n\n    return arr\n\n  }\n  // Get bounding box of path\n, bbox: function() {\n    SVG.parser.path.setAttribute('d', this.toString())\n\n    return SVG.parser.path.getBBox()\n  }\n\n})\n\n// Module for unit convertions\nSVG.Number = SVG.invent({\n  // Initialize\n  create: function(value, unit) {\n    // initialize defaults\n    this.value = 0\n    this.unit  = unit || ''\n\n    // parse value\n    if (typeof value === 'number') {\n      // ensure a valid numeric value\n      this.value = isNaN(value) ? 0 : !isFinite(value) ? (value < 0 ? -3.4e+38 : +3.4e+38) : value\n\n    } else if (typeof value === 'string') {\n      unit = value.match(SVG.regex.numberAndUnit)\n\n      if (unit) {\n        // make value numeric\n        this.value = parseFloat(unit[1])\n\n        // normalize\n        if (unit[5] == '%')\n          this.value /= 100\n        else if (unit[5] == 's')\n          this.value *= 1000\n\n        // store unit\n        this.unit = unit[5]\n      }\n\n    } else {\n      if (value instanceof SVG.Number) {\n        this.value = value.valueOf()\n        this.unit  = value.unit\n      }\n    }\n\n  }\n  // Add methods\n, extend: {\n    // Stringalize\n    toString: function() {\n      return (\n        this.unit == '%' ?\n          ~~(this.value * 1e8) / 1e6:\n        this.unit == 's' ?\n          this.value / 1e3 :\n          this.value\n      ) + this.unit\n    }\n  , toJSON: function() {\n      return this.toString()\n    }\n  , // Convert to primitive\n    valueOf: function() {\n      return this.value\n    }\n    // Add number\n  , plus: function(number) {\n      number = new SVG.Number(number)\n      return new SVG.Number(this + number, this.unit || number.unit)\n    }\n    // Subtract number\n  , minus: function(number) {\n      number = new SVG.Number(number)\n      return new SVG.Number(this - number, this.unit || number.unit)\n    }\n    // Multiply number\n  , times: function(number) {\n      number = new SVG.Number(number)\n      return new SVG.Number(this * number, this.unit || number.unit)\n    }\n    // Divide number\n  , divide: function(number) {\n      number = new SVG.Number(number)\n      return new SVG.Number(this / number, this.unit || number.unit)\n    }\n    // Convert to different unit\n  , to: function(unit) {\n      var number = new SVG.Number(this)\n\n      if (typeof unit === 'string')\n        number.unit = unit\n\n      return number\n    }\n    // Make number morphable\n  , morph: function(number) {\n      this.destination = new SVG.Number(number)\n\n      if(number.relative) {\n        this.destination.value += this.value\n      }\n\n      return this\n    }\n    // Get morphed number at given position\n  , at: function(pos) {\n      // Make sure a destination is defined\n      if (!this.destination) return this\n\n      // Generate new morphed number\n      return new SVG.Number(this.destination)\n          .minus(this)\n          .times(pos)\n          .plus(this)\n    }\n\n  }\n})\n\n\nSVG.Element = SVG.invent({\n  // Initialize node\n  create: function(node) {\n    // make stroke value accessible dynamically\n    this._stroke = SVG.defaults.attrs.stroke\n    this._event = null\n\n    // initialize data object\n    this.dom = {}\n\n    // create circular reference\n    if (this.node = node) {\n      this.type = node.nodeName\n      this.node.instance = this\n\n      // store current attribute value\n      this._stroke = node.getAttribute('stroke') || this._stroke\n    }\n  }\n\n  // Add class methods\n, extend: {\n    // Move over x-axis\n    x: function(x) {\n      return this.attr('x', x)\n    }\n    // Move over y-axis\n  , y: function(y) {\n      return this.attr('y', y)\n    }\n    // Move by center over x-axis\n  , cx: function(x) {\n      return x == null ? this.x() + this.width() / 2 : this.x(x - this.width() / 2)\n    }\n    // Move by center over y-axis\n  , cy: function(y) {\n      return y == null ? this.y() + this.height() / 2 : this.y(y - this.height() / 2)\n    }\n    // Move element to given x and y values\n  , move: function(x, y) {\n      return this.x(x).y(y)\n    }\n    // Move element by its center\n  , center: function(x, y) {\n      return this.cx(x).cy(y)\n    }\n    // Set width of element\n  , width: function(width) {\n      return this.attr('width', width)\n    }\n    // Set height of element\n  , height: function(height) {\n      return this.attr('height', height)\n    }\n    // Set element size to given width and height\n  , size: function(width, height) {\n      var p = proportionalSize(this, width, height)\n\n      return this\n        .width(new SVG.Number(p.width))\n        .height(new SVG.Number(p.height))\n    }\n    // Clone element\n  , clone: function(parent) {\n      // write dom data to the dom so the clone can pickup the data\n      this.writeDataToDom()\n\n      // clone element and assign new id\n      var clone = assignNewId(this.node.cloneNode(true))\n\n      // insert the clone in the given parent or after myself\n      if(parent) parent.add(clone)\n      else this.after(clone)\n\n      return clone\n    }\n    // Remove element\n  , remove: function() {\n      if (this.parent())\n        this.parent().removeElement(this)\n\n      return this\n    }\n    // Replace element\n  , replace: function(element) {\n      this.after(element).remove()\n\n      return element\n    }\n    // Add element to given container and return self\n  , addTo: function(parent) {\n      return parent.put(this)\n    }\n    // Add element to given container and return container\n  , putIn: function(parent) {\n      return parent.add(this)\n    }\n    // Get / set id\n  , id: function(id) {\n      return this.attr('id', id)\n    }\n    // Checks whether the given point inside the bounding box of the element\n  , inside: function(x, y) {\n      var box = this.bbox()\n\n      return x > box.x\n          && y > box.y\n          && x < box.x + box.width\n          && y < box.y + box.height\n    }\n    // Show element\n  , show: function() {\n      return this.style('display', '')\n    }\n    // Hide element\n  , hide: function() {\n      return this.style('display', 'none')\n    }\n    // Is element visible?\n  , visible: function() {\n      return this.style('display') != 'none'\n    }\n    // Return id on string conversion\n  , toString: function() {\n      return this.attr('id')\n    }\n    // Return array of classes on the node\n  , classes: function() {\n      var attr = this.attr('class')\n\n      return attr == null ? [] : attr.trim().split(SVG.regex.delimiter)\n    }\n    // Return true if class exists on the node, false otherwise\n  , hasClass: function(name) {\n      return this.classes().indexOf(name) != -1\n    }\n    // Add class to the node\n  , addClass: function(name) {\n      if (!this.hasClass(name)) {\n        var array = this.classes()\n        array.push(name)\n        this.attr('class', array.join(' '))\n      }\n\n      return this\n    }\n    // Remove class from the node\n  , removeClass: function(name) {\n      if (this.hasClass(name)) {\n        this.attr('class', this.classes().filter(function(c) {\n          return c != name\n        }).join(' '))\n      }\n\n      return this\n    }\n    // Toggle the presence of a class on the node\n  , toggleClass: function(name) {\n      return this.hasClass(name) ? this.removeClass(name) : this.addClass(name)\n    }\n    // Get referenced element form attribute value\n  , reference: function(attr) {\n      return SVG.get(this.attr(attr))\n    }\n    // Returns the parent element instance\n  , parent: function(type) {\n      var parent = this\n\n      // check for parent\n      if(!parent.node.parentNode) return null\n\n      // get parent element\n      parent = SVG.adopt(parent.node.parentNode)\n\n      if(!type) return parent\n\n      // loop trough ancestors if type is given\n      while(parent && parent.node instanceof window.SVGElement){\n        if(typeof type === 'string' ? parent.matches(type) : parent instanceof type) return parent\n        if(!parent.node.parentNode || parent.node.parentNode.nodeName == '#document') return null // #759, #720\n        parent = SVG.adopt(parent.node.parentNode)\n      }\n    }\n    // Get parent document\n  , doc: function() {\n      return this instanceof SVG.Doc ? this : this.parent(SVG.Doc)\n    }\n    // return array of all ancestors of given type up to the root svg\n  , parents: function(type) {\n      var parents = [], parent = this\n\n      do{\n        parent = parent.parent(type)\n        if(!parent || !parent.node) break\n\n        parents.push(parent)\n      } while(parent.parent)\n\n      return parents\n    }\n    // matches the element vs a css selector\n  , matches: function(selector){\n      return matches(this.node, selector)\n    }\n    // Returns the svg node to call native svg methods on it\n  , native: function() {\n      return this.node\n    }\n    // Import raw svg\n  , svg: function(svg) {\n      // create temporary holder\n      var well = document.createElement('svg')\n\n      // act as a setter if svg is given\n      if (svg && this instanceof SVG.Parent) {\n        // dump raw svg\n        well.innerHTML = '<svg>' + svg.replace(/\\n/, '').replace(/<([\\w:-]+)([^<]+?)\\/>/g, '<$1$2></$1>') + '</svg>'\n\n        // transplant nodes\n        for (var i = 0, il = well.firstChild.childNodes.length; i < il; i++)\n          this.node.appendChild(well.firstChild.firstChild)\n\n      // otherwise act as a getter\n      } else {\n        // create a wrapping svg element in case of partial content\n        well.appendChild(svg = document.createElement('svg'))\n\n        // write svgjs data to the dom\n        this.writeDataToDom()\n\n        // insert a copy of this node\n        svg.appendChild(this.node.cloneNode(true))\n\n        // return target element\n        return well.innerHTML.replace(/^<svg>/, '').replace(/<\\/svg>$/, '')\n      }\n\n      return this\n    }\n  // write svgjs data to the dom\n  , writeDataToDom: function() {\n\n      // dump variables recursively\n      if(this.each || this.lines){\n        var fn = this.each ? this : this.lines();\n        fn.each(function(){\n          this.writeDataToDom()\n        })\n      }\n\n      // remove previously set data\n      this.node.removeAttribute('svgjs:data')\n\n      if(Object.keys(this.dom).length)\n        this.node.setAttribute('svgjs:data', JSON.stringify(this.dom)) // see #428\n\n      return this\n    }\n  // set given data to the elements data property\n  , setData: function(o){\n      this.dom = o\n      return this\n    }\n  , is: function(obj){\n      return is(this, obj)\n    }\n  }\n})\n\nSVG.easing = {\n  '-': function(pos){return pos}\n, '<>':function(pos){return -Math.cos(pos * Math.PI) / 2 + 0.5}\n, '>': function(pos){return  Math.sin(pos * Math.PI / 2)}\n, '<': function(pos){return -Math.cos(pos * Math.PI / 2) + 1}\n}\n\nSVG.morph = function(pos){\n  return function(from, to) {\n    return new SVG.MorphObj(from, to).at(pos)\n  }\n}\n\nSVG.Situation = SVG.invent({\n\n  create: function(o){\n    this.init = false\n    this.reversed = false\n    this.reversing = false\n\n    this.duration = new SVG.Number(o.duration).valueOf()\n    this.delay = new SVG.Number(o.delay).valueOf()\n\n    this.start = +new Date() + this.delay\n    this.finish = this.start + this.duration\n    this.ease = o.ease\n\n    // this.loop is incremented from 0 to this.loops\n    // it is also incremented when in an infinite loop (when this.loops is true)\n    this.loop = 0\n    this.loops = false\n\n    this.animations = {\n      // functionToCall: [list of morphable objects]\n      // e.g. move: [SVG.Number, SVG.Number]\n    }\n\n    this.attrs = {\n      // holds all attributes which are not represented from a function svg.js provides\n      // e.g. someAttr: SVG.Number\n    }\n\n    this.styles = {\n      // holds all styles which should be animated\n      // e.g. fill-color: SVG.Color\n    }\n\n    this.transforms = [\n      // holds all transformations as transformation objects\n      // e.g. [SVG.Rotate, SVG.Translate, SVG.Matrix]\n    ]\n\n    this.once = {\n      // functions to fire at a specific position\n      // e.g. \"0.5\": function foo(){}\n    }\n\n  }\n\n})\n\n\nSVG.FX = SVG.invent({\n\n  create: function(element) {\n    this._target = element\n    this.situations = []\n    this.active = false\n    this.situation = null\n    this.paused = false\n    this.lastPos = 0\n    this.pos = 0\n    // The absolute position of an animation is its position in the context of its complete duration (including delay and loops)\n    // When performing a delay, absPos is below 0 and when performing a loop, its value is above 1\n    this.absPos = 0\n    this._speed = 1\n  }\n\n, extend: {\n\n    /**\n     * sets or returns the target of this animation\n     * @param o object || number In case of Object it holds all parameters. In case of number its the duration of the animation\n     * @param ease function || string Function which should be used for easing or easing keyword\n     * @param delay Number indicating the delay before the animation starts\n     * @return target || this\n     */\n    animate: function(o, ease, delay){\n\n      if(typeof o == 'object'){\n        ease = o.ease\n        delay = o.delay\n        o = o.duration\n      }\n\n      var situation = new SVG.Situation({\n        duration: o || 1000,\n        delay: delay || 0,\n        ease: SVG.easing[ease || '-'] || ease\n      })\n\n      this.queue(situation)\n\n      return this\n    }\n\n    /**\n     * sets a delay before the next element of the queue is called\n     * @param delay Duration of delay in milliseconds\n     * @return this.target()\n     */\n  , delay: function(delay){\n      // The delay is performed by an empty situation with its duration\n      // attribute set to the duration of the delay\n      var situation = new SVG.Situation({\n        duration: delay,\n        delay: 0,\n        ease: SVG.easing['-']\n      })\n\n      return this.queue(situation)\n    }\n\n    /**\n     * sets or returns the target of this animation\n     * @param null || target SVG.Element which should be set as new target\n     * @return target || this\n     */\n  , target: function(target){\n      if(target && target instanceof SVG.Element){\n        this._target = target\n        return this\n      }\n\n      return this._target\n    }\n\n    // returns the absolute position at a given time\n  , timeToAbsPos: function(timestamp){\n      return (timestamp - this.situation.start) / (this.situation.duration/this._speed)\n    }\n\n    // returns the timestamp from a given absolute positon\n  , absPosToTime: function(absPos){\n      return this.situation.duration/this._speed * absPos + this.situation.start\n    }\n\n    // starts the animationloop\n  , startAnimFrame: function(){\n      this.stopAnimFrame()\n      this.animationFrame = window.requestAnimationFrame(function(){ this.step() }.bind(this))\n    }\n\n    // cancels the animationframe\n  , stopAnimFrame: function(){\n      window.cancelAnimationFrame(this.animationFrame)\n    }\n\n    // kicks off the animation - only does something when the queue is currently not active and at least one situation is set\n  , start: function(){\n      // dont start if already started\n      if(!this.active && this.situation){\n        this.active = true\n        this.startCurrent()\n      }\n\n      return this\n    }\n\n    // start the current situation\n  , startCurrent: function(){\n      this.situation.start = +new Date + this.situation.delay/this._speed\n      this.situation.finish = this.situation.start + this.situation.duration/this._speed\n      return this.initAnimations().step()\n    }\n\n    /**\n     * adds a function / Situation to the animation queue\n     * @param fn function / situation to add\n     * @return this\n     */\n  , queue: function(fn){\n      if(typeof fn == 'function' || fn instanceof SVG.Situation)\n        this.situations.push(fn)\n\n      if(!this.situation) this.situation = this.situations.shift()\n\n      return this\n    }\n\n    /**\n     * pulls next element from the queue and execute it\n     * @return this\n     */\n  , dequeue: function(){\n      // stop current animation\n      this.stop()\n\n      // get next animation from queue\n      this.situation = this.situations.shift()\n\n      if(this.situation){\n        if(this.situation instanceof SVG.Situation) {\n          this.start()\n        } else {\n          // If it is not a SVG.Situation, then it is a function, we execute it\n          this.situation.call(this)\n        }\n      }\n\n      return this\n    }\n\n    // updates all animations to the current state of the element\n    // this is important when one property could be changed from another property\n  , initAnimations: function() {\n      var i, j, source\n      var s = this.situation\n\n      if(s.init) return this\n\n      for(i in s.animations){\n        source = this.target()[i]()\n\n        if(!Array.isArray(source)) {\n          source = [source]\n        }\n\n        if(!Array.isArray(s.animations[i])) {\n          s.animations[i] = [s.animations[i]]\n        }\n\n        //if(s.animations[i].length > source.length) {\n        //  source.concat = source.concat(s.animations[i].slice(source.length, s.animations[i].length))\n        //}\n\n        for(j = source.length; j--;) {\n          // The condition is because some methods return a normal number instead\n          // of a SVG.Number\n          if(s.animations[i][j] instanceof SVG.Number)\n            source[j] = new SVG.Number(source[j])\n\n          s.animations[i][j] = source[j].morph(s.animations[i][j])\n        }\n      }\n\n      for(i in s.attrs){\n        s.attrs[i] = new SVG.MorphObj(this.target().attr(i), s.attrs[i])\n      }\n\n      for(i in s.styles){\n        s.styles[i] = new SVG.MorphObj(this.target().style(i), s.styles[i])\n      }\n\n      s.initialTransformation = this.target().matrixify()\n\n      s.init = true\n      return this\n    }\n  , clearQueue: function(){\n      this.situations = []\n      return this\n    }\n  , clearCurrent: function(){\n      this.situation = null\n      return this\n    }\n    /** stops the animation immediately\n     * @param jumpToEnd A Boolean indicating whether to complete the current animation immediately.\n     * @param clearQueue A Boolean indicating whether to remove queued animation as well.\n     * @return this\n     */\n  , stop: function(jumpToEnd, clearQueue){\n      var active = this.active\n      this.active = false\n\n      if(clearQueue){\n        this.clearQueue()\n      }\n\n      if(jumpToEnd && this.situation){\n        // initialize the situation if it was not\n        !active && this.startCurrent()\n        this.atEnd()\n      }\n\n      this.stopAnimFrame()\n\n      return this.clearCurrent()\n    }\n\n    /** resets the element to the state where the current element has started\n     * @return this\n     */\n  , reset: function(){\n      if(this.situation){\n        var temp = this.situation\n        this.stop()\n        this.situation = temp\n        this.atStart()\n      }\n      return this\n    }\n\n    // Stop the currently-running animation, remove all queued animations, and complete all animations for the element.\n  , finish: function(){\n\n      this.stop(true, false)\n\n      while(this.dequeue().situation && this.stop(true, false));\n\n      this.clearQueue().clearCurrent()\n\n      return this\n    }\n\n    // set the internal animation pointer at the start position, before any loops, and updates the visualisation\n  , atStart: function() {\n      return this.at(0, true)\n    }\n\n    // set the internal animation pointer at the end position, after all the loops, and updates the visualisation\n  , atEnd: function() {\n      if (this.situation.loops === true) {\n        // If in a infinite loop, we end the current iteration\n        this.situation.loops = this.situation.loop + 1\n      }\n\n      if(typeof this.situation.loops == 'number') {\n        // If performing a finite number of loops, we go after all the loops\n        return this.at(this.situation.loops, true)\n      } else {\n        // If no loops, we just go at the end\n        return this.at(1, true)\n      }\n    }\n\n    // set the internal animation pointer to the specified position and updates the visualisation\n    // if isAbsPos is true, pos is treated as an absolute position\n  , at: function(pos, isAbsPos){\n      var durDivSpd = this.situation.duration/this._speed\n\n      this.absPos = pos\n      // If pos is not an absolute position, we convert it into one\n      if (!isAbsPos) {\n        if (this.situation.reversed) this.absPos = 1 - this.absPos\n        this.absPos += this.situation.loop\n      }\n\n      this.situation.start = +new Date - this.absPos * durDivSpd\n      this.situation.finish = this.situation.start + durDivSpd\n\n      return this.step(true)\n    }\n\n    /**\n     * sets or returns the speed of the animations\n     * @param speed null || Number The new speed of the animations\n     * @return Number || this\n     */\n  , speed: function(speed){\n      if (speed === 0) return this.pause()\n\n      if (speed) {\n        this._speed = speed\n        // We use an absolute position here so that speed can affect the delay before the animation\n        return this.at(this.absPos, true)\n      } else return this._speed\n    }\n\n    // Make loopable\n  , loop: function(times, reverse) {\n      var c = this.last()\n\n      // store total loops\n      c.loops = (times != null) ? times : true\n      c.loop = 0\n\n      if(reverse) c.reversing = true\n      return this\n    }\n\n    // pauses the animation\n  , pause: function(){\n      this.paused = true\n      this.stopAnimFrame()\n\n      return this\n    }\n\n    // unpause the animation\n  , play: function(){\n      if(!this.paused) return this\n      this.paused = false\n      // We use an absolute position here so that the delay before the animation can be paused\n      return this.at(this.absPos, true)\n    }\n\n    /**\n     * toggle or set the direction of the animation\n     * true sets direction to backwards while false sets it to forwards\n     * @param reversed Boolean indicating whether to reverse the animation or not (default: toggle the reverse status)\n     * @return this\n     */\n  , reverse: function(reversed){\n      var c = this.last()\n\n      if(typeof reversed == 'undefined') c.reversed = !c.reversed\n      else c.reversed = reversed\n\n      return this\n    }\n\n\n    /**\n     * returns a float from 0-1 indicating the progress of the current animation\n     * @param eased Boolean indicating whether the returned position should be eased or not\n     * @return number\n     */\n  , progress: function(easeIt){\n      return easeIt ? this.situation.ease(this.pos) : this.pos\n    }\n\n    /**\n     * adds a callback function which is called when the current animation is finished\n     * @param fn Function which should be executed as callback\n     * @return number\n     */\n  , after: function(fn){\n      var c = this.last()\n        , wrapper = function wrapper(e){\n            if(e.detail.situation == c){\n              fn.call(this, c)\n              this.off('finished.fx', wrapper) // prevent memory leak\n            }\n          }\n\n      this.target().on('finished.fx', wrapper)\n\n      return this._callStart()\n    }\n\n    // adds a callback which is called whenever one animation step is performed\n  , during: function(fn){\n      var c = this.last()\n        , wrapper = function(e){\n            if(e.detail.situation == c){\n              fn.call(this, e.detail.pos, SVG.morph(e.detail.pos), e.detail.eased, c)\n            }\n          }\n\n      // see above\n      this.target().off('during.fx', wrapper).on('during.fx', wrapper)\n\n      this.after(function(){\n        this.off('during.fx', wrapper)\n      })\n\n      return this._callStart()\n    }\n\n    // calls after ALL animations in the queue are finished\n  , afterAll: function(fn){\n      var wrapper = function wrapper(e){\n            fn.call(this)\n            this.off('allfinished.fx', wrapper)\n          }\n\n      // see above\n      this.target().off('allfinished.fx', wrapper).on('allfinished.fx', wrapper)\n\n      return this._callStart()\n    }\n\n    // calls on every animation step for all animations\n  , duringAll: function(fn){\n      var wrapper = function(e){\n            fn.call(this, e.detail.pos, SVG.morph(e.detail.pos), e.detail.eased, e.detail.situation)\n          }\n\n      this.target().off('during.fx', wrapper).on('during.fx', wrapper)\n\n      this.afterAll(function(){\n        this.off('during.fx', wrapper)\n      })\n\n      return this._callStart()\n    }\n\n  , last: function(){\n      return this.situations.length ? this.situations[this.situations.length-1] : this.situation\n    }\n\n    // adds one property to the animations\n  , add: function(method, args, type){\n      this.last()[type || 'animations'][method] = args\n      return this._callStart()\n    }\n\n    /** perform one step of the animation\n     *  @param ignoreTime Boolean indicating whether to ignore time and use position directly or recalculate position based on time\n     *  @return this\n     */\n  , step: function(ignoreTime){\n\n      // convert current time to an absolute position\n      if(!ignoreTime) this.absPos = this.timeToAbsPos(+new Date)\n\n      // This part convert an absolute position to a position\n      if(this.situation.loops !== false) {\n        var absPos, absPosInt, lastLoop\n\n        // If the absolute position is below 0, we just treat it as if it was 0\n        absPos = Math.max(this.absPos, 0)\n        absPosInt = Math.floor(absPos)\n\n        if(this.situation.loops === true || absPosInt < this.situation.loops) {\n          this.pos = absPos - absPosInt\n          lastLoop = this.situation.loop\n          this.situation.loop = absPosInt\n        } else {\n          this.absPos = this.situation.loops\n          this.pos = 1\n          // The -1 here is because we don't want to toggle reversed when all the loops have been completed\n          lastLoop = this.situation.loop - 1\n          this.situation.loop = this.situation.loops\n        }\n\n        if(this.situation.reversing) {\n          // Toggle reversed if an odd number of loops as occured since the last call of step\n          this.situation.reversed = this.situation.reversed != Boolean((this.situation.loop - lastLoop) % 2)\n        }\n\n      } else {\n        // If there are no loop, the absolute position must not be above 1\n        this.absPos = Math.min(this.absPos, 1)\n        this.pos = this.absPos\n      }\n\n      // while the absolute position can be below 0, the position must not be below 0\n      if(this.pos < 0) this.pos = 0\n\n      if(this.situation.reversed) this.pos = 1 - this.pos\n\n\n      // apply easing\n      var eased = this.situation.ease(this.pos)\n\n      // call once-callbacks\n      for(var i in this.situation.once){\n        if(i > this.lastPos && i <= eased){\n          this.situation.once[i].call(this.target(), this.pos, eased)\n          delete this.situation.once[i]\n        }\n      }\n\n      // fire during callback with position, eased position and current situation as parameter\n      if(this.active) this.target().fire('during', {pos: this.pos, eased: eased, fx: this, situation: this.situation})\n\n      // the user may call stop or finish in the during callback\n      // so make sure that we still have a valid situation\n      if(!this.situation){\n        return this\n      }\n\n      // apply the actual animation to every property\n      this.eachAt()\n\n      // do final code when situation is finished\n      if((this.pos == 1 && !this.situation.reversed) || (this.situation.reversed && this.pos == 0)){\n\n        // stop animation callback\n        this.stopAnimFrame()\n\n        // fire finished callback with current situation as parameter\n        this.target().fire('finished', {fx:this, situation: this.situation})\n\n        if(!this.situations.length){\n          this.target().fire('allfinished')\n\n          // Recheck the length since the user may call animate in the afterAll callback\n          if(!this.situations.length){\n            this.target().off('.fx') // there shouldnt be any binding left, but to make sure...\n            this.active = false\n          }\n        }\n\n        // start next animation\n        if(this.active) this.dequeue()\n        else this.clearCurrent()\n\n      }else if(!this.paused && this.active){\n        // we continue animating when we are not at the end\n        this.startAnimFrame()\n      }\n\n      // save last eased position for once callback triggering\n      this.lastPos = eased\n      return this\n\n    }\n\n    // calculates the step for every property and calls block with it\n  , eachAt: function(){\n      var i, len, at, self = this, target = this.target(), s = this.situation\n\n      // apply animations which can be called trough a method\n      for(i in s.animations){\n\n        at = [].concat(s.animations[i]).map(function(el){\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\n        })\n\n        target[i].apply(target, at)\n\n      }\n\n      // apply animation which has to be applied with attr()\n      for(i in s.attrs){\n\n        at = [i].concat(s.attrs[i]).map(function(el){\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\n        })\n\n        target.attr.apply(target, at)\n\n      }\n\n      // apply animation which has to be applied with style()\n      for(i in s.styles){\n\n        at = [i].concat(s.styles[i]).map(function(el){\n          return typeof el !== 'string' && el.at ? el.at(s.ease(self.pos), self.pos) : el\n        })\n\n        target.style.apply(target, at)\n\n      }\n\n      // animate initialTransformation which has to be chained\n      if(s.transforms.length){\n\n        // get initial initialTransformation\n        at = s.initialTransformation\n        for(i = 0, len = s.transforms.length; i < len; i++){\n\n          // get next transformation in chain\n          var a = s.transforms[i]\n\n          // multiply matrix directly\n          if(a instanceof SVG.Matrix){\n\n            if(a.relative){\n              at = at.multiply(new SVG.Matrix().morph(a).at(s.ease(this.pos)))\n            }else{\n              at = at.morph(a).at(s.ease(this.pos))\n            }\n            continue\n          }\n\n          // when transformation is absolute we have to reset the needed transformation first\n          if(!a.relative)\n            a.undo(at.extract())\n\n          // and reapply it after\n          at = at.multiply(a.at(s.ease(this.pos)))\n\n        }\n\n        // set new matrix on element\n        target.matrix(at)\n      }\n\n      return this\n\n    }\n\n\n    // adds an once-callback which is called at a specific position and never again\n  , once: function(pos, fn, isEased){\n      var c = this.last()\n      if(!isEased) pos = c.ease(pos)\n\n      c.once[pos] = fn\n\n      return this\n    }\n\n  , _callStart: function() {\n      setTimeout(function(){this.start()}.bind(this), 0)\n      return this\n    }\n\n  }\n\n, parent: SVG.Element\n\n  // Add method to parent elements\n, construct: {\n    // Get fx module or create a new one, then animate with given duration and ease\n    animate: function(o, ease, delay) {\n      return (this.fx || (this.fx = new SVG.FX(this))).animate(o, ease, delay)\n    }\n  , delay: function(delay){\n      return (this.fx || (this.fx = new SVG.FX(this))).delay(delay)\n    }\n  , stop: function(jumpToEnd, clearQueue) {\n      if (this.fx)\n        this.fx.stop(jumpToEnd, clearQueue)\n\n      return this\n    }\n  , finish: function() {\n      if (this.fx)\n        this.fx.finish()\n\n      return this\n    }\n    // Pause current animation\n  , pause: function() {\n      if (this.fx)\n        this.fx.pause()\n\n      return this\n    }\n    // Play paused current animation\n  , play: function() {\n      if (this.fx)\n        this.fx.play()\n\n      return this\n    }\n    // Set/Get the speed of the animations\n  , speed: function(speed) {\n      if (this.fx)\n        if (speed == null)\n          return this.fx.speed()\n        else\n          this.fx.speed(speed)\n\n      return this\n    }\n  }\n\n})\n\n// MorphObj is used whenever no morphable object is given\nSVG.MorphObj = SVG.invent({\n\n  create: function(from, to){\n    // prepare color for morphing\n    if(SVG.Color.isColor(to)) return new SVG.Color(from).morph(to)\n    // check if we have a list of values\n    if(SVG.regex.delimiter.test(from)) {\n      // prepare path for morphing\n      if(SVG.regex.pathLetters.test(from)) return new SVG.PathArray(from).morph(to)\n      // prepare value list for morphing\n      else return new SVG.Array(from).morph(to)\n    }\n    // prepare number for morphing\n    if(SVG.regex.numberAndUnit.test(to)) return new SVG.Number(from).morph(to)\n\n    // prepare for plain morphing\n    this.value = from\n    this.destination = to\n  }\n\n, extend: {\n    at: function(pos, real){\n      return real < 1 ? this.value : this.destination\n    },\n\n    valueOf: function(){\n      return this.value\n    }\n  }\n\n})\n\nSVG.extend(SVG.FX, {\n  // Add animatable attributes\n  attr: function(a, v, relative) {\n    // apply attributes individually\n    if (typeof a == 'object') {\n      for (var key in a)\n        this.attr(key, a[key])\n\n    } else {\n      this.add(a, v, 'attrs')\n    }\n\n    return this\n  }\n  // Add animatable styles\n, style: function(s, v) {\n    if (typeof s == 'object')\n      for (var key in s)\n        this.style(key, s[key])\n\n    else\n      this.add(s, v, 'styles')\n\n    return this\n  }\n  // Animatable x-axis\n, x: function(x, relative) {\n    if(this.target() instanceof SVG.G){\n      this.transform({x:x}, relative)\n      return this\n    }\n\n    var num = new SVG.Number(x)\n    num.relative = relative\n    return this.add('x', num)\n  }\n  // Animatable y-axis\n, y: function(y, relative) {\n    if(this.target() instanceof SVG.G){\n      this.transform({y:y}, relative)\n      return this\n    }\n\n    var num = new SVG.Number(y)\n    num.relative = relative\n    return this.add('y', num)\n  }\n  // Animatable center x-axis\n, cx: function(x) {\n    return this.add('cx', new SVG.Number(x))\n  }\n  // Animatable center y-axis\n, cy: function(y) {\n    return this.add('cy', new SVG.Number(y))\n  }\n  // Add animatable move\n, move: function(x, y) {\n    return this.x(x).y(y)\n  }\n  // Add animatable center\n, center: function(x, y) {\n    return this.cx(x).cy(y)\n  }\n  // Add animatable size\n, size: function(width, height) {\n    if (this.target() instanceof SVG.Text) {\n      // animate font size for Text elements\n      this.attr('font-size', width)\n\n    } else {\n      // animate bbox based size for all other elements\n      var box\n\n      if(!width || !height){\n        box = this.target().bbox()\n      }\n\n      if(!width){\n        width = box.width / box.height  * height\n      }\n\n      if(!height){\n        height = box.height / box.width  * width\n      }\n\n      this.add('width' , new SVG.Number(width))\n          .add('height', new SVG.Number(height))\n\n    }\n\n    return this\n  }\n  // Add animatable width\n, width: function(width) {\n    return this.add('width', new SVG.Number(width))\n  }\n  // Add animatable height\n, height: function(height) {\n    return this.add('height', new SVG.Number(height))\n  }\n  // Add animatable plot\n, plot: function(a, b, c, d) {\n    // Lines can be plotted with 4 arguments\n    if(arguments.length == 4) {\n      return this.plot([a, b, c, d])\n    }\n\n    return this.add('plot', new (this.target().morphArray)(a))\n  }\n  // Add leading method\n, leading: function(value) {\n    return this.target().leading ?\n      this.add('leading', new SVG.Number(value)) :\n      this\n  }\n  // Add animatable viewbox\n, viewbox: function(x, y, width, height) {\n    if (this.target() instanceof SVG.Container) {\n      this.add('viewbox', new SVG.ViewBox(x, y, width, height))\n    }\n\n    return this\n  }\n, update: function(o) {\n    if (this.target() instanceof SVG.Stop) {\n      if (typeof o == 'number' || o instanceof SVG.Number) {\n        return this.update({\n          offset:  arguments[0]\n        , color:   arguments[1]\n        , opacity: arguments[2]\n        })\n      }\n\n      if (o.opacity != null) this.attr('stop-opacity', o.opacity)\n      if (o.color   != null) this.attr('stop-color', o.color)\n      if (o.offset  != null) this.attr('offset', o.offset)\n    }\n\n    return this\n  }\n})\n\nSVG.Box = SVG.invent({\n  create: function(x, y, width, height) {\n    if (typeof x == 'object' && !(x instanceof SVG.Element)) {\n      // chromes getBoundingClientRect has no x and y property\n      return SVG.Box.call(this, x.left != null ? x.left : x.x , x.top != null ? x.top : x.y, x.width, x.height)\n    } else if (arguments.length == 4) {\n      this.x = x\n      this.y = y\n      this.width = width\n      this.height = height\n    }\n\n    // add center, right, bottom...\n    fullBox(this)\n  }\n, extend: {\n    // Merge rect box with another, return a new instance\n    merge: function(box) {\n      var b = new this.constructor()\n\n      // merge boxes\n      b.x      = Math.min(this.x, box.x)\n      b.y      = Math.min(this.y, box.y)\n      b.width  = Math.max(this.x + this.width,  box.x + box.width)  - b.x\n      b.height = Math.max(this.y + this.height, box.y + box.height) - b.y\n\n      return fullBox(b)\n    }\n\n  , transform: function(m) {\n      var xMin = Infinity, xMax = -Infinity, yMin = Infinity, yMax = -Infinity, p, bbox\n\n      var pts = [\n        new SVG.Point(this.x, this.y),\n        new SVG.Point(this.x2, this.y),\n        new SVG.Point(this.x, this.y2),\n        new SVG.Point(this.x2, this.y2)\n      ]\n\n      pts.forEach(function(p) {\n        p = p.transform(m)\n        xMin = Math.min(xMin,p.x)\n        xMax = Math.max(xMax,p.x)\n        yMin = Math.min(yMin,p.y)\n        yMax = Math.max(yMax,p.y)\n      })\n\n      bbox = new this.constructor()\n      bbox.x = xMin\n      bbox.width = xMax-xMin\n      bbox.y = yMin\n      bbox.height = yMax-yMin\n\n      fullBox(bbox)\n\n      return bbox\n    }\n  }\n})\n\nSVG.BBox = SVG.invent({\n  // Initialize\n  create: function(element) {\n    SVG.Box.apply(this, [].slice.call(arguments))\n\n    // get values if element is given\n    if (element instanceof SVG.Element) {\n      var box\n\n      // yes this is ugly, but Firefox can be a pain when it comes to elements that are not yet rendered\n      try {\n\n        if (!document.documentElement.contains){\n          // This is IE - it does not support contains() for top-level SVGs\n          var topParent = element.node\n          while (topParent.parentNode){\n            topParent = topParent.parentNode\n          }\n          if (topParent != document) throw new Exception('Element not in the dom')\n        } else {\n          // the element is NOT in the dom, throw error\n          if(!document.documentElement.contains(element.node)) throw new Exception('Element not in the dom')\n        }\n\n        // find native bbox\n        box = element.node.getBBox()\n      } catch(e) {\n        if(element instanceof SVG.Shape){\n          var clone = element.clone(SVG.parser.draw.instance).show()\n          box = clone.node.getBBox()\n          clone.remove()\n        }else{\n          box = {\n            x:      element.node.clientLeft\n          , y:      element.node.clientTop\n          , width:  element.node.clientWidth\n          , height: element.node.clientHeight\n          }\n        }\n      }\n\n      SVG.Box.call(this, box)\n    }\n\n  }\n\n  // Define ancestor\n, inherit: SVG.Box\n\n  // Define Parent\n, parent: SVG.Element\n\n  // Constructor\n, construct: {\n    // Get bounding box\n    bbox: function() {\n      return new SVG.BBox(this)\n    }\n  }\n\n})\n\nSVG.BBox.prototype.constructor = SVG.BBox\n\n\nSVG.extend(SVG.Element, {\n  tbox: function(){\n    console.warn('Use of TBox is deprecated and mapped to RBox. Use .rbox() instead.')\n    return this.rbox(this.doc())\n  }\n})\n\nSVG.RBox = SVG.invent({\n  // Initialize\n  create: function(element) {\n    SVG.Box.apply(this, [].slice.call(arguments))\n\n    if (element instanceof SVG.Element) {\n      SVG.Box.call(this, element.node.getBoundingClientRect())\n    }\n  }\n\n, inherit: SVG.Box\n\n  // define Parent\n, parent: SVG.Element\n\n, extend: {\n    addOffset: function() {\n      // offset by window scroll position, because getBoundingClientRect changes when window is scrolled\n      this.x += window.pageXOffset\n      this.y += window.pageYOffset\n      return this\n    }\n  }\n\n  // Constructor\n, construct: {\n    // Get rect box\n    rbox: function(el) {\n      if (el) return new SVG.RBox(this).transform(el.screenCTM().inverse())\n      return new SVG.RBox(this).addOffset()\n    }\n  }\n\n})\n\nSVG.RBox.prototype.constructor = SVG.RBox\n\nSVG.Matrix = SVG.invent({\n  // Initialize\n  create: function(source) {\n    var i, base = arrayToMatrix([1, 0, 0, 1, 0, 0])\n\n    // ensure source as object\n    source = source instanceof SVG.Element ?\n      source.matrixify() :\n    typeof source === 'string' ?\n      arrayToMatrix(source.split(SVG.regex.delimiter).map(parseFloat)) :\n    arguments.length == 6 ?\n      arrayToMatrix([].slice.call(arguments)) :\n    Array.isArray(source) ?\n      arrayToMatrix(source) :\n    typeof source === 'object' ?\n      source : base\n\n    // merge source\n    for (i = abcdef.length - 1; i >= 0; --i)\n      this[abcdef[i]] = source[abcdef[i]] != null ?\n        source[abcdef[i]] : base[abcdef[i]]\n  }\n\n  // Add methods\n, extend: {\n    // Extract individual transformations\n    extract: function() {\n      // find delta transform points\n      var px    = deltaTransformPoint(this, 0, 1)\n        , py    = deltaTransformPoint(this, 1, 0)\n        , skewX = 180 / Math.PI * Math.atan2(px.y, px.x) - 90\n\n      return {\n        // translation\n        x:        this.e\n      , y:        this.f\n      , transformedX:(this.e * Math.cos(skewX * Math.PI / 180) + this.f * Math.sin(skewX * Math.PI / 180)) / Math.sqrt(this.a * this.a + this.b * this.b)\n      , transformedY:(this.f * Math.cos(skewX * Math.PI / 180) + this.e * Math.sin(-skewX * Math.PI / 180)) / Math.sqrt(this.c * this.c + this.d * this.d)\n        // skew\n      , skewX:    -skewX\n      , skewY:    180 / Math.PI * Math.atan2(py.y, py.x)\n        // scale\n      , scaleX:   Math.sqrt(this.a * this.a + this.b * this.b)\n      , scaleY:   Math.sqrt(this.c * this.c + this.d * this.d)\n        // rotation\n      , rotation: skewX\n      , a: this.a\n      , b: this.b\n      , c: this.c\n      , d: this.d\n      , e: this.e\n      , f: this.f\n      , matrix: new SVG.Matrix(this)\n      }\n    }\n    // Clone matrix\n  , clone: function() {\n      return new SVG.Matrix(this)\n    }\n    // Morph one matrix into another\n  , morph: function(matrix) {\n      // store new destination\n      this.destination = new SVG.Matrix(matrix)\n\n      return this\n    }\n    // Get morphed matrix at a given position\n  , at: function(pos) {\n      // make sure a destination is defined\n      if (!this.destination) return this\n\n      // calculate morphed matrix at a given position\n      var matrix = new SVG.Matrix({\n        a: this.a + (this.destination.a - this.a) * pos\n      , b: this.b + (this.destination.b - this.b) * pos\n      , c: this.c + (this.destination.c - this.c) * pos\n      , d: this.d + (this.destination.d - this.d) * pos\n      , e: this.e + (this.destination.e - this.e) * pos\n      , f: this.f + (this.destination.f - this.f) * pos\n      })\n\n      return matrix\n    }\n    // Multiplies by given matrix\n  , multiply: function(matrix) {\n      return new SVG.Matrix(this.native().multiply(parseMatrix(matrix).native()))\n    }\n    // Inverses matrix\n  , inverse: function() {\n      return new SVG.Matrix(this.native().inverse())\n    }\n    // Translate matrix\n  , translate: function(x, y) {\n      return new SVG.Matrix(this.native().translate(x || 0, y || 0))\n    }\n    // Scale matrix\n  , scale: function(x, y, cx, cy) {\n      // support uniformal scale\n      if (arguments.length == 1) {\n        y = x\n      } else if (arguments.length == 3) {\n        cy = cx\n        cx = y\n        y = x\n      }\n\n      return this.around(cx, cy, new SVG.Matrix(x, 0, 0, y, 0, 0))\n    }\n    // Rotate matrix\n  , rotate: function(r, cx, cy) {\n      // convert degrees to radians\n      r = SVG.utils.radians(r)\n\n      return this.around(cx, cy, new SVG.Matrix(Math.cos(r), Math.sin(r), -Math.sin(r), Math.cos(r), 0, 0))\n    }\n    // Flip matrix on x or y, at a given offset\n  , flip: function(a, o) {\n      return a == 'x' ?\n          this.scale(-1, 1, o, 0) :\n        a == 'y' ?\n          this.scale(1, -1, 0, o) :\n          this.scale(-1, -1, a, o != null ? o : a)\n    }\n    // Skew\n  , skew: function(x, y, cx, cy) {\n      // support uniformal skew\n      if (arguments.length == 1) {\n        y = x\n      } else if (arguments.length == 3) {\n        cy = cx\n        cx = y\n        y = x\n      }\n\n      // convert degrees to radians\n      x = SVG.utils.radians(x)\n      y = SVG.utils.radians(y)\n\n      return this.around(cx, cy, new SVG.Matrix(1, Math.tan(y), Math.tan(x), 1, 0, 0))\n    }\n    // SkewX\n  , skewX: function(x, cx, cy) {\n      return this.skew(x, 0, cx, cy)\n    }\n    // SkewY\n  , skewY: function(y, cx, cy) {\n      return this.skew(0, y, cx, cy)\n    }\n    // Transform around a center point\n  , around: function(cx, cy, matrix) {\n      return this\n        .multiply(new SVG.Matrix(1, 0, 0, 1, cx || 0, cy || 0))\n        .multiply(matrix)\n        .multiply(new SVG.Matrix(1, 0, 0, 1, -cx || 0, -cy || 0))\n    }\n    // Convert to native SVGMatrix\n  , native: function() {\n      // create new matrix\n      var matrix = SVG.parser.native.createSVGMatrix()\n\n      // update with current values\n      for (var i = abcdef.length - 1; i >= 0; i--)\n        matrix[abcdef[i]] = this[abcdef[i]]\n\n      return matrix\n    }\n    // Convert matrix to string\n  , toString: function() {\n      // Construct the matrix directly, avoid values that are too small\n      return 'matrix(' + float32String(this.a) + ',' + float32String(this.b)\n        + ',' + float32String(this.c) + ',' + float32String(this.d)\n        + ',' + float32String(this.e) + ',' + float32String(this.f)\n        + ')'\n    }\n  }\n\n  // Define parent\n, parent: SVG.Element\n\n  // Add parent method\n, construct: {\n    // Get current matrix\n    ctm: function() {\n      return new SVG.Matrix(this.node.getCTM())\n    },\n    // Get current screen matrix\n    screenCTM: function() {\n      /* https://bugzilla.mozilla.org/show_bug.cgi?id=1344537\n         This is needed because FF does not return the transformation matrix\n         for the inner coordinate system when getScreenCTM() is called on nested svgs.\n         However all other Browsers do that */\n      if(this instanceof SVG.Nested) {\n        var rect = this.rect(1,1)\n        var m = rect.node.getScreenCTM()\n        rect.remove()\n        return new SVG.Matrix(m)\n      }\n      return new SVG.Matrix(this.node.getScreenCTM())\n    }\n\n  }\n\n})\n\nSVG.Point = SVG.invent({\n  // Initialize\n  create: function(x,y) {\n    var i, source, base = {x:0, y:0}\n\n    // ensure source as object\n    source = Array.isArray(x) ?\n      {x:x[0], y:x[1]} :\n    typeof x === 'object' ?\n      {x:x.x, y:x.y} :\n    x != null ?\n      {x:x, y:(y != null ? y : x)} : base // If y has no value, then x is used has its value\n\n    // merge source\n    this.x = source.x\n    this.y = source.y\n  }\n\n  // Add methods\n, extend: {\n    // Clone point\n    clone: function() {\n      return new SVG.Point(this)\n    }\n    // Morph one point into another\n  , morph: function(x, y) {\n      // store new destination\n      this.destination = new SVG.Point(x, y)\n\n      return this\n    }\n    // Get morphed point at a given position\n  , at: function(pos) {\n      // make sure a destination is defined\n      if (!this.destination) return this\n\n      // calculate morphed matrix at a given position\n      var point = new SVG.Point({\n        x: this.x + (this.destination.x - this.x) * pos\n      , y: this.y + (this.destination.y - this.y) * pos\n      })\n\n      return point\n    }\n    // Convert to native SVGPoint\n  , native: function() {\n      // create new point\n      var point = SVG.parser.native.createSVGPoint()\n\n      // update with current values\n      point.x = this.x\n      point.y = this.y\n\n      return point\n    }\n    // transform point with matrix\n  , transform: function(matrix) {\n      return new SVG.Point(this.native().matrixTransform(matrix.native()))\n    }\n\n  }\n\n})\n\nSVG.extend(SVG.Element, {\n\n  // Get point\n  point: function(x, y) {\n    return new SVG.Point(x,y).transform(this.screenCTM().inverse());\n  }\n\n})\n\nSVG.extend(SVG.Element, {\n  // Set svg element attribute\n  attr: function(a, v, n) {\n    // act as full getter\n    if (a == null) {\n      // get an object of attributes\n      a = {}\n      v = this.node.attributes\n      for (n = v.length - 1; n >= 0; n--)\n        a[v[n].nodeName] = SVG.regex.isNumber.test(v[n].nodeValue) ? parseFloat(v[n].nodeValue) : v[n].nodeValue\n\n      return a\n\n    } else if (typeof a == 'object') {\n      // apply every attribute individually if an object is passed\n      for (v in a) this.attr(v, a[v])\n\n    } else if (v === null) {\n        // remove value\n        this.node.removeAttribute(a)\n\n    } else if (v == null) {\n      // act as a getter if the first and only argument is not an object\n      v = this.node.getAttribute(a)\n      return v == null ?\n        SVG.defaults.attrs[a] :\n      SVG.regex.isNumber.test(v) ?\n        parseFloat(v) : v\n\n    } else {\n      // BUG FIX: some browsers will render a stroke if a color is given even though stroke width is 0\n      if (a == 'stroke-width')\n        this.attr('stroke', parseFloat(v) > 0 ? this._stroke : null)\n      else if (a == 'stroke')\n        this._stroke = v\n\n      // convert image fill and stroke to patterns\n      if (a == 'fill' || a == 'stroke') {\n        if (SVG.regex.isImage.test(v))\n          v = this.doc().defs().image(v, 0, 0)\n\n        if (v instanceof SVG.Image)\n          v = this.doc().defs().pattern(0, 0, function() {\n            this.add(v)\n          })\n      }\n\n      // ensure correct numeric values (also accepts NaN and Infinity)\n      if (typeof v === 'number')\n        v = new SVG.Number(v)\n\n      // ensure full hex color\n      else if (SVG.Color.isColor(v))\n        v = new SVG.Color(v)\n\n      // parse array values\n      else if (Array.isArray(v))\n        v = new SVG.Array(v)\n\n      // if the passed attribute is leading...\n      if (a == 'leading') {\n        // ... call the leading method instead\n        if (this.leading)\n          this.leading(v)\n      } else {\n        // set given attribute on node\n        typeof n === 'string' ?\n          this.node.setAttributeNS(n, a, v.toString()) :\n          this.node.setAttribute(a, v.toString())\n      }\n\n      // rebuild if required\n      if (this.rebuild && (a == 'font-size' || a == 'x'))\n        this.rebuild(a, v)\n    }\n\n    return this\n  }\n})\nSVG.extend(SVG.Element, {\n  // Add transformations\n  transform: function(o, relative) {\n    // get target in case of the fx module, otherwise reference this\n    var target = this\n      , matrix, bbox\n\n    // act as a getter\n    if (typeof o !== 'object') {\n      // get current matrix\n      matrix = new SVG.Matrix(target).extract()\n\n      return typeof o === 'string' ? matrix[o] : matrix\n    }\n\n    // get current matrix\n    matrix = new SVG.Matrix(target)\n\n    // ensure relative flag\n    relative = !!relative || !!o.relative\n\n    // act on matrix\n    if (o.a != null) {\n      matrix = relative ?\n        // relative\n        matrix.multiply(new SVG.Matrix(o)) :\n        // absolute\n        new SVG.Matrix(o)\n\n    // act on rotation\n    } else if (o.rotation != null) {\n      // ensure centre point\n      ensureCentre(o, target)\n\n      // apply transformation\n      matrix = relative ?\n        // relative\n        matrix.rotate(o.rotation, o.cx, o.cy) :\n        // absolute\n        matrix.rotate(o.rotation - matrix.extract().rotation, o.cx, o.cy)\n\n    // act on scale\n    } else if (o.scale != null || o.scaleX != null || o.scaleY != null) {\n      // ensure centre point\n      ensureCentre(o, target)\n\n      // ensure scale values on both axes\n      o.scaleX = o.scale != null ? o.scale : o.scaleX != null ? o.scaleX : 1\n      o.scaleY = o.scale != null ? o.scale : o.scaleY != null ? o.scaleY : 1\n\n      if (!relative) {\n        // absolute; multiply inversed values\n        var e = matrix.extract()\n        o.scaleX = o.scaleX * 1 / e.scaleX\n        o.scaleY = o.scaleY * 1 / e.scaleY\n      }\n\n      matrix = matrix.scale(o.scaleX, o.scaleY, o.cx, o.cy)\n\n    // act on skew\n    } else if (o.skew != null || o.skewX != null || o.skewY != null) {\n      // ensure centre point\n      ensureCentre(o, target)\n\n      // ensure skew values on both axes\n      o.skewX = o.skew != null ? o.skew : o.skewX != null ? o.skewX : 0\n      o.skewY = o.skew != null ? o.skew : o.skewY != null ? o.skewY : 0\n\n      if (!relative) {\n        // absolute; reset skew values\n        var e = matrix.extract()\n        matrix = matrix.multiply(new SVG.Matrix().skew(e.skewX, e.skewY, o.cx, o.cy).inverse())\n      }\n\n      matrix = matrix.skew(o.skewX, o.skewY, o.cx, o.cy)\n\n    // act on flip\n    } else if (o.flip) {\n      if(o.flip == 'x' || o.flip == 'y') {\n        o.offset = o.offset == null ? target.bbox()['c' + o.flip] : o.offset\n      } else {\n        if(o.offset == null) {\n          bbox = target.bbox()\n          o.flip = bbox.cx\n          o.offset = bbox.cy\n        } else {\n          o.flip = o.offset\n        }\n      }\n\n      matrix = new SVG.Matrix().flip(o.flip, o.offset)\n\n    // act on translate\n    } else if (o.x != null || o.y != null) {\n      if (relative) {\n        // relative\n        matrix = matrix.translate(o.x, o.y)\n      } else {\n        // absolute\n        if (o.x != null) matrix.e = o.x\n        if (o.y != null) matrix.f = o.y\n      }\n    }\n\n    return this.attr('transform', matrix)\n  }\n})\n\nSVG.extend(SVG.FX, {\n  transform: function(o, relative) {\n    // get target in case of the fx module, otherwise reference this\n    var target = this.target()\n      , matrix, bbox\n\n    // act as a getter\n    if (typeof o !== 'object') {\n      // get current matrix\n      matrix = new SVG.Matrix(target).extract()\n\n      return typeof o === 'string' ? matrix[o] : matrix\n    }\n\n    // ensure relative flag\n    relative = !!relative || !!o.relative\n\n    // act on matrix\n    if (o.a != null) {\n      matrix = new SVG.Matrix(o)\n\n    // act on rotation\n    } else if (o.rotation != null) {\n      // ensure centre point\n      ensureCentre(o, target)\n\n      // apply transformation\n      matrix = new SVG.Rotate(o.rotation, o.cx, o.cy)\n\n    // act on scale\n    } else if (o.scale != null || o.scaleX != null || o.scaleY != null) {\n      // ensure centre point\n      ensureCentre(o, target)\n\n      // ensure scale values on both axes\n      o.scaleX = o.scale != null ? o.scale : o.scaleX != null ? o.scaleX : 1\n      o.scaleY = o.scale != null ? o.scale : o.scaleY != null ? o.scaleY : 1\n\n      matrix = new SVG.Scale(o.scaleX, o.scaleY, o.cx, o.cy)\n\n    // act on skew\n    } else if (o.skewX != null || o.skewY != null) {\n      // ensure centre point\n      ensureCentre(o, target)\n\n      // ensure skew values on both axes\n      o.skewX = o.skewX != null ? o.skewX : 0\n      o.skewY = o.skewY != null ? o.skewY : 0\n\n      matrix = new SVG.Skew(o.skewX, o.skewY, o.cx, o.cy)\n\n    // act on flip\n    } else if (o.flip) {\n      if(o.flip == 'x' || o.flip == 'y') {\n        o.offset = o.offset == null ? target.bbox()['c' + o.flip] : o.offset\n      } else {\n        if(o.offset == null) {\n          bbox = target.bbox()\n          o.flip = bbox.cx\n          o.offset = bbox.cy\n        } else {\n          o.flip = o.offset\n        }\n      }\n\n      matrix = new SVG.Matrix().flip(o.flip, o.offset)\n\n    // act on translate\n    } else if (o.x != null || o.y != null) {\n      matrix = new SVG.Translate(o.x, o.y)\n    }\n\n    if(!matrix) return this\n\n    matrix.relative = relative\n\n    this.last().transforms.push(matrix)\n\n    return this._callStart()\n  }\n})\n\nSVG.extend(SVG.Element, {\n  // Reset all transformations\n  untransform: function() {\n    return this.attr('transform', null)\n  },\n  // merge the whole transformation chain into one matrix and returns it\n  matrixify: function() {\n\n    var matrix = (this.attr('transform') || '')\n      // split transformations\n      .split(SVG.regex.transforms).slice(0,-1).map(function(str){\n        // generate key => value pairs\n        var kv = str.trim().split('(')\n        return [kv[0], kv[1].split(SVG.regex.delimiter).map(function(str){ return parseFloat(str) })]\n      })\n      // merge every transformation into one matrix\n      .reduce(function(matrix, transform){\n\n        if(transform[0] == 'matrix') return matrix.multiply(arrayToMatrix(transform[1]))\n        return matrix[transform[0]].apply(matrix, transform[1])\n\n      }, new SVG.Matrix())\n\n    return matrix\n  },\n  // add an element to another parent without changing the visual representation on the screen\n  toParent: function(parent) {\n    if(this == parent) return this\n    var ctm = this.screenCTM()\n    var pCtm = parent.screenCTM().inverse()\n\n    this.addTo(parent).untransform().transform(pCtm.multiply(ctm))\n\n    return this\n  },\n  // same as above with parent equals root-svg\n  toDoc: function() {\n    return this.toParent(this.doc())\n  }\n\n})\n\nSVG.Transformation = SVG.invent({\n\n  create: function(source, inversed){\n\n    if(arguments.length > 1 && typeof inversed != 'boolean'){\n      return this.constructor.call(this, [].slice.call(arguments))\n    }\n\n    if(Array.isArray(source)){\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\n        this[this.arguments[i]] = source[i]\n      }\n    } else if(typeof source == 'object'){\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\n        this[this.arguments[i]] = source[this.arguments[i]]\n      }\n    }\n\n    this.inversed = false\n\n    if(inversed === true){\n      this.inversed = true\n    }\n\n  }\n\n, extend: {\n\n    arguments: []\n  , method: ''\n\n  , at: function(pos){\n\n      var params = []\n\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\n        params.push(this[this.arguments[i]])\n      }\n\n      var m = this._undo || new SVG.Matrix()\n\n      m = new SVG.Matrix().morph(SVG.Matrix.prototype[this.method].apply(m, params)).at(pos)\n\n      return this.inversed ? m.inverse() : m\n\n    }\n\n  , undo: function(o){\n      for(var i = 0, len = this.arguments.length; i < len; ++i){\n        o[this.arguments[i]] = typeof this[this.arguments[i]] == 'undefined' ? 0 : o[this.arguments[i]]\n      }\n\n      // The method SVG.Matrix.extract which was used before calling this\n      // method to obtain a value for the parameter o doesn't return a cx and\n      // a cy so we use the ones that were provided to this object at its creation\n      o.cx = this.cx\n      o.cy = this.cy\n\n      this._undo = new SVG[capitalize(this.method)](o, true).at(1)\n\n      return this\n    }\n\n  }\n\n})\n\nSVG.Translate = SVG.invent({\n\n  parent: SVG.Matrix\n, inherit: SVG.Transformation\n\n, create: function(source, inversed){\n    this.constructor.apply(this, [].slice.call(arguments))\n  }\n\n, extend: {\n    arguments: ['transformedX', 'transformedY']\n  , method: 'translate'\n  }\n\n})\n\nSVG.Rotate = SVG.invent({\n\n  parent: SVG.Matrix\n, inherit: SVG.Transformation\n\n, create: function(source, inversed){\n    this.constructor.apply(this, [].slice.call(arguments))\n  }\n\n, extend: {\n    arguments: ['rotation', 'cx', 'cy']\n  , method: 'rotate'\n  , at: function(pos){\n      var m = new SVG.Matrix().rotate(new SVG.Number().morph(this.rotation - (this._undo ? this._undo.rotation : 0)).at(pos), this.cx, this.cy)\n      return this.inversed ? m.inverse() : m\n    }\n  , undo: function(o){\n      this._undo = o\n      return this\n    }\n  }\n\n})\n\nSVG.Scale = SVG.invent({\n\n  parent: SVG.Matrix\n, inherit: SVG.Transformation\n\n, create: function(source, inversed){\n    this.constructor.apply(this, [].slice.call(arguments))\n  }\n\n, extend: {\n    arguments: ['scaleX', 'scaleY', 'cx', 'cy']\n  , method: 'scale'\n  }\n\n})\n\nSVG.Skew = SVG.invent({\n\n  parent: SVG.Matrix\n, inherit: SVG.Transformation\n\n, create: function(source, inversed){\n    this.constructor.apply(this, [].slice.call(arguments))\n  }\n\n, extend: {\n    arguments: ['skewX', 'skewY', 'cx', 'cy']\n  , method: 'skew'\n  }\n\n})\n\nSVG.extend(SVG.Element, {\n  // Dynamic style generator\n  style: function(s, v) {\n    if (arguments.length == 0) {\n      // get full style\n      return this.node.style.cssText || ''\n\n    } else if (arguments.length < 2) {\n      // apply every style individually if an object is passed\n      if (typeof s == 'object') {\n        for (v in s) this.style(v, s[v])\n\n      } else if (SVG.regex.isCss.test(s)) {\n        // parse css string\n        s = s.split(/\\s*;\\s*/)\n          // filter out suffix ; and stuff like ;;\n          .filter(function(e) { return !!e })\n          .map(function(e){ return e.split(/\\s*:\\s*/) })\n\n        // apply every definition individually\n        while (v = s.pop()) {\n          this.style(v[0], v[1])\n        }\n      } else {\n        // act as a getter if the first and only argument is not an object\n        return this.node.style[camelCase(s)]\n      }\n\n    } else {\n      this.node.style[camelCase(s)] = v === null || SVG.regex.isBlank.test(v) ? '' : v\n    }\n\n    return this\n  }\n})\nSVG.Parent = SVG.invent({\n  // Initialize node\n  create: function(element) {\n    this.constructor.call(this, element)\n  }\n\n  // Inherit from\n, inherit: SVG.Element\n\n  // Add class methods\n, extend: {\n    // Returns all child elements\n    children: function() {\n      return SVG.utils.map(SVG.utils.filterSVGElements(this.node.childNodes), function(node) {\n        return SVG.adopt(node)\n      })\n    }\n    // Add given element at a position\n  , add: function(element, i) {\n      if (i == null)\n        this.node.appendChild(element.node)\n      else if (element.node != this.node.childNodes[i])\n        this.node.insertBefore(element.node, this.node.childNodes[i])\n\n      return this\n    }\n    // Basically does the same as `add()` but returns the added element instead\n  , put: function(element, i) {\n      this.add(element, i)\n      return element\n    }\n    // Checks if the given element is a child\n  , has: function(element) {\n      return this.index(element) >= 0\n    }\n    // Gets index of given element\n  , index: function(element) {\n      return [].slice.call(this.node.childNodes).indexOf(element.node)\n    }\n    // Get a element at the given index\n  , get: function(i) {\n      return SVG.adopt(this.node.childNodes[i])\n    }\n    // Get first child\n  , first: function() {\n      return this.get(0)\n    }\n    // Get the last child\n  , last: function() {\n      return this.get(this.node.childNodes.length - 1)\n    }\n    // Iterates over all children and invokes a given block\n  , each: function(block, deep) {\n      var i, il\n        , children = this.children()\n\n      for (i = 0, il = children.length; i < il; i++) {\n        if (children[i] instanceof SVG.Element)\n          block.apply(children[i], [i, children])\n\n        if (deep && (children[i] instanceof SVG.Container))\n          children[i].each(block, deep)\n      }\n\n      return this\n    }\n    // Remove a given child\n  , removeElement: function(element) {\n      this.node.removeChild(element.node)\n\n      return this\n    }\n    // Remove all elements in this container\n  , clear: function() {\n      // remove children\n      while(this.node.hasChildNodes())\n        this.node.removeChild(this.node.lastChild)\n\n      // remove defs reference\n      delete this._defs\n\n      return this\n    }\n  , // Get defs\n    defs: function() {\n      return this.doc().defs()\n    }\n  }\n\n})\n\nSVG.extend(SVG.Parent, {\n\n  ungroup: function(parent, depth) {\n    if(depth === 0 || this instanceof SVG.Defs || this.node == SVG.parser.draw) return this\n\n    parent = parent || (this instanceof SVG.Doc ? this : this.parent(SVG.Parent))\n    depth = depth || Infinity\n\n    this.each(function(){\n      if(this instanceof SVG.Defs) return this\n      if(this instanceof SVG.Parent) return this.ungroup(parent, depth-1)\n      return this.toParent(parent)\n    })\n\n    this.node.firstChild || this.remove()\n\n    return this\n  },\n\n  flatten: function(parent, depth) {\n    return this.ungroup(parent, depth)\n  }\n\n})\nSVG.Container = SVG.invent({\n  // Initialize node\n  create: function(element) {\n    this.constructor.call(this, element)\n  }\n\n  // Inherit from\n, inherit: SVG.Parent\n\n})\n\nSVG.ViewBox = SVG.invent({\n\n  create: function(source) {\n    var i, base = [0, 0, 0, 0]\n\n    var x, y, width, height, box, view, we, he\n      , wm   = 1 // width multiplier\n      , hm   = 1 // height multiplier\n      , reg  = /[+-]?(?:\\d+(?:\\.\\d*)?|\\.\\d+)(?:e[+-]?\\d+)?/gi\n\n    if(source instanceof SVG.Element){\n\n      we = source\n      he = source\n      view = (source.attr('viewBox') || '').match(reg)\n      box = source.bbox\n\n      // get dimensions of current node\n      width  = new SVG.Number(source.width())\n      height = new SVG.Number(source.height())\n\n      // find nearest non-percentual dimensions\n      while (width.unit == '%') {\n        wm *= width.value\n        width = new SVG.Number(we instanceof SVG.Doc ? we.parent().offsetWidth : we.parent().width())\n        we = we.parent()\n      }\n      while (height.unit == '%') {\n        hm *= height.value\n        height = new SVG.Number(he instanceof SVG.Doc ? he.parent().offsetHeight : he.parent().height())\n        he = he.parent()\n      }\n\n      // ensure defaults\n      this.x      = 0\n      this.y      = 0\n      this.width  = width  * wm\n      this.height = height * hm\n      this.zoom   = 1\n\n      if (view) {\n        // get width and height from viewbox\n        x      = parseFloat(view[0])\n        y      = parseFloat(view[1])\n        width  = parseFloat(view[2])\n        height = parseFloat(view[3])\n\n        // calculate zoom accoring to viewbox\n        this.zoom = ((this.width / this.height) > (width / height)) ?\n          this.height / height :\n          this.width  / width\n\n        // calculate real pixel dimensions on parent SVG.Doc element\n        this.x      = x\n        this.y      = y\n        this.width  = width\n        this.height = height\n\n      }\n\n    }else{\n\n      // ensure source as object\n      source = typeof source === 'string' ?\n        source.match(reg).map(function(el){ return parseFloat(el) }) :\n      Array.isArray(source) ?\n        source :\n      typeof source == 'object' ?\n        [source.x, source.y, source.width, source.height] :\n      arguments.length == 4 ?\n        [].slice.call(arguments) :\n        base\n\n      this.x = source[0]\n      this.y = source[1]\n      this.width = source[2]\n      this.height = source[3]\n    }\n\n\n  }\n\n, extend: {\n\n    toString: function() {\n      return this.x + ' ' + this.y + ' ' + this.width + ' ' + this.height\n    }\n  , morph: function(x, y, width, height){\n      this.destination = new SVG.ViewBox(x, y, width, height)\n      return this\n    }\n\n  , at: function(pos) {\n\n      if(!this.destination) return this\n\n      return new SVG.ViewBox([\n          this.x + (this.destination.x - this.x) * pos\n        , this.y + (this.destination.y - this.y) * pos\n        , this.width + (this.destination.width - this.width) * pos\n        , this.height + (this.destination.height - this.height) * pos\n      ])\n\n    }\n\n  }\n\n  // Define parent\n, parent: SVG.Container\n\n  // Add parent method\n, construct: {\n\n    // get/set viewbox\n    viewbox: function(x, y, width, height) {\n      if (arguments.length == 0)\n        // act as a getter if there are no arguments\n        return new SVG.ViewBox(this)\n\n      // otherwise act as a setter\n      return this.attr('viewBox', new SVG.ViewBox(x, y, width, height))\n    }\n\n  }\n\n})\n// Add events to elements\n;[  'click'\n  , 'dblclick'\n  , 'mousedown'\n  , 'mouseup'\n  , 'mouseover'\n  , 'mouseout'\n  , 'mousemove'\n  // , 'mouseenter' -> not supported by IE\n  // , 'mouseleave' -> not supported by IE\n  , 'touchstart'\n  , 'touchmove'\n  , 'touchleave'\n  , 'touchend'\n  , 'touchcancel' ].forEach(function(event) {\n\n  // add event to SVG.Element\n  SVG.Element.prototype[event] = function(f) {\n    // bind event to element rather than element node\n    SVG.on(this.node, event, f)\n    return this\n  }\n})\n\n// Initialize listeners stack\nSVG.listeners = []\nSVG.handlerMap = []\nSVG.listenerId = 0\n\n// Add event binder in the SVG namespace\nSVG.on = function(node, event, listener, binding, options) {\n  // create listener, get object-index\n  var l     = listener.bind(binding || node.instance || node)\n    , index = (SVG.handlerMap.indexOf(node) + 1 || SVG.handlerMap.push(node)) - 1\n    , ev    = event.split('.')[0]\n    , ns    = event.split('.')[1] || '*'\n\n\n  // ensure valid object\n  SVG.listeners[index]         = SVG.listeners[index]         || {}\n  SVG.listeners[index][ev]     = SVG.listeners[index][ev]     || {}\n  SVG.listeners[index][ev][ns] = SVG.listeners[index][ev][ns] || {}\n\n  if(!listener._svgjsListenerId)\n    listener._svgjsListenerId = ++SVG.listenerId\n\n  // reference listener\n  SVG.listeners[index][ev][ns][listener._svgjsListenerId] = l\n\n  // add listener\n  node.addEventListener(ev, l, options || false)\n}\n\n// Add event unbinder in the SVG namespace\nSVG.off = function(node, event, listener) {\n  var index = SVG.handlerMap.indexOf(node)\n    , ev    = event && event.split('.')[0]\n    , ns    = event && event.split('.')[1]\n    , namespace = ''\n\n  if(index == -1) return\n\n  if (listener) {\n    if(typeof listener == 'function') listener = listener._svgjsListenerId\n    if(!listener) return\n\n    // remove listener reference\n    if (SVG.listeners[index][ev] && SVG.listeners[index][ev][ns || '*']) {\n      // remove listener\n      node.removeEventListener(ev, SVG.listeners[index][ev][ns || '*'][listener], false)\n\n      delete SVG.listeners[index][ev][ns || '*'][listener]\n    }\n\n  } else if (ns && ev) {\n    // remove all listeners for a namespaced event\n    if (SVG.listeners[index][ev] && SVG.listeners[index][ev][ns]) {\n      for (listener in SVG.listeners[index][ev][ns])\n        SVG.off(node, [ev, ns].join('.'), listener)\n\n      delete SVG.listeners[index][ev][ns]\n    }\n\n  } else if (ns){\n    // remove all listeners for a specific namespace\n    for(event in SVG.listeners[index]){\n        for(namespace in SVG.listeners[index][event]){\n            if(ns === namespace){\n                SVG.off(node, [event, ns].join('.'))\n            }\n        }\n    }\n\n  } else if (ev) {\n    // remove all listeners for the event\n    if (SVG.listeners[index][ev]) {\n      for (namespace in SVG.listeners[index][ev])\n        SVG.off(node, [ev, namespace].join('.'))\n\n      delete SVG.listeners[index][ev]\n    }\n\n  } else {\n    // remove all listeners on a given node\n    for (event in SVG.listeners[index])\n      SVG.off(node, event)\n\n    delete SVG.listeners[index]\n    delete SVG.handlerMap[index]\n\n  }\n}\n\n//\nSVG.extend(SVG.Element, {\n  // Bind given event to listener\n  on: function(event, listener, binding, options) {\n    SVG.on(this.node, event, listener, binding, options)\n\n    return this\n  }\n  // Unbind event from listener\n, off: function(event, listener) {\n    SVG.off(this.node, event, listener)\n\n    return this\n  }\n  // Fire given event\n, fire: function(event, data) {\n\n    // Dispatch event\n    if(event instanceof window.Event){\n        this.node.dispatchEvent(event)\n    }else{\n        this.node.dispatchEvent(event = new SVG.CustomEvent(event, {detail:data, cancelable: true}))\n    }\n\n    this._event = event\n    return this\n  }\n, event: function() {\n    return this._event\n  }\n})\n\n\nSVG.Defs = SVG.invent({\n  // Initialize node\n  create: 'defs'\n\n  // Inherit from\n, inherit: SVG.Container\n\n})\nSVG.G = SVG.invent({\n  // Initialize node\n  create: 'g'\n\n  // Inherit from\n, inherit: SVG.Container\n\n  // Add class methods\n, extend: {\n    // Move over x-axis\n    x: function(x) {\n      return x == null ? this.transform('x') : this.transform({ x: x - this.x() }, true)\n    }\n    // Move over y-axis\n  , y: function(y) {\n      return y == null ? this.transform('y') : this.transform({ y: y - this.y() }, true)\n    }\n    // Move by center over x-axis\n  , cx: function(x) {\n      return x == null ? this.gbox().cx : this.x(x - this.gbox().width / 2)\n    }\n    // Move by center over y-axis\n  , cy: function(y) {\n      return y == null ? this.gbox().cy : this.y(y - this.gbox().height / 2)\n    }\n  , gbox: function() {\n\n      var bbox  = this.bbox()\n        , trans = this.transform()\n\n      bbox.x  += trans.x\n      bbox.x2 += trans.x\n      bbox.cx += trans.x\n\n      bbox.y  += trans.y\n      bbox.y2 += trans.y\n      bbox.cy += trans.y\n\n      return bbox\n    }\n  }\n\n  // Add parent method\n, construct: {\n    // Create a group element\n    group: function() {\n      return this.put(new SVG.G)\n    }\n  }\n})\n\nSVG.Doc = SVG.invent({\n  // Initialize node\n  create: function(element) {\n    if (element) {\n      // ensure the presence of a dom element\n      element = typeof element == 'string' ?\n        document.getElementById(element) :\n        element\n\n      // If the target is an svg element, use that element as the main wrapper.\n      // This allows svg.js to work with svg documents as well.\n      if (element.nodeName == 'svg') {\n        this.constructor.call(this, element)\n      } else {\n        this.constructor.call(this, SVG.create('svg'))\n        element.appendChild(this.node)\n        this.size('100%', '100%')\n      }\n\n      // set svg element attributes and ensure defs node\n      this.namespace().defs()\n    }\n  }\n\n  // Inherit from\n, inherit: SVG.Container\n\n  // Add class methods\n, extend: {\n    // Add namespaces\n    namespace: function() {\n      return this\n        .attr({ xmlns: SVG.ns, version: '1.1' })\n        .attr('xmlns:xlink', SVG.xlink, SVG.xmlns)\n        .attr('xmlns:svgjs', SVG.svgjs, SVG.xmlns)\n    }\n    // Creates and returns defs element\n  , defs: function() {\n      if (!this._defs) {\n        var defs\n\n        // Find or create a defs element in this instance\n        if (defs = this.node.getElementsByTagName('defs')[0])\n          this._defs = SVG.adopt(defs)\n        else\n          this._defs = new SVG.Defs\n\n        // Make sure the defs node is at the end of the stack\n        this.node.appendChild(this._defs.node)\n      }\n\n      return this._defs\n    }\n    // custom parent method\n  , parent: function() {\n      if(!this.node.parentNode || this.node.parentNode.nodeName == '#document') return null\n      return this.node.parentNode\n    }\n    // Fix for possible sub-pixel offset. See:\n    // https://bugzilla.mozilla.org/show_bug.cgi?id=608812\n  , spof: function() {\n      var pos = this.node.getScreenCTM()\n\n      if (pos)\n        this\n          .style('left', (-pos.e % 1) + 'px')\n          .style('top',  (-pos.f % 1) + 'px')\n\n      return this\n    }\n\n      // Removes the doc from the DOM\n  , remove: function() {\n      if(this.parent()) {\n        this.parent().removeChild(this.node)\n      }\n\n      return this\n    }\n  , clear: function() {\n      // remove children\n      while(this.node.hasChildNodes())\n        this.node.removeChild(this.node.lastChild)\n\n      // remove defs reference\n      delete this._defs\n\n      // add back parser\n      if(!SVG.parser.draw.parentNode)\n        this.node.appendChild(SVG.parser.draw)\n\n      return this\n    }\n  , clone: function (parent) {\n      // write dom data to the dom so the clone can pickup the data\n      this.writeDataToDom()\n\n      // get reference to node\n      var node = this.node\n\n      // clone element and assign new id\n      var clone = assignNewId(node.cloneNode(true))\n\n      // insert the clone in the given parent or after myself\n      if(parent) {\n        (parent.node || parent).appendChild(clone.node)\n      } else {\n        node.parentNode.insertBefore(clone.node, node.nextSibling)\n      }\n\n      return clone\n    }\n  }\n\n})\n\n// ### This module adds backward / forward functionality to elements.\n\n//\nSVG.extend(SVG.Element, {\n  // Get all siblings, including myself\n  siblings: function() {\n    return this.parent().children()\n  }\n  // Get the curent position siblings\n, position: function() {\n    return this.parent().index(this)\n  }\n  // Get the next element (will return null if there is none)\n, next: function() {\n    return this.siblings()[this.position() + 1]\n  }\n  // Get the next element (will return null if there is none)\n, previous: function() {\n    return this.siblings()[this.position() - 1]\n  }\n  // Send given element one step forward\n, forward: function() {\n    var i = this.position() + 1\n      , p = this.parent()\n\n    // move node one step forward\n    p.removeElement(this).add(this, i)\n\n    // make sure defs node is always at the top\n    if (p instanceof SVG.Doc)\n      p.node.appendChild(p.defs().node)\n\n    return this\n  }\n  // Send given element one step backward\n, backward: function() {\n    var i = this.position()\n\n    if (i > 0)\n      this.parent().removeElement(this).add(this, i - 1)\n\n    return this\n  }\n  // Send given element all the way to the front\n, front: function() {\n    var p = this.parent()\n\n    // Move node forward\n    p.node.appendChild(this.node)\n\n    // Make sure defs node is always at the top\n    if (p instanceof SVG.Doc)\n      p.node.appendChild(p.defs().node)\n\n    return this\n  }\n  // Send given element all the way to the back\n, back: function() {\n    if (this.position() > 0)\n      this.parent().removeElement(this).add(this, 0)\n\n    return this\n  }\n  // Inserts a given element before the targeted element\n, before: function(element) {\n    element.remove()\n\n    var i = this.position()\n\n    this.parent().add(element, i)\n\n    return this\n  }\n  // Insters a given element after the targeted element\n, after: function(element) {\n    element.remove()\n\n    var i = this.position()\n\n    this.parent().add(element, i + 1)\n\n    return this\n  }\n\n})\nSVG.Mask = SVG.invent({\n  // Initialize node\n  create: function() {\n    this.constructor.call(this, SVG.create('mask'))\n\n    // keep references to masked elements\n    this.targets = []\n  }\n\n  // Inherit from\n, inherit: SVG.Container\n\n  // Add class methods\n, extend: {\n    // Unmask all masked elements and remove itself\n    remove: function() {\n      // unmask all targets\n      for (var i = this.targets.length - 1; i >= 0; i--)\n        if (this.targets[i])\n          this.targets[i].unmask()\n      this.targets = []\n\n      // remove mask from parent\n      SVG.Element.prototype.remove.call(this)\n\n      return this\n    }\n  }\n\n  // Add parent method\n, construct: {\n    // Create masking element\n    mask: function() {\n      return this.defs().put(new SVG.Mask)\n    }\n  }\n})\n\n\nSVG.extend(SVG.Element, {\n  // Distribute mask to svg element\n  maskWith: function(element) {\n    // use given mask or create a new one\n    this.masker = element instanceof SVG.Mask ? element : this.parent().mask().add(element)\n\n    // store reverence on self in mask\n    this.masker.targets.push(this)\n\n    // apply mask\n    return this.attr('mask', 'url(\"#' + this.masker.attr('id') + '\")')\n  }\n  // Unmask element\n, unmask: function() {\n    delete this.masker\n    return this.attr('mask', null)\n  }\n\n})\n\nSVG.ClipPath = SVG.invent({\n  // Initialize node\n  create: function() {\n    this.constructor.call(this, SVG.create('clipPath'))\n\n    // keep references to clipped elements\n    this.targets = []\n  }\n\n  // Inherit from\n, inherit: SVG.Container\n\n  // Add class methods\n, extend: {\n    // Unclip all clipped elements and remove itself\n    remove: function() {\n      // unclip all targets\n      for (var i = this.targets.length - 1; i >= 0; i--)\n        if (this.targets[i])\n          this.targets[i].unclip()\n      this.targets = []\n\n      // remove clipPath from parent\n      this.parent().removeElement(this)\n\n      return this\n    }\n  }\n\n  // Add parent method\n, construct: {\n    // Create clipping element\n    clip: function() {\n      return this.defs().put(new SVG.ClipPath)\n    }\n  }\n})\n\n//\nSVG.extend(SVG.Element, {\n  // Distribute clipPath to svg element\n  clipWith: function(element) {\n    // use given clip or create a new one\n    this.clipper = element instanceof SVG.ClipPath ? element : this.parent().clip().add(element)\n\n    // store reverence on self in mask\n    this.clipper.targets.push(this)\n\n    // apply mask\n    return this.attr('clip-path', 'url(\"#' + this.clipper.attr('id') + '\")')\n  }\n  // Unclip element\n, unclip: function() {\n    delete this.clipper\n    return this.attr('clip-path', null)\n  }\n\n})\nSVG.Gradient = SVG.invent({\n  // Initialize node\n  create: function(type) {\n    this.constructor.call(this, SVG.create(type + 'Gradient'))\n\n    // store type\n    this.type = type\n  }\n\n  // Inherit from\n, inherit: SVG.Container\n\n  // Add class methods\n, extend: {\n    // Add a color stop\n    at: function(offset, color, opacity) {\n      return this.put(new SVG.Stop).update(offset, color, opacity)\n    }\n    // Update gradient\n  , update: function(block) {\n      // remove all stops\n      this.clear()\n\n      // invoke passed block\n      if (typeof block == 'function')\n        block.call(this, this)\n\n      return this\n    }\n    // Return the fill id\n  , fill: function() {\n      return 'url(#' + this.id() + ')'\n    }\n    // Alias string convertion to fill\n  , toString: function() {\n      return this.fill()\n    }\n    // custom attr to handle transform\n  , attr: function(a, b, c) {\n      if(a == 'transform') a = 'gradientTransform'\n      return SVG.Container.prototype.attr.call(this, a, b, c)\n    }\n  }\n\n  // Add parent method\n, construct: {\n    // Create gradient element in defs\n    gradient: function(type, block) {\n      return this.defs().gradient(type, block)\n    }\n  }\n})\n\n// Add animatable methods to both gradient and fx module\nSVG.extend(SVG.Gradient, SVG.FX, {\n  // From position\n  from: function(x, y) {\n    return (this._target || this).type == 'radial' ?\n      this.attr({ fx: new SVG.Number(x), fy: new SVG.Number(y) }) :\n      this.attr({ x1: new SVG.Number(x), y1: new SVG.Number(y) })\n  }\n  // To position\n, to: function(x, y) {\n    return (this._target || this).type == 'radial' ?\n      this.attr({ cx: new SVG.Number(x), cy: new SVG.Number(y) }) :\n      this.attr({ x2: new SVG.Number(x), y2: new SVG.Number(y) })\n  }\n})\n\n// Base gradient generation\nSVG.extend(SVG.Defs, {\n  // define gradient\n  gradient: function(type, block) {\n    return this.put(new SVG.Gradient(type)).update(block)\n  }\n\n})\n\nSVG.Stop = SVG.invent({\n  // Initialize node\n  create: 'stop'\n\n  // Inherit from\n, inherit: SVG.Element\n\n  // Add class methods\n, extend: {\n    // add color stops\n    update: function(o) {\n      if (typeof o == 'number' || o instanceof SVG.Number) {\n        o = {\n          offset:  arguments[0]\n        , color:   arguments[1]\n        , opacity: arguments[2]\n        }\n      }\n\n      // set attributes\n      if (o.opacity != null) this.attr('stop-opacity', o.opacity)\n      if (o.color   != null) this.attr('stop-color', o.color)\n      if (o.offset  != null) this.attr('offset', new SVG.Number(o.offset))\n\n      return this\n    }\n  }\n\n})\n\nSVG.Pattern = SVG.invent({\n  // Initialize node\n  create: 'pattern'\n\n  // Inherit from\n, inherit: SVG.Container\n\n  // Add class methods\n, extend: {\n    // Return the fill id\n    fill: function() {\n      return 'url(#' + this.id() + ')'\n    }\n    // Update pattern by rebuilding\n  , update: function(block) {\n      // remove content\n      this.clear()\n\n      // invoke passed block\n      if (typeof block == 'function')\n        block.call(this, this)\n\n      return this\n    }\n    // Alias string convertion to fill\n  , toString: function() {\n      return this.fill()\n    }\n    // custom attr to handle transform\n  , attr: function(a, b, c) {\n      if(a == 'transform') a = 'patternTransform'\n      return SVG.Container.prototype.attr.call(this, a, b, c)\n    }\n\n  }\n\n  // Add parent method\n, construct: {\n    // Create pattern element in defs\n    pattern: function(width, height, block) {\n      return this.defs().pattern(width, height, block)\n    }\n  }\n})\n\nSVG.extend(SVG.Defs, {\n  // Define gradient\n  pattern: function(width, height, block) {\n    return this.put(new SVG.Pattern).update(block).attr({\n      x:            0\n    , y:            0\n    , width:        width\n    , height:       height\n    , patternUnits: 'userSpaceOnUse'\n    })\n  }\n\n})\nSVG.Shape = SVG.invent({\n  // Initialize node\n  create: function(element) {\n    this.constructor.call(this, element)\n  }\n\n  // Inherit from\n, inherit: SVG.Element\n\n})\n\nSVG.Bare = SVG.invent({\n  // Initialize\n  create: function(element, inherit) {\n    // construct element\n    this.constructor.call(this, SVG.create(element))\n\n    // inherit custom methods\n    if (inherit)\n      for (var method in inherit.prototype)\n        if (typeof inherit.prototype[method] === 'function')\n          this[method] = inherit.prototype[method]\n  }\n\n  // Inherit from\n, inherit: SVG.Element\n\n  // Add methods\n, extend: {\n    // Insert some plain text\n    words: function(text) {\n      // remove contents\n      while (this.node.hasChildNodes())\n        this.node.removeChild(this.node.lastChild)\n\n      // create text node\n      this.node.appendChild(document.createTextNode(text))\n\n      return this\n    }\n  }\n})\n\n\nSVG.extend(SVG.Parent, {\n  // Create an element that is not described by SVG.js\n  element: function(element, inherit) {\n    return this.put(new SVG.Bare(element, inherit))\n  }\n})\n\nSVG.Symbol = SVG.invent({\n  // Initialize node\n  create: 'symbol'\n\n  // Inherit from\n, inherit: SVG.Container\n\n, construct: {\n    // create symbol\n    symbol: function() {\n      return this.put(new SVG.Symbol)\n    }\n  }\n})\n\nSVG.Use = SVG.invent({\n  // Initialize node\n  create: 'use'\n\n  // Inherit from\n, inherit: SVG.Shape\n\n  // Add class methods\n, extend: {\n    // Use element as a reference\n    element: function(element, file) {\n      // Set lined element\n      return this.attr('href', (file || '') + '#' + element, SVG.xlink)\n    }\n  }\n\n  // Add parent method\n, construct: {\n    // Create a use element\n    use: function(element, file) {\n      return this.put(new SVG.Use).element(element, file)\n    }\n  }\n})\nSVG.Rect = SVG.invent({\n  // Initialize node\n  create: 'rect'\n\n  // Inherit from\n, inherit: SVG.Shape\n\n  // Add parent method\n, construct: {\n    // Create a rect element\n    rect: function(width, height) {\n      return this.put(new SVG.Rect()).size(width, height)\n    }\n  }\n})\nSVG.Circle = SVG.invent({\n  // Initialize node\n  create: 'circle'\n\n  // Inherit from\n, inherit: SVG.Shape\n\n  // Add parent method\n, construct: {\n    // Create circle element, based on ellipse\n    circle: function(size) {\n      return this.put(new SVG.Circle).rx(new SVG.Number(size).divide(2)).move(0, 0)\n    }\n  }\n})\n\nSVG.extend(SVG.Circle, SVG.FX, {\n  // Radius x value\n  rx: function(rx) {\n    return this.attr('r', rx)\n  }\n  // Alias radius x value\n, ry: function(ry) {\n    return this.rx(ry)\n  }\n})\n\nSVG.Ellipse = SVG.invent({\n  // Initialize node\n  create: 'ellipse'\n\n  // Inherit from\n, inherit: SVG.Shape\n\n  // Add parent method\n, construct: {\n    // Create an ellipse\n    ellipse: function(width, height) {\n      return this.put(new SVG.Ellipse).size(width, height).move(0, 0)\n    }\n  }\n})\n\nSVG.extend(SVG.Ellipse, SVG.Rect, SVG.FX, {\n  // Radius x value\n  rx: function(rx) {\n    return this.attr('rx', rx)\n  }\n  // Radius y value\n, ry: function(ry) {\n    return this.attr('ry', ry)\n  }\n})\n\n// Add common method\nSVG.extend(SVG.Circle, SVG.Ellipse, {\n    // Move over x-axis\n    x: function(x) {\n      return x == null ? this.cx() - this.rx() : this.cx(x + this.rx())\n    }\n    // Move over y-axis\n  , y: function(y) {\n      return y == null ? this.cy() - this.ry() : this.cy(y + this.ry())\n    }\n    // Move by center over x-axis\n  , cx: function(x) {\n      return x == null ? this.attr('cx') : this.attr('cx', x)\n    }\n    // Move by center over y-axis\n  , cy: function(y) {\n      return y == null ? this.attr('cy') : this.attr('cy', y)\n    }\n    // Set width of element\n  , width: function(width) {\n      return width == null ? this.rx() * 2 : this.rx(new SVG.Number(width).divide(2))\n    }\n    // Set height of element\n  , height: function(height) {\n      return height == null ? this.ry() * 2 : this.ry(new SVG.Number(height).divide(2))\n    }\n    // Custom size function\n  , size: function(width, height) {\n      var p = proportionalSize(this, width, height)\n\n      return this\n        .rx(new SVG.Number(p.width).divide(2))\n        .ry(new SVG.Number(p.height).divide(2))\n    }\n})\nSVG.Line = SVG.invent({\n  // Initialize node\n  create: 'line'\n\n  // Inherit from\n, inherit: SVG.Shape\n\n  // Add class methods\n, extend: {\n    // Get array\n    array: function() {\n      return new SVG.PointArray([\n        [ this.attr('x1'), this.attr('y1') ]\n      , [ this.attr('x2'), this.attr('y2') ]\n      ])\n    }\n    // Overwrite native plot() method\n  , plot: function(x1, y1, x2, y2) {\n      if (x1 == null)\n        return this.array()\n      else if (typeof y1 !== 'undefined')\n        x1 = { x1: x1, y1: y1, x2: x2, y2: y2 }\n      else\n        x1 = new SVG.PointArray(x1).toLine()\n\n      return this.attr(x1)\n    }\n    // Move by left top corner\n  , move: function(x, y) {\n      return this.attr(this.array().move(x, y).toLine())\n    }\n    // Set element size to given width and height\n  , size: function(width, height) {\n      var p = proportionalSize(this, width, height)\n\n      return this.attr(this.array().size(p.width, p.height).toLine())\n    }\n  }\n\n  // Add parent method\n, construct: {\n    // Create a line element\n    line: function(x1, y1, x2, y2) {\n      // make sure plot is called as a setter\n      // x1 is not necessarily a number, it can also be an array, a string and a SVG.PointArray\n      return SVG.Line.prototype.plot.apply(\n        this.put(new SVG.Line)\n      , x1 != null ? [x1, y1, x2, y2] : [0, 0, 0, 0]\n      )\n    }\n  }\n})\n\nSVG.Polyline = SVG.invent({\n  // Initialize node\n  create: 'polyline'\n\n  // Inherit from\n, inherit: SVG.Shape\n\n  // Add parent method\n, construct: {\n    // Create a wrapped polyline element\n    polyline: function(p) {\n      // make sure plot is called as a setter\n      return this.put(new SVG.Polyline).plot(p || new SVG.PointArray)\n    }\n  }\n})\n\nSVG.Polygon = SVG.invent({\n  // Initialize node\n  create: 'polygon'\n\n  // Inherit from\n, inherit: SVG.Shape\n\n  // Add parent method\n, construct: {\n    // Create a wrapped polygon element\n    polygon: function(p) {\n      // make sure plot is called as a setter\n      return this.put(new SVG.Polygon).plot(p || new SVG.PointArray)\n    }\n  }\n})\n\n// Add polygon-specific functions\nSVG.extend(SVG.Polyline, SVG.Polygon, {\n  // Get array\n  array: function() {\n    return this._array || (this._array = new SVG.PointArray(this.attr('points')))\n  }\n  // Plot new path\n, plot: function(p) {\n    return (p == null) ?\n      this.array() :\n      this.clear().attr('points', typeof p == 'string' ? p : (this._array = new SVG.PointArray(p)))\n  }\n  // Clear array cache\n, clear: function() {\n    delete this._array\n    return this\n  }\n  // Move by left top corner\n, move: function(x, y) {\n    return this.attr('points', this.array().move(x, y))\n  }\n  // Set element size to given width and height\n, size: function(width, height) {\n    var p = proportionalSize(this, width, height)\n\n    return this.attr('points', this.array().size(p.width, p.height))\n  }\n\n})\n\n// unify all point to point elements\nSVG.extend(SVG.Line, SVG.Polyline, SVG.Polygon, {\n  // Define morphable array\n  morphArray:  SVG.PointArray\n  // Move by left top corner over x-axis\n, x: function(x) {\n    return x == null ? this.bbox().x : this.move(x, this.bbox().y)\n  }\n  // Move by left top corner over y-axis\n, y: function(y) {\n    return y == null ? this.bbox().y : this.move(this.bbox().x, y)\n  }\n  // Set width of element\n, width: function(width) {\n    var b = this.bbox()\n\n    return width == null ? b.width : this.size(width, b.height)\n  }\n  // Set height of element\n, height: function(height) {\n    var b = this.bbox()\n\n    return height == null ? b.height : this.size(b.width, height)\n  }\n})\nSVG.Path = SVG.invent({\n  // Initialize node\n  create: 'path'\n\n  // Inherit from\n, inherit: SVG.Shape\n\n  // Add class methods\n, extend: {\n    // Define morphable array\n    morphArray:  SVG.PathArray\n    // Get array\n  , array: function() {\n      return this._array || (this._array = new SVG.PathArray(this.attr('d')))\n    }\n    // Plot new path\n  , plot: function(d) {\n      return (d == null) ?\n        this.array() :\n        this.clear().attr('d', typeof d == 'string' ? d : (this._array = new SVG.PathArray(d)))\n    }\n    // Clear array cache\n  , clear: function() {\n      delete this._array\n      return this\n    }\n    // Move by left top corner\n  , move: function(x, y) {\n      return this.attr('d', this.array().move(x, y))\n    }\n    // Move by left top corner over x-axis\n  , x: function(x) {\n      return x == null ? this.bbox().x : this.move(x, this.bbox().y)\n    }\n    // Move by left top corner over y-axis\n  , y: function(y) {\n      return y == null ? this.bbox().y : this.move(this.bbox().x, y)\n    }\n    // Set element size to given width and height\n  , size: function(width, height) {\n      var p = proportionalSize(this, width, height)\n\n      return this.attr('d', this.array().size(p.width, p.height))\n    }\n    // Set width of element\n  , width: function(width) {\n      return width == null ? this.bbox().width : this.size(width, this.bbox().height)\n    }\n    // Set height of element\n  , height: function(height) {\n      return height == null ? this.bbox().height : this.size(this.bbox().width, height)\n    }\n\n  }\n\n  // Add parent method\n, construct: {\n    // Create a wrapped path element\n    path: function(d) {\n      // make sure plot is called as a setter\n      return this.put(new SVG.Path).plot(d || new SVG.PathArray)\n    }\n  }\n})\n\nSVG.Image = SVG.invent({\n  // Initialize node\n  create: 'image'\n\n  // Inherit from\n, inherit: SVG.Shape\n\n  // Add class methods\n, extend: {\n    // (re)load image\n    load: function(url) {\n      if (!url) return this\n\n      var self = this\n        , img  = new window.Image()\n\n      // preload image\n      SVG.on(img, 'load', function() {\n        SVG.off(img)\n\n        var p = self.parent(SVG.Pattern)\n\n        if(p === null) return\n\n        // ensure image size\n        if (self.width() == 0 && self.height() == 0)\n          self.size(img.width, img.height)\n\n        // ensure pattern size if not set\n        if (p && p.width() == 0 && p.height() == 0)\n          p.size(self.width(), self.height())\n\n        // callback\n        if (typeof self._loaded === 'function')\n          self._loaded.call(self, {\n            width:  img.width\n          , height: img.height\n          , ratio:  img.width / img.height\n          , url:    url\n          })\n      })\n\n      SVG.on(img, 'error', function(e){\n        SVG.off(img)\n\n        if (typeof self._error === 'function'){\n            self._error.call(self, e)\n        }\n      })\n\n      return this.attr('href', (img.src = this.src = url), SVG.xlink)\n    }\n    // Add loaded callback\n  , loaded: function(loaded) {\n      this._loaded = loaded\n      return this\n    }\n\n  , error: function(error) {\n      this._error = error\n      return this\n    }\n  }\n\n  // Add parent method\n, construct: {\n    // create image element, load image and set its size\n    image: function(source, width, height) {\n      return this.put(new SVG.Image).load(source).size(width || 0, height || width || 0)\n    }\n  }\n\n})\nSVG.Text = SVG.invent({\n  // Initialize node\n  create: function() {\n    this.constructor.call(this, SVG.create('text'))\n\n    this.dom.leading = new SVG.Number(1.3)    // store leading value for rebuilding\n    this._rebuild = true                      // enable automatic updating of dy values\n    this._build   = false                     // disable build mode for adding multiple lines\n\n    // set default font\n    this.attr('font-family', SVG.defaults.attrs['font-family'])\n  }\n\n  // Inherit from\n, inherit: SVG.Shape\n\n  // Add class methods\n, extend: {\n    // Move over x-axis\n    x: function(x) {\n      // act as getter\n      if (x == null)\n        return this.attr('x')\n\n      return this.attr('x', x)\n    }\n    // Move over y-axis\n  , y: function(y) {\n      var oy = this.attr('y')\n        , o  = typeof oy === 'number' ? oy - this.bbox().y : 0\n\n      // act as getter\n      if (y == null)\n        return typeof oy === 'number' ? oy - o : oy\n\n      return this.attr('y', typeof y.valueOf() === 'number' ? y + o : y)\n    }\n    // Move center over x-axis\n  , cx: function(x) {\n      return x == null ? this.bbox().cx : this.x(x - this.bbox().width / 2)\n    }\n    // Move center over y-axis\n  , cy: function(y) {\n      return y == null ? this.bbox().cy : this.y(y - this.bbox().height / 2)\n    }\n    // Set the text content\n  , text: function(text) {\n      // act as getter\n      if (typeof text === 'undefined'){\n        var text = ''\n        var children = this.node.childNodes\n        for(var i = 0, len = children.length; i < len; ++i){\n\n          // add newline if its not the first child and newLined is set to true\n          if(i != 0 && children[i].nodeType != 3 && SVG.adopt(children[i]).dom.newLined == true){\n            text += '\\n'\n          }\n\n          // add content of this node\n          text += children[i].textContent\n        }\n\n        return text\n      }\n\n      // remove existing content\n      this.clear().build(true)\n\n      if (typeof text === 'function') {\n        // call block\n        text.call(this, this)\n\n      } else {\n        // store text and make sure text is not blank\n        text = text.split('\\n')\n\n        // build new lines\n        for (var i = 0, il = text.length; i < il; i++)\n          this.tspan(text[i]).newLine()\n      }\n\n      // disable build mode and rebuild lines\n      return this.build(false).rebuild()\n    }\n    // Set font size\n  , size: function(size) {\n      return this.attr('font-size', size).rebuild()\n    }\n    // Set / get leading\n  , leading: function(value) {\n      // act as getter\n      if (value == null)\n        return this.dom.leading\n\n      // act as setter\n      this.dom.leading = new SVG.Number(value)\n\n      return this.rebuild()\n    }\n    // Get all the first level lines\n  , lines: function() {\n      var node = (this.textPath && this.textPath() || this).node\n\n      // filter tspans and map them to SVG.js instances\n      var lines = SVG.utils.map(SVG.utils.filterSVGElements(node.childNodes), function(el){\n        return SVG.adopt(el)\n      })\n\n      // return an instance of SVG.set\n      return new SVG.Set(lines)\n    }\n    // Rebuild appearance type\n  , rebuild: function(rebuild) {\n      // store new rebuild flag if given\n      if (typeof rebuild == 'boolean')\n        this._rebuild = rebuild\n\n      // define position of all lines\n      if (this._rebuild) {\n        var self = this\n          , blankLineOffset = 0\n          , dy = this.dom.leading * new SVG.Number(this.attr('font-size'))\n\n        this.lines().each(function() {\n          if (this.dom.newLined) {\n            if (!self.textPath())\n              this.attr('x', self.attr('x'))\n            if(this.text() == '\\n') {\n              blankLineOffset += dy\n            }else{\n              this.attr('dy', dy + blankLineOffset)\n              blankLineOffset = 0\n            }\n          }\n        })\n\n        this.fire('rebuild')\n      }\n\n      return this\n    }\n    // Enable / disable build mode\n  , build: function(build) {\n      this._build = !!build\n      return this\n    }\n    // overwrite method from parent to set data properly\n  , setData: function(o){\n      this.dom = o\n      this.dom.leading = new SVG.Number(o.leading || 1.3)\n      return this\n    }\n  }\n\n  // Add parent method\n, construct: {\n    // Create text element\n    text: function(text) {\n      return this.put(new SVG.Text).text(text)\n    }\n    // Create plain text element\n  , plain: function(text) {\n      return this.put(new SVG.Text).plain(text)\n    }\n  }\n\n})\n\nSVG.Tspan = SVG.invent({\n  // Initialize node\n  create: 'tspan'\n\n  // Inherit from\n, inherit: SVG.Shape\n\n  // Add class methods\n, extend: {\n    // Set text content\n    text: function(text) {\n      if(text == null) return this.node.textContent + (this.dom.newLined ? '\\n' : '')\n\n      typeof text === 'function' ? text.call(this, this) : this.plain(text)\n\n      return this\n    }\n    // Shortcut dx\n  , dx: function(dx) {\n      return this.attr('dx', dx)\n    }\n    // Shortcut dy\n  , dy: function(dy) {\n      return this.attr('dy', dy)\n    }\n    // Create new line\n  , newLine: function() {\n      // fetch text parent\n      var t = this.parent(SVG.Text)\n\n      // mark new line\n      this.dom.newLined = true\n\n      // apply new hy¡n\n      return this.dy(t.dom.leading * t.attr('font-size')).attr('x', t.x())\n    }\n  }\n\n})\n\nSVG.extend(SVG.Text, SVG.Tspan, {\n  // Create plain text node\n  plain: function(text) {\n    // clear if build mode is disabled\n    if (this._build === false)\n      this.clear()\n\n    // create text node\n    this.node.appendChild(document.createTextNode(text))\n\n    return this\n  }\n  // Create a tspan\n, tspan: function(text) {\n    var node  = (this.textPath && this.textPath() || this).node\n      , tspan = new SVG.Tspan\n\n    // clear if build mode is disabled\n    if (this._build === false)\n      this.clear()\n\n    // add new tspan\n    node.appendChild(tspan.node)\n\n    return tspan.text(text)\n  }\n  // Clear all lines\n, clear: function() {\n    var node = (this.textPath && this.textPath() || this).node\n\n    // remove existing child nodes\n    while (node.hasChildNodes())\n      node.removeChild(node.lastChild)\n\n    return this\n  }\n  // Get length of text element\n, length: function() {\n    return this.node.getComputedTextLength()\n  }\n})\n\nSVG.TextPath = SVG.invent({\n  // Initialize node\n  create: 'textPath'\n\n  // Inherit from\n, inherit: SVG.Parent\n\n  // Define parent class\n, parent: SVG.Text\n\n  // Add parent method\n, construct: {\n    morphArray: SVG.PathArray\n    // Create path for text to run on\n  , path: function(d) {\n      // create textPath element\n      var path  = new SVG.TextPath\n        , track = this.doc().defs().path(d)\n\n      // move lines to textpath\n      while (this.node.hasChildNodes())\n        path.node.appendChild(this.node.firstChild)\n\n      // add textPath element as child node\n      this.node.appendChild(path.node)\n\n      // link textPath to path and add content\n      path.attr('href', '#' + track, SVG.xlink)\n\n      return this\n    }\n    // return the array of the path track element\n  , array: function() {\n      var track = this.track()\n\n      return track ? track.array() : null\n    }\n    // Plot path if any\n  , plot: function(d) {\n      var track = this.track()\n        , pathArray = null\n\n      if (track) {\n        pathArray = track.plot(d)\n      }\n\n      return (d == null) ? pathArray : this\n    }\n    // Get the path track element\n  , track: function() {\n      var path = this.textPath()\n\n      if (path)\n        return path.reference('href')\n    }\n    // Get the textPath child\n  , textPath: function() {\n      if (this.node.firstChild && this.node.firstChild.nodeName == 'textPath')\n        return SVG.adopt(this.node.firstChild)\n    }\n  }\n})\n\nSVG.Nested = SVG.invent({\n  // Initialize node\n  create: function() {\n    this.constructor.call(this, SVG.create('svg'))\n\n    this.style('overflow', 'visible')\n  }\n\n  // Inherit from\n, inherit: SVG.Container\n\n  // Add parent method\n, construct: {\n    // Create nested svg document\n    nested: function() {\n      return this.put(new SVG.Nested)\n    }\n  }\n})\nSVG.A = SVG.invent({\n  // Initialize node\n  create: 'a'\n\n  // Inherit from\n, inherit: SVG.Container\n\n  // Add class methods\n, extend: {\n    // Link url\n    to: function(url) {\n      return this.attr('href', url, SVG.xlink)\n    }\n    // Link show attribute\n  , show: function(target) {\n      return this.attr('show', target, SVG.xlink)\n    }\n    // Link target attribute\n  , target: function(target) {\n      return this.attr('target', target)\n    }\n  }\n\n  // Add parent method\n, construct: {\n    // Create a hyperlink element\n    link: function(url) {\n      return this.put(new SVG.A).to(url)\n    }\n  }\n})\n\nSVG.extend(SVG.Element, {\n  // Create a hyperlink element\n  linkTo: function(url) {\n    var link = new SVG.A\n\n    if (typeof url == 'function')\n      url.call(link, link)\n    else\n      link.to(url)\n\n    return this.parent().put(link).put(this)\n  }\n\n})\nSVG.Marker = SVG.invent({\n  // Initialize node\n  create: 'marker'\n\n  // Inherit from\n, inherit: SVG.Container\n\n  // Add class methods\n, extend: {\n    // Set width of element\n    width: function(width) {\n      return this.attr('markerWidth', width)\n    }\n    // Set height of element\n  , height: function(height) {\n      return this.attr('markerHeight', height)\n    }\n    // Set marker refX and refY\n  , ref: function(x, y) {\n      return this.attr('refX', x).attr('refY', y)\n    }\n    // Update marker\n  , update: function(block) {\n      // remove all content\n      this.clear()\n\n      // invoke passed block\n      if (typeof block == 'function')\n        block.call(this, this)\n\n      return this\n    }\n    // Return the fill id\n  , toString: function() {\n      return 'url(#' + this.id() + ')'\n    }\n  }\n\n  // Add parent method\n, construct: {\n    marker: function(width, height, block) {\n      // Create marker element in defs\n      return this.defs().marker(width, height, block)\n    }\n  }\n\n})\n\nSVG.extend(SVG.Defs, {\n  // Create marker\n  marker: function(width, height, block) {\n    // Set default viewbox to match the width and height, set ref to cx and cy and set orient to auto\n    return this.put(new SVG.Marker)\n      .size(width, height)\n      .ref(width / 2, height / 2)\n      .viewbox(0, 0, width, height)\n      .attr('orient', 'auto')\n      .update(block)\n  }\n\n})\n\nSVG.extend(SVG.Line, SVG.Polyline, SVG.Polygon, SVG.Path, {\n  // Create and attach markers\n  marker: function(marker, width, height, block) {\n    var attr = ['marker']\n\n    // Build attribute name\n    if (marker != 'all') attr.push(marker)\n    attr = attr.join('-')\n\n    // Set marker attribute\n    marker = arguments[1] instanceof SVG.Marker ?\n      arguments[1] :\n      this.doc().marker(width, height, block)\n\n    return this.attr(attr, marker)\n  }\n\n})\n// Define list of available attributes for stroke and fill\nvar sugar = {\n  stroke: ['color', 'width', 'opacity', 'linecap', 'linejoin', 'miterlimit', 'dasharray', 'dashoffset']\n, fill:   ['color', 'opacity', 'rule']\n, prefix: function(t, a) {\n    return a == 'color' ? t : t + '-' + a\n  }\n}\n\n// Add sugar for fill and stroke\n;['fill', 'stroke'].forEach(function(m) {\n  var i, extension = {}\n\n  extension[m] = function(o) {\n    if (typeof o == 'undefined')\n      return this\n    if (typeof o == 'string' || SVG.Color.isRgb(o) || (o && typeof o.fill === 'function'))\n      this.attr(m, o)\n\n    else\n      // set all attributes from sugar.fill and sugar.stroke list\n      for (i = sugar[m].length - 1; i >= 0; i--)\n        if (o[sugar[m][i]] != null)\n          this.attr(sugar.prefix(m, sugar[m][i]), o[sugar[m][i]])\n\n    return this\n  }\n\n  SVG.extend(SVG.Element, SVG.FX, extension)\n\n})\n\nSVG.extend(SVG.Element, SVG.FX, {\n  // Map rotation to transform\n  rotate: function(d, cx, cy) {\n    return this.transform({ rotation: d, cx: cx, cy: cy })\n  }\n  // Map skew to transform\n, skew: function(x, y, cx, cy) {\n    return arguments.length == 1  || arguments.length == 3 ?\n      this.transform({ skew: x, cx: y, cy: cx }) :\n      this.transform({ skewX: x, skewY: y, cx: cx, cy: cy })\n  }\n  // Map scale to transform\n, scale: function(x, y, cx, cy) {\n    return arguments.length == 1  || arguments.length == 3 ?\n      this.transform({ scale: x, cx: y, cy: cx }) :\n      this.transform({ scaleX: x, scaleY: y, cx: cx, cy: cy })\n  }\n  // Map translate to transform\n, translate: function(x, y) {\n    return this.transform({ x: x, y: y })\n  }\n  // Map flip to transform\n, flip: function(a, o) {\n    o = typeof a == 'number' ? a : o\n    return this.transform({ flip: a || 'both', offset: o })\n  }\n  // Map matrix to transform\n, matrix: function(m) {\n    return this.attr('transform', new SVG.Matrix(arguments.length == 6 ? [].slice.call(arguments) : m))\n  }\n  // Opacity\n, opacity: function(value) {\n    return this.attr('opacity', value)\n  }\n  // Relative move over x axis\n, dx: function(x) {\n    return this.x(new SVG.Number(x).plus(this instanceof SVG.FX ? 0 : this.x()), true)\n  }\n  // Relative move over y axis\n, dy: function(y) {\n    return this.y(new SVG.Number(y).plus(this instanceof SVG.FX ? 0 : this.y()), true)\n  }\n  // Relative move over x and y axes\n, dmove: function(x, y) {\n    return this.dx(x).dy(y)\n  }\n})\n\nSVG.extend(SVG.Rect, SVG.Ellipse, SVG.Circle, SVG.Gradient, SVG.FX, {\n  // Add x and y radius\n  radius: function(x, y) {\n    var type = (this._target || this).type;\n    return type == 'radial' || type == 'circle' ?\n      this.attr('r', new SVG.Number(x)) :\n      this.rx(x).ry(y == null ? x : y)\n  }\n})\n\nSVG.extend(SVG.Path, {\n  // Get path length\n  length: function() {\n    return this.node.getTotalLength()\n  }\n  // Get point at length\n, pointAt: function(length) {\n    return this.node.getPointAtLength(length)\n  }\n})\n\nSVG.extend(SVG.Parent, SVG.Text, SVG.Tspan, SVG.FX, {\n  // Set font\n  font: function(a, v) {\n    if (typeof a == 'object') {\n      for (v in a) this.font(v, a[v])\n    }\n\n    return a == 'leading' ?\n        this.leading(v) :\n      a == 'anchor' ?\n        this.attr('text-anchor', v) :\n      a == 'size' || a == 'family' || a == 'weight' || a == 'stretch' || a == 'variant' || a == 'style' ?\n        this.attr('font-'+ a, v) :\n        this.attr(a, v)\n  }\n})\n\nSVG.Set = SVG.invent({\n  // Initialize\n  create: function(members) {\n    // Set initial state\n    Array.isArray(members) ? this.members = members : this.clear()\n  }\n\n  // Add class methods\n, extend: {\n    // Add element to set\n    add: function() {\n      var i, il, elements = [].slice.call(arguments)\n\n      for (i = 0, il = elements.length; i < il; i++)\n        this.members.push(elements[i])\n\n      return this\n    }\n    // Remove element from set\n  , remove: function(element) {\n      var i = this.index(element)\n\n      // remove given child\n      if (i > -1)\n        this.members.splice(i, 1)\n\n      return this\n    }\n    // Iterate over all members\n  , each: function(block) {\n      for (var i = 0, il = this.members.length; i < il; i++)\n        block.apply(this.members[i], [i, this.members])\n\n      return this\n    }\n    // Restore to defaults\n  , clear: function() {\n      // initialize store\n      this.members = []\n\n      return this\n    }\n    // Get the length of a set\n  , length: function() {\n      return this.members.length\n    }\n    // Checks if a given element is present in set\n  , has: function(element) {\n      return this.index(element) >= 0\n    }\n    // retuns index of given element in set\n  , index: function(element) {\n      return this.members.indexOf(element)\n    }\n    // Get member at given index\n  , get: function(i) {\n      return this.members[i]\n    }\n    // Get first member\n  , first: function() {\n      return this.get(0)\n    }\n    // Get last member\n  , last: function() {\n      return this.get(this.members.length - 1)\n    }\n    // Default value\n  , valueOf: function() {\n      return this.members\n    }\n    // Get the bounding box of all members included or empty box if set has no items\n  , bbox: function(){\n      // return an empty box of there are no members\n      if (this.members.length == 0)\n        return new SVG.RBox()\n\n      // get the first rbox and update the target bbox\n      var rbox = this.members[0].rbox(this.members[0].doc())\n\n      this.each(function() {\n        // user rbox for correct position and visual representation\n        rbox = rbox.merge(this.rbox(this.doc()))\n      })\n\n      return rbox\n    }\n  }\n\n  // Add parent method\n, construct: {\n    // Create a new set\n    set: function(members) {\n      return new SVG.Set(members)\n    }\n  }\n})\n\nSVG.FX.Set = SVG.invent({\n  // Initialize node\n  create: function(set) {\n    // store reference to set\n    this.set = set\n  }\n\n})\n\n// Alias methods\nSVG.Set.inherit = function() {\n  var m\n    , methods = []\n\n  // gather shape methods\n  for(var m in SVG.Shape.prototype)\n    if (typeof SVG.Shape.prototype[m] == 'function' && typeof SVG.Set.prototype[m] != 'function')\n      methods.push(m)\n\n  // apply shape aliasses\n  methods.forEach(function(method) {\n    SVG.Set.prototype[method] = function() {\n      for (var i = 0, il = this.members.length; i < il; i++)\n        if (this.members[i] && typeof this.members[i][method] == 'function')\n          this.members[i][method].apply(this.members[i], arguments)\n\n      return method == 'animate' ? (this.fx || (this.fx = new SVG.FX.Set(this))) : this\n    }\n  })\n\n  // clear methods for the next round\n  methods = []\n\n  // gather fx methods\n  for(var m in SVG.FX.prototype)\n    if (typeof SVG.FX.prototype[m] == 'function' && typeof SVG.FX.Set.prototype[m] != 'function')\n      methods.push(m)\n\n  // apply fx aliasses\n  methods.forEach(function(method) {\n    SVG.FX.Set.prototype[method] = function() {\n      for (var i = 0, il = this.set.members.length; i < il; i++)\n        this.set.members[i].fx[method].apply(this.set.members[i].fx, arguments)\n\n      return this\n    }\n  })\n}\n\n\n\n\nSVG.extend(SVG.Element, {\n  // Store data values on svg nodes\n  data: function(a, v, r) {\n    if (typeof a == 'object') {\n      for (v in a)\n        this.data(v, a[v])\n\n    } else if (arguments.length < 2) {\n      try {\n        return JSON.parse(this.attr('data-' + a))\n      } catch(e) {\n        return this.attr('data-' + a)\n      }\n\n    } else {\n      this.attr(\n        'data-' + a\n      , v === null ?\n          null :\n        r === true || typeof v === 'string' || typeof v === 'number' ?\n          v :\n          JSON.stringify(v)\n      )\n    }\n\n    return this\n  }\n})\nSVG.extend(SVG.Element, {\n  // Remember arbitrary data\n  remember: function(k, v) {\n    // remember every item in an object individually\n    if (typeof arguments[0] == 'object')\n      for (var v in k)\n        this.remember(v, k[v])\n\n    // retrieve memory\n    else if (arguments.length == 1)\n      return this.memory()[k]\n\n    // store memory\n    else\n      this.memory()[k] = v\n\n    return this\n  }\n\n  // Erase a given memory\n, forget: function() {\n    if (arguments.length == 0)\n      this._memory = {}\n    else\n      for (var i = arguments.length - 1; i >= 0; i--)\n        delete this.memory()[arguments[i]]\n\n    return this\n  }\n\n  // Initialize or return local memory object\n, memory: function() {\n    return this._memory || (this._memory = {})\n  }\n\n})\n// Method for getting an element by id\nSVG.get = function(id) {\n  var node = document.getElementById(idFromReference(id) || id)\n  return SVG.adopt(node)\n}\n\n// Select elements by query string\nSVG.select = function(query, parent) {\n  return new SVG.Set(\n    SVG.utils.map((parent || document).querySelectorAll(query), function(node) {\n      return SVG.adopt(node)\n    })\n  )\n}\n\nSVG.extend(SVG.Parent, {\n  // Scoped select method\n  select: function(query) {\n    return SVG.select(query, this.node)\n  }\n\n})\nfunction pathRegReplace(a, b, c, d) {\n  return c + d.replace(SVG.regex.dots, ' .')\n}\n\n// creates deep clone of array\nfunction array_clone(arr){\n  var clone = arr.slice(0)\n  for(var i = clone.length; i--;){\n    if(Array.isArray(clone[i])){\n      clone[i] = array_clone(clone[i])\n    }\n  }\n  return clone\n}\n\n// tests if a given element is instance of an object\nfunction is(el, obj){\n  return el instanceof obj\n}\n\n// tests if a given selector matches an element\nfunction matches(el, selector) {\n  return (el.matches || el.matchesSelector || el.msMatchesSelector || el.mozMatchesSelector || el.webkitMatchesSelector || el.oMatchesSelector).call(el, selector);\n}\n\n// Convert dash-separated-string to camelCase\nfunction camelCase(s) {\n  return s.toLowerCase().replace(/-(.)/g, function(m, g) {\n    return g.toUpperCase()\n  })\n}\n\n// Capitalize first letter of a string\nfunction capitalize(s) {\n  return s.charAt(0).toUpperCase() + s.slice(1)\n}\n\n// Ensure to six-based hex\nfunction fullHex(hex) {\n  return hex.length == 4 ?\n    [ '#',\n      hex.substring(1, 2), hex.substring(1, 2)\n    , hex.substring(2, 3), hex.substring(2, 3)\n    , hex.substring(3, 4), hex.substring(3, 4)\n    ].join('') : hex\n}\n\n// Component to hex value\nfunction compToHex(comp) {\n  var hex = comp.toString(16)\n  return hex.length == 1 ? '0' + hex : hex\n}\n\n// Calculate proportional width and height values when necessary\nfunction proportionalSize(element, width, height) {\n  if (width == null || height == null) {\n    var box = element.bbox()\n\n    if (width == null)\n      width = box.width / box.height * height\n    else if (height == null)\n      height = box.height / box.width * width\n  }\n\n  return {\n    width:  width\n  , height: height\n  }\n}\n\n// Delta transform point\nfunction deltaTransformPoint(matrix, x, y) {\n  return {\n    x: x * matrix.a + y * matrix.c + 0\n  , y: x * matrix.b + y * matrix.d + 0\n  }\n}\n\n// Map matrix array to object\nfunction arrayToMatrix(a) {\n  return { a: a[0], b: a[1], c: a[2], d: a[3], e: a[4], f: a[5] }\n}\n\n// Parse matrix if required\nfunction parseMatrix(matrix) {\n  if (!(matrix instanceof SVG.Matrix))\n    matrix = new SVG.Matrix(matrix)\n\n  return matrix\n}\n\n// Add centre point to transform object\nfunction ensureCentre(o, target) {\n  o.cx = o.cx == null ? target.bbox().cx : o.cx\n  o.cy = o.cy == null ? target.bbox().cy : o.cy\n}\n\n// PathArray Helpers\nfunction arrayToString(a) {\n  for (var i = 0, il = a.length, s = ''; i < il; i++) {\n    s += a[i][0]\n\n    if (a[i][1] != null) {\n      s += a[i][1]\n\n      if (a[i][2] != null) {\n        s += ' '\n        s += a[i][2]\n\n        if (a[i][3] != null) {\n          s += ' '\n          s += a[i][3]\n          s += ' '\n          s += a[i][4]\n\n          if (a[i][5] != null) {\n            s += ' '\n            s += a[i][5]\n            s += ' '\n            s += a[i][6]\n\n            if (a[i][7] != null) {\n              s += ' '\n              s += a[i][7]\n            }\n          }\n        }\n      }\n    }\n  }\n\n  return s + ' '\n}\n\n// Deep new id assignment\nfunction assignNewId(node) {\n  // do the same for SVG child nodes as well\n  for (var i = node.childNodes.length - 1; i >= 0; i--)\n    if (node.childNodes[i] instanceof window.SVGElement)\n      assignNewId(node.childNodes[i])\n\n  return SVG.adopt(node).id(SVG.eid(node.nodeName))\n}\n\n// Add more bounding box properties\nfunction fullBox(b) {\n  if (b.x == null) {\n    b.x      = 0\n    b.y      = 0\n    b.width  = 0\n    b.height = 0\n  }\n\n  b.w  = b.width\n  b.h  = b.height\n  b.x2 = b.x + b.width\n  b.y2 = b.y + b.height\n  b.cx = b.x + b.width / 2\n  b.cy = b.y + b.height / 2\n\n  return b\n}\n\n// Get id from reference string\nfunction idFromReference(url) {\n  var m = (url || '').toString().match(SVG.regex.reference)\n\n  if (m) return m[1]\n}\n\n// If values like 1e-88 are passed, this is not a valid 32 bit float,\n// but in those cases, we are so close to 0 that 0 works well!\nfunction float32String(v) {\n  return Math.abs(v) > 1e-37 ? v : 0\n}\n\n// Create matrix array for looping\nvar abcdef = 'abcdef'.split('')\n\n// Add CustomEvent to IE9 and IE10\nif (typeof window.CustomEvent !== 'function') {\n  // Code from: https://developer.mozilla.org/en-US/docs/Web/API/CustomEvent\n  var CustomEventPoly = function(event, options) {\n    options = options || { bubbles: false, cancelable: false, detail: undefined }\n    var e = document.createEvent('CustomEvent')\n    e.initCustomEvent(event, options.bubbles, options.cancelable, options.detail)\n    return e\n  }\n\n  CustomEventPoly.prototype = window.Event.prototype\n\n  SVG.CustomEvent = CustomEventPoly\n} else {\n  SVG.CustomEvent = window.CustomEvent\n}\n\n// requestAnimationFrame / cancelAnimationFrame Polyfill with fallback based on Paul Irish\n(function(w) {\n  var lastTime = 0\n  var vendors = ['moz', 'webkit']\n\n  for(var x = 0; x < vendors.length && !window.requestAnimationFrame; ++x) {\n    w.requestAnimationFrame = w[vendors[x] + 'RequestAnimationFrame']\n    w.cancelAnimationFrame  = w[vendors[x] + 'CancelAnimationFrame'] ||\n                              w[vendors[x] + 'CancelRequestAnimationFrame']\n  }\n\n  w.requestAnimationFrame = w.requestAnimationFrame ||\n    function(callback) {\n      var currTime = new Date().getTime()\n      var timeToCall = Math.max(0, 16 - (currTime - lastTime))\n\n      var id = w.setTimeout(function() {\n        callback(currTime + timeToCall)\n      }, timeToCall)\n\n      lastTime = currTime + timeToCall\n      return id\n    }\n\n  w.cancelAnimationFrame = w.cancelAnimationFrame || w.clearTimeout;\n\n}(window))\n\nreturn SVG\n\n}));","import SVG from 'svg.js';\n\nimport {\n    degToRad,\n    sliceToDeg,\n    hasNestedSlices,\n    createElementNS\n} from '../helpers/utils';\n\nimport { IOMenu } from \"../interfaces/IOMenu\";\n\nclass Menu extends IOMenu {\n    /**\n     *\n     * @param selector {string} css id for parent element where menu should be triggered\n     * @param options {Object} Options for menu\n     */\n    constructor(selector, options){\n        super();\n        this.options = options;\n        this.svg     = SVG(selector);\n        this.slices  = [];\n\n        const {\n            padding,\n            innerCircleWidth,\n            firstLevelSliceWidth,\n            nthLevelSliceWidth\n        } = this.options;\n\n        this.size                = (\n            innerCircleWidth * 2\n            + firstLevelSliceWidth * 2\n            + nthLevelSliceWidth * 2\n            + padding * 2\n        );\n        this.radius              = (this.size/2)-(padding/2);\n        this.radiusWithPadding   = (this.size/2);\n        this.innerCircleDiameter = (innerCircleWidth*2)-padding;\n        this.degForStep          = 0;\n        this.radForStep          = 0;\n        this.hasNestedSlices     = null;\n\n        this.svg\n            .size(this.size, this.size)\n            .viewbox(0,0,this.size, this.size)\n            .addClass(this.options.elClass)\n            .style(this.options.styles.hidden)\n            .style(this.options.styles.defaults);\n    }\n\n    /**\n     * Map config array to Slice class instances\n     *\n     * @returns {Menu}\n     */\n    draw(){\n        this.hasNestedSlices     = hasNestedSlices(this.slices);\n        this.degForStep          = sliceToDeg(this.slices.length);\n        this.radForStep          = degToRad(this.degForStep);\n\n        if(!this.hasNestedSlices){\n            this.size = this.size - this.options.nthLevelSliceWidth * 2;\n\n            this.radius              = (this.size/2)-(this.options.padding/2);\n            this.radiusWithPadding   = (this.size/2);\n\n            this.svg\n                .size(this.size, this.size)\n                .viewbox(0,0,this.size, this.size);\n        }\n\n        this.slices.forEach((slice, i) => {\n            slice.draw({\n                radius            : this.options.innerCircleWidth + this.options.firstLevelSliceWidth,\n                radiusWithPadding : this.radiusWithPadding,\n                number            : i,\n                degForStep        : this.degForStep,\n                radForStep        : this.radForStep,\n                circleDegOrigin   : this.options.circleDegOrigin,\n                innerCircleRadius : this.options.innerCircleWidth,\n                nthLevelSliceWidth: this.options.nthLevelSliceWidth\n            });\n        });\n\n        this.createInnerCircle();\n\n        return this;\n    }\n\n    /**\n     * Create inner circle, where we can put some additional content\n     *\n     * @returns {Menu}\n     */\n    createInnerCircle(){\n        if(this.innerCircle)\n            this.innerCircle.remove();\n\n        const contentElement = createElementNS('foreignObject', {\n            width : this.innerCircleDiameter,\n            height: this.innerCircleDiameter\n        });\n\n        contentElement.innerHTML = `\n            <div xmlns=\"http://www.w3.org/1999/xhtml\" \n                style=\"width: ${this.innerCircleDiameter}px; height: ${this.innerCircleDiameter}px; border-radius: 50%; overflow: hidden;\"\n            >\n                ${this.options.innerCircleContent}\n            </div>\n        `;\n\n        this.innerCircle = this.svg\n            .group()\n            .size(this.innerCircleDiameter)\n            .move(\n                this.size/2,\n                this.size/2\n            )\n            .attr('id', 'inner-circle')\n            .scale(0.01);\n\n        this.innerCircle\n            .circle(this.innerCircleDiameter)\n            .style(this.options.styles.innerCircle)\n\n        this.innerCircle.node.appendChild(contentElement);\n\n        return this;\n    }\n\n    /**\n     * Destroys instance\n     */\n    destroy(){\n        this.svg.remove();\n        this.svg = null;\n\n        this.slices.forEach(slice => slice.destroy());\n        this.slices = [];\n    }\n\n    // todo extract these two to ... decorator pattern?\n    /**\n     * Show menu and triggers show on linked Slices\n     *\n     * @param time {number} Time for innerCircle\n     * @param sliceTime {number} Time for slices\n     * @returns {Promise}\n     */\n    show(time = this.options.menuShowTime, sliceTime){\n        this.svg.style(this.options.styles.visible);\n\n        return new Promise(resolve => {\n            this.innerCircle.animate(time).scale(1).after(() => {\n                let promisesArr =  this.slices.map(slice => slice.show(sliceTime));\n\n                Promise.all(promisesArr).then(resolve);\n            });\n        });\n    }\n\n    /**\n     * Hide menu and triggers hide on linked Slices\n     *\n     * @param time {number} Time for innerCircle\n     * @param sliceTime {number} Time for slices\n     * @returns {Promise}\n     */\n    hide(time = this.options.menuHideTime, sliceTime){\n        const childrenPromisesArr = this.slices.map(slice => slice.hideChildrens(sliceTime));\n\n        return new Promise((resolve) => {\n            Promise.all(childrenPromisesArr).then(() => {\n                const promisesArr = this.slices.map(slice => slice.hide(sliceTime));\n\n                Promise.all(promisesArr).then(() => {\n                    this.innerCircle.animate(time).scale(0.01).after(() =>{\n                        this.svg.style(this.options.styles.hidden);\n                        resolve();\n                    });\n                });\n            });\n        });\n\n    }\n}\n\nexport default Menu;\n","import CircleMenu from './elements/OMenu';\nimport FirstLevelSlice from './elements/FirstLevelSlice';\nimport NthLevelSlice from './elements/NthLevelSlice';\nimport {\n    dumpExtend,\n    recursivelyForEachSlices,\n} from './helpers/utils';\nimport {\n    SLICE_EVENTS,\n    OPTIONS_DEFAULTS,\n    EXTERNAL_API_EVENTS\n} from './config/defaults';\nimport { IEvent } from \"./interfaces/IEvent\";\nimport { OMenuEventEmitter } from \"./helpers/OMenuEventEmitter\";\nimport { OMenuExternalEvent } from \"./helpers/oMenuEvents\";\nimport { positioningFunctions } from './helpers/positioningFunctions';\n\n/**\n * Simple factory function for Menu\n *\n * @param selector {string}\n * @param instanceOptions {Object}\n * @param defaultOptions {Object}\n * @returns {Menu}\n */\nconst createInstance = (selector, defaultOptions, instanceOptions) => {\n    const mappedSlices = instanceOptions.slices.map( slice => ({...defaultOptions.slice, ...slice}) );\n    const newMenuInstance = new CircleMenu(selector, instanceOptions.menu);\n\n    const createSlices = (slices, parent) => {\n        slices.forEach(sliceOptions => {\n            const isFirstLvl = parent instanceof CircleMenu;\n            const options = dumpExtend({}, (isFirstLvl\n                    ? instanceOptions.slice\n                    : instanceOptions.nthSlice\n                ),\n                sliceOptions\n            );\n\n            const slice = isFirstLvl\n                ? new FirstLevelSlice(newMenuInstance.svg, options)\n                : new NthLevelSlice(newMenuInstance.svg, options);\n\n            if(options.slices.length)\n                createSlices(options.slices, slice);\n\n            parent.pushSlice( slice );\n        });\n    };\n\n    createSlices(mappedSlices, newMenuInstance);\n\n    return newMenuInstance;\n};\n\n/**\n *\n * @param selector {string} dom element id\n * @param userOptions {object} oMenu options\n * @returns {{isOpen: *, on((Array<string>|string)=, Function): void, off(string, Function): boolean, triggerEvent(IEvent): void}}\n */\nconst externalApi = (selector, userOptions) => {\n    const targetElement = document.getElementById(selector);\n    let isOpen = false;\n    let pendingAnimation = false;\n\n    if(!targetElement)\n        throw new Error(`oMenu can't find element with id ${selector}`);\n\n    const defaultInstanceOptions = dumpExtend({}, OPTIONS_DEFAULTS, userOptions);\n\n    let menuInstance = null;\n\n    const api = new class extends OMenuEventEmitter {\n        get isOpen(){\n            return isOpen;\n        }\n    };\n\n    /**\n     * Default click listener, manages menu and slices state after click event\n     *\n     * @param ev\n     * @returns {*}\n     */\n    const embedOnClick = ev => {\n        if (ev.isSlice) {\n            if(!ev.hasNestedSlices)\n                return close(ev);\n\n            if (ev.target.isSlicesOpen) {\n                ev.target.slices.forEach(s => s.hide());\n                ev.target.isSlicesOpen = false;\n            }\n            else {\n                ev.target.slices.forEach(s => s.show());\n                ev.target.isSlicesOpen = true;\n            }\n        }\n    };\n\n    /**\n     *\n     * @param ev {IEvent|Event}\n     * @returns {*}\n     */\n    const close = ev => {\n        const sendEvent = type => {\n            const event = ev instanceof IEvent\n                ? new OMenuExternalEvent(ev, { type })\n                : new OMenuExternalEvent({\n                    type,\n                    target: null,\n                    originalEvent: ev\n                });\n\n            api.triggerEvent(event);\n        };\n\n        if(!isOpen || pendingAnimation)\n            return Promise.reject();\n\n        if(defaultInstanceOptions.menu.closeMenuOn)\n            document.removeEventListener(defaultInstanceOptions.menu.closeMenuOn, close);\n\n        pendingAnimation = true;\n\n        sendEvent(EXTERNAL_API_EVENTS.closeMenu);\n\n        return menuInstance\n            .hide()\n            .then(() => {\n                sendEvent(EXTERNAL_API_EVENTS.hideAnimationEnd);\n\n                menuInstance.destroy();\n\n                isOpen = false;\n                pendingAnimation = false;\n            });\n    };\n\n    /**\n     *\n     * @param ev {Event} event which triggers open menu, for positioning purposes\n     * @param dynamicOptions {object} dynamic options which will be merged\n     * with default, passed during externalApi fn call\n     * @returns {*}\n     */\n    const open = (ev, dynamicOptions) => {\n        api.triggerEvent(new OMenuExternalEvent({\n            type: EXTERNAL_API_EVENTS.openMenu,\n            target: null,\n            originalEvent: ev\n        }));\n\n        if(pendingAnimation)\n            return Promise.reject();\n\n        if(isOpen)\n            return close().then(() => open(ev, dynamicOptions));\n\n        pendingAnimation = true;\n\n        const instanceOptions = dumpExtend({}, defaultInstanceOptions, dynamicOptions);\n\n        menuInstance = createInstance(selector, defaultInstanceOptions, instanceOptions);\n\n        menuInstance.draw();\n\n        // start positioning menu block\n        if(!positioningFunctions[instanceOptions.menu.positioningMode])\n            throw new Error(`No positioning function for mode ${instanceOptions.menu.positioningMode}`);\n\n        positioningFunctions[instanceOptions.menu.positioningMode]({\n            menuInstance,\n            targetElement,\n            ev,\n        });\n\n        if(defaultInstanceOptions.menu.closeMenuOn)\n            document.addEventListener(defaultInstanceOptions.menu.closeMenuOn, close);\n\n        /**\n         * mapping internal events to external\n         */\n        recursivelyForEachSlices(menuInstance.slices,\n                slice => slice.on(Object.values(SLICE_EVENTS),\n                        ev => api.triggerEvent(new OMenuExternalEvent(ev))));\n\n        isOpen = true;\n\n        return menuInstance.show().then(() => {\n            pendingAnimation = false;\n\n            api.triggerEvent(new OMenuExternalEvent({\n                type: EXTERNAL_API_EVENTS.showAnimationEnd,\n                target: null,\n                originalEvent: ev\n            }));\n        });\n    };\n\n    /**\n     * trigger menu\n     *\n     * @param ev {Event}\n     */\n    const trigger = (ev) => {\n        ev.preventDefault();\n\n        if(isOpen)\n            close(ev);\n        else\n            open(ev);\n    };\n\n    api.trigger = trigger;\n    api.open = open;\n    api.close = close;\n\n    api.on(EXTERNAL_API_EVENTS.sliceClick, embedOnClick);\n\n    return api;\n};\n\nexport default externalApi;\n"],"sourceRoot":""}